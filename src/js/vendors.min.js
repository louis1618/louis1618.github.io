!function(t, e) {
    "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.AOS = e() : t.AOS = e()
}(this, function() {
    return n = [function(t, e, i) {
        "use strict";
        function n(t) {
            return t && t.__esModule ? t : {
                default: t
            }
        }
        function o() {
            f = (0,
            p.default)(),
            y()
        }
        var s = Object.assign || function(t) {
            for (var e = 1; e < arguments.length; e++) {
                var i, n = arguments[e];
                for (i in n)
                    Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i])
            }
            return t
        }
          , r = (n(i(1)),
        i(6))
          , a = n(r)
          , l = n(i(7))
          , c = n(i(8))
          , u = n(i(9))
          , d = n(i(10))
          , h = n(i(11))
          , p = n(i(14))
          , f = []
          , v = !1
          , m = {
            offset: 120,
            delay: 0,
            easing: "ease",
            duration: 400,
            disable: !1,
            once: !1,
            startEvent: "DOMContentLoaded",
            throttleDelay: 99,
            debounceDelay: 50,
            disableMutationObserver: !1
        }
          , y = function() {
            if (v = 0 < arguments.length && void 0 !== arguments[0] && arguments[0] ? !0 : v)
                return f = (0,
                h.default)(f, m),
                (0,
                d.default)(f, m.once),
                f
        };
        t.exports = {
            init: function(t) {
                m = s(m, t),
                f = (0,
                p.default)();
                var e, t = document.all && !window.atob;
                return !0 === (e = m.disable) || "mobile" === e && u.default.mobile() || "phone" === e && u.default.phone() || "tablet" === e && u.default.tablet() || "function" == typeof e && !0 === e() || t ? void f.forEach(function(t, e) {
                    t.node.removeAttribute("data-aos"),
                    t.node.removeAttribute("data-aos-easing"),
                    t.node.removeAttribute("data-aos-duration"),
                    t.node.removeAttribute("data-aos-delay")
                }) : (m.disableMutationObserver || c.default.isSupported() || (console.info('\n      aos: MutationObserver is not supported on this browser,\n      code mutations observing has been disabled.\n      You may have to call "refreshHard()" by yourself.\n    '),
                m.disableMutationObserver = !0),
                document.querySelector("body").setAttribute("data-aos-easing", m.easing),
                document.querySelector("body").setAttribute("data-aos-duration", m.duration),
                document.querySelector("body").setAttribute("data-aos-delay", m.delay),
                "DOMContentLoaded" === m.startEvent && -1 < ["complete", "interactive"].indexOf(document.readyState) ? y(!0) : ("load" === m.startEvent ? window : document).addEventListener(m.startEvent, function() {
                    y(!0)
                }),
                window.addEventListener("resize", (0,
                l.default)(y, m.debounceDelay, !0)),
                window.addEventListener("orientationchange", (0,
                l.default)(y, m.debounceDelay, !0)),
                window.addEventListener("scroll", (0,
                a.default)(function() {
                    (0,
                    d.default)(f, m.once)
                }, m.throttleDelay)),
                m.disableMutationObserver || c.default.ready("[data-aos]", o),
                f)
            },
            refresh: y,
            refreshHard: o
        }
    }
    , function(t, e) {}
    , , , , , function(p, t) {
        !function(t) {
            "use strict";
            function s(n, i, t) {
                function o(t) {
                    var e = l
                      , i = c;
                    return l = c = void 0,
                    f = t,
                    d = n.apply(i, e)
                }
                function s(t) {
                    var e = t - p;
                    return void 0 === p || i <= e || e < 0 || m && u <= t - f
                }
                function r() {
                    var t, e = z();
                    return s(e) ? a(e) : void (h = setTimeout(r, (t = i - ((e = e) - p),
                    m ? k(t, u - (e - f)) : t)))
                }
                function a(t) {
                    return h = void 0,
                    y && l ? o(t) : (l = c = void 0,
                    d)
                }
                function e() {
                    var t = z()
                      , e = s(t);
                    if (l = arguments,
                    c = this,
                    p = t,
                    e) {
                        if (void 0 === h)
                            return f = t = p,
                            h = setTimeout(r, i),
                            v ? o(t) : d;
                        if (m)
                            return h = setTimeout(r, i),
                            o(p)
                    }
                    return void 0 === h && (h = setTimeout(r, i)),
                    d
                }
                var l, c, u, d, h, p, f = 0, v = !1, m = !1, y = !0;
                if ("function" != typeof n)
                    throw new TypeError(w);
                return i = b(i) || 0,
                g(t) && (v = !!t.leading,
                m = "maxWait"in t,
                u = m ? x(b(t.maxWait) || 0, i) : u,
                y = "trailing"in t ? !!t.trailing : y),
                e.cancel = function() {
                    void 0 !== h && clearTimeout(h),
                    l = p = c = h = void (f = 0)
                }
                ,
                e.flush = function() {
                    return void 0 === h ? d : a(z())
                }
                ,
                e
            }
            function g(t) {
                var e = void 0 === t ? "undefined" : n(t);
                return t && ("object" == e || "function" == e)
            }
            function i(t) {
                return "symbol" == (void 0 === t ? "undefined" : n(t)) || !!(e = t) && "object" == (void 0 === e ? "undefined" : n(e)) && "[object Symbol]" == h.call(t);
                var e
            }
            function b(t) {
                if ("number" == typeof t)
                    return t;
                if (i(t))
                    return o;
                if ("string" != typeof (t = g(t) ? g(e = "function" == typeof t.valueOf ? t.valueOf() : t) ? e + "" : e : t))
                    return 0 === t ? t : +t;
                t = t.replace(r, "");
                var e = l.test(t);
                return e || c.test(t) ? u(t.slice(2), e ? 2 : 8) : a.test(t) ? o : +t
            }
            var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
              , w = "Expected a function"
              , o = NaN
              , r = /^\s+|\s+$/g
              , a = /^[-+]0x[0-9a-f]+$/i
              , l = /^0b[01]+$/i
              , c = /^0o[0-7]+$/i
              , u = parseInt
              , t = "object" == (void 0 === t ? "undefined" : n(t)) && t && t.Object === Object && t
              , e = "object" == ("undefined" == typeof self ? "undefined" : n(self)) && self && self.Object === Object && self
              , d = t || e || Function("return this")()
              , h = Object.prototype.toString
              , x = Math.max
              , k = Math.min
              , z = function() {
                return d.Date.now()
            };
            p.exports = function(t, e, i) {
                var n = !0
                  , o = !0;
                if ("function" != typeof t)
                    throw new TypeError(w);
                return g(i) && (n = "leading"in i ? !!i.leading : n,
                o = "trailing"in i ? !!i.trailing : o),
                s(t, e, {
                    leading: n,
                    maxWait: e,
                    trailing: o
                })
            }
        }
        .call(t, function() {
            return this
        }())
    }
    , function(p, t) {
        !function(t) {
            "use strict";
            function g(t) {
                var e = void 0 === t ? "undefined" : n(t);
                return t && ("object" == e || "function" == e)
            }
            function i(t) {
                return "symbol" == (void 0 === t ? "undefined" : n(t)) || !!(e = t) && "object" == (void 0 === e ? "undefined" : n(e)) && h.call(t) == s;
                var e
            }
            function b(t) {
                if ("number" == typeof t)
                    return t;
                if (i(t))
                    return o;
                if ("string" != typeof (t = g(t) ? g(e = "function" == typeof t.valueOf ? t.valueOf() : t) ? e + "" : e : t))
                    return 0 === t ? t : +t;
                t = t.replace(r, "");
                var e = l.test(t);
                return e || c.test(t) ? u(t.slice(2), e ? 2 : 8) : a.test(t) ? o : +t
            }
            function w() {
                return d.Date.now()
            }
            var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t
            }
            : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
            }
              , o = NaN
              , s = "[object Symbol]"
              , r = /^\s+|\s+$/g
              , a = /^[-+]0x[0-9a-f]+$/i
              , l = /^0b[01]+$/i
              , c = /^0o[0-7]+$/i
              , u = parseInt
              , t = "object" == (void 0 === t ? "undefined" : n(t)) && t && t.Object === Object && t
              , e = "object" == ("undefined" == typeof self ? "undefined" : n(self)) && self && self.Object === Object && self
              , d = t || e || Function("return this")()
              , h = Object.prototype.toString
              , x = Math.max
              , k = Math.min;
            p.exports = function(n, i, t) {
                function o(t) {
                    var e = l
                      , i = c;
                    return l = c = void 0,
                    f = t,
                    d = n.apply(i, e)
                }
                function s(t) {
                    var e = t - p;
                    return void 0 === p || i <= e || e < 0 || m && u <= t - f
                }
                function r() {
                    var t, e = w();
                    return s(e) ? a(e) : void (h = setTimeout(r, (t = i - ((e = e) - p),
                    m ? k(t, u - (e - f)) : t)))
                }
                function a(t) {
                    return h = void 0,
                    y && l ? o(t) : (l = c = void 0,
                    d)
                }
                function e() {
                    var t = w()
                      , e = s(t);
                    if (l = arguments,
                    c = this,
                    p = t,
                    e) {
                        if (void 0 === h)
                            return f = t = p,
                            h = setTimeout(r, i),
                            v ? o(t) : d;
                        if (m)
                            return h = setTimeout(r, i),
                            o(p)
                    }
                    return void 0 === h && (h = setTimeout(r, i)),
                    d
                }
                var l, c, u, d, h, p, f = 0, v = !1, m = !1, y = !0;
                if ("function" != typeof n)
                    throw new TypeError("Expected a function");
                return i = b(i) || 0,
                g(t) && (v = !!t.leading,
                m = "maxWait"in t,
                u = m ? x(b(t.maxWait) || 0, i) : u,
                y = "trailing"in t ? !!t.trailing : y),
                e.cancel = function() {
                    void 0 !== h && clearTimeout(h),
                    l = p = c = h = void (f = 0)
                }
                ,
                e.flush = function() {
                    return void 0 === h ? d : a(w())
                }
                ,
                e
            }
        }
        .call(t, function() {
            return this
        }())
    }
    , function(t, e) {
        "use strict";
        function o() {
            return window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver
        }
        function s(t) {
            t && t.forEach(function(t) {
                var e = Array.prototype.slice.call(t.addedNodes)
                  , t = Array.prototype.slice.call(t.removedNodes);
                if (function t(e) {
                    for (var i, n = void 0, n = 0; n < e.length; n += 1) {
                        if ((i = e[n]).dataset && i.dataset.aos)
                            return !0;
                        if (i.children && t(i.children))
                            return !0
                    }
                    return !1
                }(e.concat(t)))
                    return r()
            })
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var r = function() {};
        e.default = {
            isSupported: function() {
                return !!o()
            },
            ready: function(t, e) {
                var i = window.document
                  , n = new (o())(s);
                r = e,
                n.observe(i.documentElement, {
                    childList: !0,
                    subtree: !0,
                    removedNodes: !0
                })
            }
        }
    }
    , function(t, e) {
        "use strict";
        function i() {
            return navigator.userAgent || navigator.vendor || window.opera || ""
        }
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var n = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i
          , o = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i
          , s = /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i
          , r = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i
          , a = (function(t, e, i) {
            return e && c(t.prototype, e),
            i && c(t, i),
            t
        }(l, [{
            key: "phone",
            value: function() {
                var t = i();
                return !(!n.test(t) && !o.test(t.substr(0, 4)))
            }
        }, {
            key: "mobile",
            value: function() {
                var t = i();
                return !(!s.test(t) && !r.test(t.substr(0, 4)))
            }
        }, {
            key: "tablet",
            value: function() {
                return this.mobile() && !this.phone()
            }
        }]),
        l);
        function l() {
            if (!(this instanceof l))
                throw new TypeError("Cannot call a class as a function")
        }
        function c(t, e) {
            for (var i = 0; i < e.length; i++) {
                var n = e[i];
                n.enumerable = n.enumerable || !1,
                n.configurable = !0,
                "value"in n && (n.writable = !0),
                Object.defineProperty(t, n.key, n)
            }
        }
        e.default = new a
    }
    , function(t, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        e.default = function(t, s) {
            var r = window.pageYOffset
              , a = window.innerHeight;
            t.forEach(function(t, e) {
                var i, n, o;
                i = a + r,
                n = s,
                o = (t = t).node.getAttribute("data-aos-once"),
                i > t.position ? t.node.classList.add("aos-animate") : void 0 === o || "false" !== o && (n || "true" === o) || t.node.classList.remove("aos-animate")
            })
        }
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var i = i(12)
          , n = (i = i) && i.__esModule ? i : {
            default: i
        };
        e.default = function(t, i) {
            return t.forEach(function(t, e) {
                t.node.classList.add("aos-init"),
                t.position = (0,
                n.default)(t.node, i.offset)
            }),
            t
        }
    }
    , function(t, e, i) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        var i = i(13)
          , r = (i = i) && i.__esModule ? i : {
            default: i
        };
        e.default = function(t, e) {
            var i = 0
              , n = 0
              , o = window.innerHeight
              , s = {
                offset: t.getAttribute("data-aos-offset"),
                anchor: t.getAttribute("data-aos-anchor"),
                anchorPlacement: t.getAttribute("data-aos-anchor-placement")
            };
            switch (s.offset && !isNaN(s.offset) && (n = parseInt(s.offset)),
            s.anchor && document.querySelectorAll(s.anchor) && (t = document.querySelectorAll(s.anchor)[0]),
            i = (0,
            r.default)(t).top,
            s.anchorPlacement) {
            case "top-bottom":
                break;
            case "center-bottom":
                i += t.offsetHeight / 2;
                break;
            case "bottom-bottom":
                i += t.offsetHeight;
                break;
            case "top-center":
                i += o / 2;
                break;
            case "bottom-center":
                i += o / 2 + t.offsetHeight;
                break;
            case "center-center":
                i += o / 2 + t.offsetHeight / 2;
                break;
            case "top-top":
                i += o;
                break;
            case "bottom-top":
                i += t.offsetHeight + o;
                break;
            case "center-top":
                i += t.offsetHeight / 2 + o
            }
            return i + (n = s.anchorPlacement || s.offset || isNaN(e) ? n : e)
        }
    }
    , function(t, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        e.default = function(t) {
            for (var e = 0, i = 0; t && !isNaN(t.offsetLeft) && !isNaN(t.offsetTop); )
                e += t.offsetLeft - ("BODY" != t.tagName ? t.scrollLeft : 0),
                i += t.offsetTop - ("BODY" != t.tagName ? t.scrollTop : 0),
                t = t.offsetParent;
            return {
                top: i,
                left: e
            }
        }
    }
    , function(t, e) {
        "use strict";
        Object.defineProperty(e, "__esModule", {
            value: !0
        });
        e.default = function(t) {
            return t = t || document.querySelectorAll("[data-aos]"),
            Array.prototype.map.call(t, function(t) {
                return {
                    node: t
                }
            })
        }
    }
    ],
    o = {},
    i.m = n,
    i.c = o,
    i.p = "dist/",
    i(0);
    function i(t) {
        if (o[t])
            return o[t].exports;
        var e = o[t] = {
            exports: {},
            id: t,
            loaded: !1
        };
        return n[t].call(e.exports, e, e.exports, i),
        e.loaded = !0,
        e.exports
    }
    var n, o
}),
function(t, e) {
    "use strict";
    "object" == typeof module && "object" == typeof module.exports ? module.exports = t.document ? e(t, !0) : function(t) {
        if (t.document)
            return e(t);
        throw new Error("jQuery requires a window with a document")
    }
    : e(t)
}("undefined" != typeof window ? window : this, function(v, N) {
    "use strict";
    function m(t) {
        return "function" == typeof t && "number" != typeof t.nodeType
    }
    function y(t) {
        return null != t && t === t.window
    }
    var e = []
      , H = Object.getPrototypeOf
      , a = e.slice
      , q = e.flat ? function(t) {
        return e.flat.call(t)
    }
    : function(t) {
        return e.concat.apply([], t)
    }
      , j = e.push
      , _ = e.indexOf
      , V = {}
      , B = V.toString
      , F = V.hasOwnProperty
      , W = F.toString
      , $ = W.call(Object)
      , g = {}
      , b = v.document
      , U = {
        type: !0,
        src: !0,
        nonce: !0,
        noModule: !0
    };
    function G(t, e, i) {
        var n, o, s = (i = i || b).createElement("script");
        if (s.text = t,
        e)
            for (n in U)
                (o = e[n] || e.getAttribute && e.getAttribute(n)) && s.setAttribute(n, o);
        i.head.appendChild(s).parentNode.removeChild(s)
    }
    function f(t) {
        return null == t ? t + "" : "object" == typeof t || "function" == typeof t ? V[B.call(t)] || "object" : typeof t
    }
    var t = "3.5.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-deprecated/ajax-event-alias,-effects,-effects/Tween,-effects/animatedSelector"
      , w = function(t, e) {
        return new w.fn.init(t,e)
    };
    function X(t) {
        var e = !!t && "length"in t && t.length
          , i = f(t);
        return !m(t) && !y(t) && ("array" === i || 0 === e || "number" == typeof e && 0 < e && e - 1 in t)
    }
    w.fn = w.prototype = {
        jquery: t,
        constructor: w,
        length: 0,
        toArray: function() {
            return a.call(this)
        },
        get: function(t) {
            return null == t ? a.call(this) : t < 0 ? this[t + this.length] : this[t]
        },
        pushStack: function(t) {
            t = w.merge(this.constructor(), t);
            return t.prevObject = this,
            t
        },
        each: function(t) {
            return w.each(this, t)
        },
        map: function(i) {
            return this.pushStack(w.map(this, function(t, e) {
                return i.call(t, e, t)
            }))
        },
        slice: function() {
            return this.pushStack(a.apply(this, arguments))
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        even: function() {
            return this.pushStack(w.grep(this, function(t, e) {
                return (e + 1) % 2
            }))
        },
        odd: function() {
            return this.pushStack(w.grep(this, function(t, e) {
                return e % 2
            }))
        },
        eq: function(t) {
            var e = this.length
              , t = +t + (t < 0 ? e : 0);
            return this.pushStack(0 <= t && t < e ? [this[t]] : [])
        },
        end: function() {
            return this.prevObject || this.constructor()
        },
        push: j,
        sort: e.sort,
        splice: e.splice
    },
    w.extend = w.fn.extend = function() {
        var t, e, i, n, o, s = arguments[0] || {}, r = 1, a = arguments.length, l = !1;
        for ("boolean" == typeof s && (l = s,
        s = arguments[r] || {},
        r++),
        "object" == typeof s || m(s) || (s = {}),
        r === a && (s = this,
        r--); r < a; r++)
            if (null != (t = arguments[r]))
                for (e in t)
                    i = t[e],
                    "__proto__" !== e && s !== i && (l && i && (w.isPlainObject(i) || (n = Array.isArray(i))) ? (o = s[e],
                    o = n && !Array.isArray(o) ? [] : n || w.isPlainObject(o) ? o : {},
                    n = !1,
                    s[e] = w.extend(l, o, i)) : void 0 !== i && (s[e] = i));
        return s
    }
    ,
    w.extend({
        expando: "jQuery" + (t + Math.random()).replace(/\D/g, ""),
        isReady: !0,
        error: function(t) {
            throw new Error(t)
        },
        noop: function() {},
        isPlainObject: function(t) {
            return !(!t || "[object Object]" !== B.call(t)) && (!(t = H(t)) || "function" == typeof (t = F.call(t, "constructor") && t.constructor) && W.call(t) === $)
        },
        isEmptyObject: function(t) {
            for (var e in t)
                return !1;
            return !0
        },
        globalEval: function(t, e, i) {
            G(t, {
                nonce: e && e.nonce
            }, i)
        },
        each: function(t, e) {
            var i, n = 0;
            if (X(t))
                for (i = t.length; n < i && !1 !== e.call(t[n], n, t[n]); n++)
                    ;
            else
                for (n in t)
                    if (!1 === e.call(t[n], n, t[n]))
                        break;
            return t
        },
        makeArray: function(t, e) {
            e = e || [];
            return null != t && (X(Object(t)) ? w.merge(e, "string" == typeof t ? [t] : t) : j.call(e, t)),
            e
        },
        inArray: function(t, e, i) {
            return null == e ? -1 : _.call(e, t, i)
        },
        merge: function(t, e) {
            for (var i = +e.length, n = 0, o = t.length; n < i; n++)
                t[o++] = e[n];
            return t.length = o,
            t
        },
        grep: function(t, e, i) {
            for (var n = [], o = 0, s = t.length, r = !i; o < s; o++)
                !e(t[o], o) != r && n.push(t[o]);
            return n
        },
        map: function(t, e, i) {
            var n, o, s = 0, r = [];
            if (X(t))
                for (n = t.length; s < n; s++)
                    null != (o = e(t[s], s, i)) && r.push(o);
            else
                for (s in t)
                    null != (o = e(t[s], s, i)) && r.push(o);
            return q(r)
        },
        guid: 1,
        support: g
    }),
    "function" == typeof Symbol && (w.fn[Symbol.iterator] = e[Symbol.iterator]),
    w.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(t, e) {
        V["[object " + e + "]"] = e.toLowerCase()
    });
    function n(t, e, i) {
        for (var n = [], o = void 0 !== i; (t = t[e]) && 9 !== t.nodeType; )
            if (1 === t.nodeType) {
                if (o && w(t).is(i))
                    break;
                n.push(t)
            }
        return n
    }
    function Y(t, e) {
        for (var i = []; t; t = t.nextSibling)
            1 === t.nodeType && t !== e && i.push(t);
        return i
    }
    var t = function(N) {
        function d(t, e) {
            return t = "0x" + t.slice(1) - 65536,
            e || (t < 0 ? String.fromCharCode(65536 + t) : String.fromCharCode(t >> 10 | 55296, 1023 & t | 56320))
        }
        function H(t, e) {
            return e ? "\0" === t ? "�" : t.slice(0, -1) + "\\" + t.charCodeAt(t.length - 1).toString(16) + " " : "\\" + t
        }
        function q() {
            k()
        }
        var t, h, w, s, j, p, _, V, x, l, c, k, z, i, C, f, n, o, v, A = "sizzle" + +new Date, u = N.document, S = 0, B = 0, F = M(), W = M(), $ = M(), m = M(), U = function(t, e) {
            return t === e && (c = !0),
            0
        }, G = {}.hasOwnProperty, e = [], X = e.pop, Y = e.push, T = e.push, J = e.slice, g = function(t, e) {
            for (var i = 0, n = t.length; i < n; i++)
                if (t[i] === e)
                    return i;
            return -1
        }, Q = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", r = "[\\x20\\t\\r\\n\\f]", a = "(?:\\\\[\\da-fA-F]{1,6}" + r + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", K = "\\[" + r + "*(" + a + ")(?:" + r + "*([*^$|!~]?=)" + r + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + a + "))|)" + r + "*\\]", Z = ":(" + a + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + K + ")*)|.*)\\)|)", tt = new RegExp(r + "+","g"), y = new RegExp("^" + r + "+|((?:^|[^\\\\])(?:\\\\.)*)" + r + "+$","g"), et = new RegExp("^" + r + "*," + r + "*"), it = new RegExp("^" + r + "*([>+~]|" + r + ")" + r + "*"), nt = new RegExp(r + "|>"), ot = new RegExp(Z), st = new RegExp("^" + a + "$"), b = {
            ID: new RegExp("^#(" + a + ")"),
            CLASS: new RegExp("^\\.(" + a + ")"),
            TAG: new RegExp("^(" + a + "|[*])"),
            ATTR: new RegExp("^" + K),
            PSEUDO: new RegExp("^" + Z),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + r + "*(even|odd|(([+-]|)(\\d*)n|)" + r + "*(?:([+-]|)" + r + "*(\\d+)|))" + r + "*\\)|)","i"),
            bool: new RegExp("^(?:" + Q + ")$","i"),
            needsContext: new RegExp("^" + r + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + r + "*((?:-\\d)?\\d*)" + r + "*\\)|)(?=[^-]|$)","i")
        }, rt = /HTML$/i, at = /^(?:input|select|textarea|button)$/i, lt = /^h\d$/i, E = /^[^{]+\{\s*\[native \w/, ct = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, ut = /[+~]/, P = new RegExp("\\\\[\\da-fA-F]{1,6}" + r + "?|\\\\([^\\r\\n\\f])","g"), dt = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, ht = gt(function(t) {
            return !0 === t.disabled && "fieldset" === t.nodeName.toLowerCase()
        }, {
            dir: "parentNode",
            next: "legend"
        });
        try {
            T.apply(e = J.call(u.childNodes), u.childNodes),
            e[u.childNodes.length].nodeType
        } catch (t) {
            T = {
                apply: e.length ? function(t, e) {
                    Y.apply(t, J.call(e))
                }
                : function(t, e) {
                    for (var i = t.length, n = 0; t[i++] = e[n++]; )
                        ;
                    t.length = i - 1
                }
            }
        }
        function O(e, t, i, n) {
            var o, s, r, a, l, c, u = t && t.ownerDocument, d = t ? t.nodeType : 9;
            if (i = i || [],
            "string" != typeof e || !e || 1 !== d && 9 !== d && 11 !== d)
                return i;
            if (!n && (k(t),
            t = t || z,
            C)) {
                if (11 !== d && (a = ct.exec(e)))
                    if (o = a[1]) {
                        if (9 === d) {
                            if (!(c = t.getElementById(o)))
                                return i;
                            if (c.id === o)
                                return i.push(c),
                                i
                        } else if (u && (c = u.getElementById(o)) && v(t, c) && c.id === o)
                            return i.push(c),
                            i
                    } else {
                        if (a[2])
                            return T.apply(i, t.getElementsByTagName(e)),
                            i;
                        if ((o = a[3]) && h.getElementsByClassName && t.getElementsByClassName)
                            return T.apply(i, t.getElementsByClassName(o)),
                            i
                    }
                if (h.qsa && !m[e + " "] && (!f || !f.test(e)) && (1 !== d || "object" !== t.nodeName.toLowerCase())) {
                    if (c = e,
                    u = t,
                    1 === d && (nt.test(e) || it.test(e))) {
                        for ((u = ut.test(e) && mt(t.parentNode) || t) === t && h.scope || ((r = t.getAttribute("id")) ? r = r.replace(dt, H) : t.setAttribute("id", r = A)),
                        s = (l = p(e)).length; s--; )
                            l[s] = (r ? "#" + r : ":scope") + " " + I(l[s]);
                        c = l.join(",")
                    }
                    try {
                        return T.apply(i, u.querySelectorAll(c)),
                        i
                    } catch (t) {
                        m(e, !0)
                    } finally {
                        r === A && t.removeAttribute("id")
                    }
                }
            }
            return V(e.replace(y, "$1"), t, i, n)
        }
        function M() {
            var i = [];
            function n(t, e) {
                return i.push(t + " ") > w.cacheLength && delete n[i.shift()],
                n[t + " "] = e
            }
            return n
        }
        function D(t) {
            return t[A] = !0,
            t
        }
        function L(t) {
            var e = z.createElement("fieldset");
            try {
                return !!t(e)
            } catch (t) {
                return !1
            } finally {
                e.parentNode && e.parentNode.removeChild(e)
            }
        }
        function pt(t, e) {
            for (var i = t.split("|"), n = i.length; n--; )
                w.attrHandle[i[n]] = e
        }
        function ft(t, e) {
            var i = e && t
              , n = i && 1 === t.nodeType && 1 === e.nodeType && t.sourceIndex - e.sourceIndex;
            if (n)
                return n;
            if (i)
                for (; i = i.nextSibling; )
                    if (i === e)
                        return -1;
            return t ? 1 : -1
        }
        function vt(e) {
            return function(t) {
                return "form"in t ? t.parentNode && !1 === t.disabled ? "label"in t ? "label"in t.parentNode ? t.parentNode.disabled === e : t.disabled === e : t.isDisabled === e || t.isDisabled !== !e && ht(t) === e : t.disabled === e : "label"in t && t.disabled === e
            }
        }
        function R(r) {
            return D(function(s) {
                return s = +s,
                D(function(t, e) {
                    for (var i, n = r([], t.length, s), o = n.length; o--; )
                        t[i = n[o]] && (t[i] = !(e[i] = t[i]))
                })
            })
        }
        function mt(t) {
            return t && void 0 !== t.getElementsByTagName && t
        }
        for (t in h = O.support = {},
        j = O.isXML = function(t) {
            var e = t.namespaceURI
              , t = (t.ownerDocument || t).documentElement;
            return !rt.test(e || t && t.nodeName || "HTML")
        }
        ,
        k = O.setDocument = function(t) {
            var t = t ? t.ownerDocument || t : u;
            return t != z && 9 === t.nodeType && t.documentElement && (i = (z = t).documentElement,
            C = !j(z),
            u != z && (t = z.defaultView) && t.top !== t && (t.addEventListener ? t.addEventListener("unload", q, !1) : t.attachEvent && t.attachEvent("onunload", q)),
            h.scope = L(function(t) {
                return i.appendChild(t).appendChild(z.createElement("div")),
                void 0 !== t.querySelectorAll && !t.querySelectorAll(":scope fieldset div").length
            }),
            h.attributes = L(function(t) {
                return t.className = "i",
                !t.getAttribute("className")
            }),
            h.getElementsByTagName = L(function(t) {
                return t.appendChild(z.createComment("")),
                !t.getElementsByTagName("*").length
            }),
            h.getElementsByClassName = E.test(z.getElementsByClassName),
            h.getById = L(function(t) {
                return i.appendChild(t).id = A,
                !z.getElementsByName || !z.getElementsByName(A).length
            }),
            h.getById ? (w.filter.ID = function(t) {
                var e = t.replace(P, d);
                return function(t) {
                    return t.getAttribute("id") === e
                }
            }
            ,
            w.find.ID = function(t, e) {
                if (void 0 !== e.getElementById && C)
                    return (e = e.getElementById(t)) ? [e] : []
            }
            ) : (w.filter.ID = function(t) {
                var e = t.replace(P, d);
                return function(t) {
                    t = void 0 !== t.getAttributeNode && t.getAttributeNode("id");
                    return t && t.value === e
                }
            }
            ,
            w.find.ID = function(t, e) {
                if (void 0 !== e.getElementById && C) {
                    var i, n, o, s = e.getElementById(t);
                    if (s) {
                        if ((i = s.getAttributeNode("id")) && i.value === t)
                            return [s];
                        for (o = e.getElementsByName(t),
                        n = 0; s = o[n++]; )
                            if ((i = s.getAttributeNode("id")) && i.value === t)
                                return [s]
                    }
                    return []
                }
            }
            ),
            w.find.TAG = h.getElementsByTagName ? function(t, e) {
                return void 0 !== e.getElementsByTagName ? e.getElementsByTagName(t) : h.qsa ? e.querySelectorAll(t) : void 0
            }
            : function(t, e) {
                var i, n = [], o = 0, s = e.getElementsByTagName(t);
                if ("*" !== t)
                    return s;
                for (; i = s[o++]; )
                    1 === i.nodeType && n.push(i);
                return n
            }
            ,
            w.find.CLASS = h.getElementsByClassName && function(t, e) {
                if (void 0 !== e.getElementsByClassName && C)
                    return e.getElementsByClassName(t)
            }
            ,
            n = [],
            f = [],
            (h.qsa = E.test(z.querySelectorAll)) && (L(function(t) {
                var e;
                i.appendChild(t).innerHTML = "<a id='" + A + "'></a><select id='" + A + "-\r\\' msallowcapture=''><option selected=''></option></select>",
                t.querySelectorAll("[msallowcapture^='']").length && f.push("[*^$]=" + r + "*(?:''|\"\")"),
                t.querySelectorAll("[selected]").length || f.push("\\[" + r + "*(?:value|" + Q + ")"),
                t.querySelectorAll("[id~=" + A + "-]").length || f.push("~="),
                (e = z.createElement("input")).setAttribute("name", ""),
                t.appendChild(e),
                t.querySelectorAll("[name='']").length || f.push("\\[" + r + "*name" + r + "*=" + r + "*(?:''|\"\")"),
                t.querySelectorAll(":checked").length || f.push(":checked"),
                t.querySelectorAll("a#" + A + "+*").length || f.push(".#.+[+~]"),
                t.querySelectorAll("\\\f"),
                f.push("[\\r\\n\\f]")
            }),
            L(function(t) {
                t.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
                var e = z.createElement("input");
                e.setAttribute("type", "hidden"),
                t.appendChild(e).setAttribute("name", "D"),
                t.querySelectorAll("[name=d]").length && f.push("name" + r + "*[*^$|!~]?="),
                2 !== t.querySelectorAll(":enabled").length && f.push(":enabled", ":disabled"),
                i.appendChild(t).disabled = !0,
                2 !== t.querySelectorAll(":disabled").length && f.push(":enabled", ":disabled"),
                t.querySelectorAll("*,:x"),
                f.push(",.*:")
            })),
            (h.matchesSelector = E.test(o = i.matches || i.webkitMatchesSelector || i.mozMatchesSelector || i.oMatchesSelector || i.msMatchesSelector)) && L(function(t) {
                h.disconnectedMatch = o.call(t, "*"),
                o.call(t, "[s!='']:x"),
                n.push("!=", Z)
            }),
            f = f.length && new RegExp(f.join("|")),
            n = n.length && new RegExp(n.join("|")),
            t = E.test(i.compareDocumentPosition),
            v = t || E.test(i.contains) ? function(t, e) {
                var i = 9 === t.nodeType ? t.documentElement : t
                  , e = e && e.parentNode;
                return t === e || !(!e || 1 !== e.nodeType || !(i.contains ? i.contains(e) : t.compareDocumentPosition && 16 & t.compareDocumentPosition(e)))
            }
            : function(t, e) {
                if (e)
                    for (; e = e.parentNode; )
                        if (e === t)
                            return !0;
                return !1
            }
            ,
            U = t ? function(t, e) {
                if (t === e)
                    return c = !0,
                    0;
                var i = !t.compareDocumentPosition - !e.compareDocumentPosition;
                return i || (1 & (i = (t.ownerDocument || t) == (e.ownerDocument || e) ? t.compareDocumentPosition(e) : 1) || !h.sortDetached && e.compareDocumentPosition(t) === i ? t == z || t.ownerDocument == u && v(u, t) ? -1 : e == z || e.ownerDocument == u && v(u, e) ? 1 : l ? g(l, t) - g(l, e) : 0 : 4 & i ? -1 : 1)
            }
            : function(t, e) {
                if (t === e)
                    return c = !0,
                    0;
                var i, n = 0, o = t.parentNode, s = e.parentNode, r = [t], a = [e];
                if (!o || !s)
                    return t == z ? -1 : e == z ? 1 : o ? -1 : s ? 1 : l ? g(l, t) - g(l, e) : 0;
                if (o === s)
                    return ft(t, e);
                for (i = t; i = i.parentNode; )
                    r.unshift(i);
                for (i = e; i = i.parentNode; )
                    a.unshift(i);
                for (; r[n] === a[n]; )
                    n++;
                return n ? ft(r[n], a[n]) : r[n] == u ? -1 : a[n] == u ? 1 : 0
            }
            ),
            z
        }
        ,
        O.matches = function(t, e) {
            return O(t, null, null, e)
        }
        ,
        O.matchesSelector = function(t, e) {
            if (k(t),
            h.matchesSelector && C && !m[e + " "] && (!n || !n.test(e)) && (!f || !f.test(e)))
                try {
                    var i = o.call(t, e);
                    if (i || h.disconnectedMatch || t.document && 11 !== t.document.nodeType)
                        return i
                } catch (t) {
                    m(e, !0)
                }
            return 0 < O(e, z, null, [t]).length
        }
        ,
        O.contains = function(t, e) {
            return (t.ownerDocument || t) != z && k(t),
            v(t, e)
        }
        ,
        O.attr = function(t, e) {
            (t.ownerDocument || t) != z && k(t);
            var i = w.attrHandle[e.toLowerCase()]
              , i = i && G.call(w.attrHandle, e.toLowerCase()) ? i(t, e, !C) : void 0;
            return void 0 !== i ? i : h.attributes || !C ? t.getAttribute(e) : (i = t.getAttributeNode(e)) && i.specified ? i.value : null
        }
        ,
        O.escape = function(t) {
            return (t + "").replace(dt, H)
        }
        ,
        O.error = function(t) {
            throw new Error("Syntax error, unrecognized expression: " + t)
        }
        ,
        O.uniqueSort = function(t) {
            var e, i = [], n = 0, o = 0;
            if (c = !h.detectDuplicates,
            l = !h.sortStable && t.slice(0),
            t.sort(U),
            c) {
                for (; e = t[o++]; )
                    e === t[o] && (n = i.push(o));
                for (; n--; )
                    t.splice(i[n], 1)
            }
            return l = null,
            t
        }
        ,
        s = O.getText = function(t) {
            var e, i = "", n = 0, o = t.nodeType;
            if (o) {
                if (1 === o || 9 === o || 11 === o) {
                    if ("string" == typeof t.textContent)
                        return t.textContent;
                    for (t = t.firstChild; t; t = t.nextSibling)
                        i += s(t)
                } else if (3 === o || 4 === o)
                    return t.nodeValue
            } else
                for (; e = t[n++]; )
                    i += s(e);
            return i
        }
        ,
        (w = O.selectors = {
            cacheLength: 50,
            createPseudo: D,
            match: b,
            attrHandle: {},
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(t) {
                    return t[1] = t[1].replace(P, d),
                    t[3] = (t[3] || t[4] || t[5] || "").replace(P, d),
                    "~=" === t[2] && (t[3] = " " + t[3] + " "),
                    t.slice(0, 4)
                },
                CHILD: function(t) {
                    return t[1] = t[1].toLowerCase(),
                    "nth" === t[1].slice(0, 3) ? (t[3] || O.error(t[0]),
                    t[4] = +(t[4] ? t[5] + (t[6] || 1) : 2 * ("even" === t[3] || "odd" === t[3])),
                    t[5] = +(t[7] + t[8] || "odd" === t[3])) : t[3] && O.error(t[0]),
                    t
                },
                PSEUDO: function(t) {
                    var e, i = !t[6] && t[2];
                    return b.CHILD.test(t[0]) ? null : (t[3] ? t[2] = t[4] || t[5] || "" : i && ot.test(i) && (e = p(i, !0)) && (e = i.indexOf(")", i.length - e) - i.length) && (t[0] = t[0].slice(0, e),
                    t[2] = i.slice(0, e)),
                    t.slice(0, 3))
                }
            },
            filter: {
                TAG: function(t) {
                    var e = t.replace(P, d).toLowerCase();
                    return "*" === t ? function() {
                        return !0
                    }
                    : function(t) {
                        return t.nodeName && t.nodeName.toLowerCase() === e
                    }
                },
                CLASS: function(t) {
                    var e = F[t + " "];
                    return e || (e = new RegExp("(^|" + r + ")" + t + "(" + r + "|$)")) && F(t, function(t) {
                        return e.test("string" == typeof t.className && t.className || void 0 !== t.getAttribute && t.getAttribute("class") || "")
                    })
                },
                ATTR: function(e, i, n) {
                    return function(t) {
                        t = O.attr(t, e);
                        return null == t ? "!=" === i : !i || (t += "",
                        "=" === i ? t === n : "!=" === i ? t !== n : "^=" === i ? n && 0 === t.indexOf(n) : "*=" === i ? n && -1 < t.indexOf(n) : "$=" === i ? n && t.slice(-n.length) === n : "~=" === i ? -1 < (" " + t.replace(tt, " ") + " ").indexOf(n) : "|=" === i && (t === n || t.slice(0, n.length + 1) === n + "-"))
                    }
                },
                CHILD: function(f, t, e, v, m) {
                    var y = "nth" !== f.slice(0, 3)
                      , g = "last" !== f.slice(-4)
                      , b = "of-type" === t;
                    return 1 === v && 0 === m ? function(t) {
                        return !!t.parentNode
                    }
                    : function(t, e, i) {
                        var n, o, s, r, a, l, c = y != g ? "nextSibling" : "previousSibling", u = t.parentNode, d = b && t.nodeName.toLowerCase(), h = !i && !b, p = !1;
                        if (u) {
                            if (y) {
                                for (; c; ) {
                                    for (r = t; r = r[c]; )
                                        if (b ? r.nodeName.toLowerCase() === d : 1 === r.nodeType)
                                            return !1;
                                    l = c = "only" === f && !l && "nextSibling"
                                }
                                return !0
                            }
                            if (l = [g ? u.firstChild : u.lastChild],
                            g && h) {
                                for (p = (a = (n = (o = (s = (r = u)[A] || (r[A] = {}))[r.uniqueID] || (s[r.uniqueID] = {}))[f] || [])[0] === S && n[1]) && n[2],
                                r = a && u.childNodes[a]; r = ++a && r && r[c] || (p = a = 0) || l.pop(); )
                                    if (1 === r.nodeType && ++p && r === t) {
                                        o[f] = [S, a, p];
                                        break
                                    }
                            } else if (!1 === (p = h ? a = (n = (o = (s = (r = t)[A] || (r[A] = {}))[r.uniqueID] || (s[r.uniqueID] = {}))[f] || [])[0] === S && n[1] : p))
                                for (; (r = ++a && r && r[c] || (p = a = 0) || l.pop()) && ((b ? r.nodeName.toLowerCase() !== d : 1 !== r.nodeType) || !++p || (h && ((o = (s = r[A] || (r[A] = {}))[r.uniqueID] || (s[r.uniqueID] = {}))[f] = [S, p]),
                                r !== t)); )
                                    ;
                            return (p -= m) === v || p % v == 0 && 0 <= p / v
                        }
                    }
                },
                PSEUDO: function(t, s) {
                    var e, r = w.pseudos[t] || w.setFilters[t.toLowerCase()] || O.error("unsupported pseudo: " + t);
                    return r[A] ? r(s) : 1 < r.length ? (e = [t, t, "", s],
                    w.setFilters.hasOwnProperty(t.toLowerCase()) ? D(function(t, e) {
                        for (var i, n = r(t, s), o = n.length; o--; )
                            t[i = g(t, n[o])] = !(e[i] = n[o])
                    }) : function(t) {
                        return r(t, 0, e)
                    }
                    ) : r
                }
            },
            pseudos: {
                not: D(function(t) {
                    var n = []
                      , o = []
                      , a = _(t.replace(y, "$1"));
                    return a[A] ? D(function(t, e, i, n) {
                        for (var o, s = a(t, null, n, []), r = t.length; r--; )
                            (o = s[r]) && (t[r] = !(e[r] = o))
                    }) : function(t, e, i) {
                        return n[0] = t,
                        a(n, null, i, o),
                        n[0] = null,
                        !o.pop()
                    }
                }),
                has: D(function(e) {
                    return function(t) {
                        return 0 < O(e, t).length
                    }
                }),
                contains: D(function(e) {
                    return e = e.replace(P, d),
                    function(t) {
                        return -1 < (t.textContent || s(t)).indexOf(e)
                    }
                }),
                lang: D(function(i) {
                    return st.test(i || "") || O.error("unsupported lang: " + i),
                    i = i.replace(P, d).toLowerCase(),
                    function(t) {
                        var e;
                        do {
                            if (e = C ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang"))
                                return (e = e.toLowerCase()) === i || 0 === e.indexOf(i + "-")
                        } while ((t = t.parentNode) && 1 === t.nodeType);
                        return !1
                    }
                }),
                target: function(t) {
                    var e = N.location && N.location.hash;
                    return e && e.slice(1) === t.id
                },
                root: function(t) {
                    return t === i
                },
                focus: function(t) {
                    return t === z.activeElement && (!z.hasFocus || z.hasFocus()) && !!(t.type || t.href || ~t.tabIndex)
                },
                enabled: vt(!1),
                disabled: vt(!0),
                checked: function(t) {
                    var e = t.nodeName.toLowerCase();
                    return "input" === e && !!t.checked || "option" === e && !!t.selected
                },
                selected: function(t) {
                    return t.parentNode && t.parentNode.selectedIndex,
                    !0 === t.selected
                },
                empty: function(t) {
                    for (t = t.firstChild; t; t = t.nextSibling)
                        if (t.nodeType < 6)
                            return !1;
                    return !0
                },
                parent: function(t) {
                    return !w.pseudos.empty(t)
                },
                header: function(t) {
                    return lt.test(t.nodeName)
                },
                input: function(t) {
                    return at.test(t.nodeName)
                },
                button: function(t) {
                    var e = t.nodeName.toLowerCase();
                    return "input" === e && "button" === t.type || "button" === e
                },
                text: function(t) {
                    return "input" === t.nodeName.toLowerCase() && "text" === t.type && (null == (t = t.getAttribute("type")) || "text" === t.toLowerCase())
                },
                first: R(function() {
                    return [0]
                }),
                last: R(function(t, e) {
                    return [e - 1]
                }),
                eq: R(function(t, e, i) {
                    return [i < 0 ? i + e : i]
                }),
                even: R(function(t, e) {
                    for (var i = 0; i < e; i += 2)
                        t.push(i);
                    return t
                }),
                odd: R(function(t, e) {
                    for (var i = 1; i < e; i += 2)
                        t.push(i);
                    return t
                }),
                lt: R(function(t, e, i) {
                    for (var n = i < 0 ? i + e : e < i ? e : i; 0 <= --n; )
                        t.push(n);
                    return t
                }),
                gt: R(function(t, e, i) {
                    for (var n = i < 0 ? i + e : i; ++n < e; )
                        t.push(n);
                    return t
                })
            }
        }).pseudos.nth = w.pseudos.eq,
        {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        })
            w.pseudos[t] = function(e) {
                return function(t) {
                    return "input" === t.nodeName.toLowerCase() && t.type === e
                }
            }(t);
        for (t in {
            submit: !0,
            reset: !0
        })
            w.pseudos[t] = function(i) {
                return function(t) {
                    var e = t.nodeName.toLowerCase();
                    return ("input" === e || "button" === e) && t.type === i
                }
            }(t);
        function yt() {}
        function I(t) {
            for (var e = 0, i = t.length, n = ""; e < i; e++)
                n += t[e].value;
            return n
        }
        function gt(r, t, e) {
            var a = t.dir
              , l = t.next
              , c = l || a
              , u = e && "parentNode" === c
              , d = B++;
            return t.first ? function(t, e, i) {
                for (; t = t[a]; )
                    if (1 === t.nodeType || u)
                        return r(t, e, i);
                return !1
            }
            : function(t, e, i) {
                var n, o, s = [S, d];
                if (i) {
                    for (; t = t[a]; )
                        if ((1 === t.nodeType || u) && r(t, e, i))
                            return !0
                } else
                    for (; t = t[a]; )
                        if (1 === t.nodeType || u)
                            if (o = (o = t[A] || (t[A] = {}))[t.uniqueID] || (o[t.uniqueID] = {}),
                            l && l === t.nodeName.toLowerCase())
                                t = t[a] || t;
                            else {
                                if ((n = o[c]) && n[0] === S && n[1] === d)
                                    return s[2] = n[2];
                                if ((o[c] = s)[2] = r(t, e, i))
                                    return !0
                            }
                return !1
            }
        }
        function bt(o) {
            return 1 < o.length ? function(t, e, i) {
                for (var n = o.length; n--; )
                    if (!o[n](t, e, i))
                        return !1;
                return !0
            }
            : o[0]
        }
        function wt(t, e, i, n, o) {
            for (var s, r = [], a = 0, l = t.length, c = null != e; a < l; a++)
                !(s = t[a]) || i && !i(s, n, o) || (r.push(s),
                c && e.push(a));
            return r
        }
        function xt(p, f, v, m, y, t) {
            return m && !m[A] && (m = xt(m)),
            y && !y[A] && (y = xt(y, t)),
            D(function(t, e, i, n) {
                var o, s, r, a = [], l = [], c = e.length, u = t || function(t, e, i) {
                    for (var n = 0, o = e.length; n < o; n++)
                        O(t, e[n], i);
                    return i
                }(f || "*", i.nodeType ? [i] : i, []), d = !p || !t && f ? u : wt(u, a, p, i, n), h = v ? y || (t ? p : c || m) ? [] : e : d;
                if (v && v(d, h, i, n),
                m)
                    for (o = wt(h, l),
                    m(o, [], i, n),
                    s = o.length; s--; )
                        (r = o[s]) && (h[l[s]] = !(d[l[s]] = r));
                if (t) {
                    if (y || p) {
                        if (y) {
                            for (o = [],
                            s = h.length; s--; )
                                (r = h[s]) && o.push(d[s] = r);
                            y(null, h = [], o, n)
                        }
                        for (s = h.length; s--; )
                            (r = h[s]) && -1 < (o = y ? g(t, r) : a[s]) && (t[o] = !(e[o] = r))
                    }
                } else
                    h = wt(h === e ? h.splice(c, h.length) : h),
                    y ? y(null, e, h, n) : T.apply(e, h)
            })
        }
        function kt(m, y) {
            function t(t, e, i, n, o) {
                var s, r, a, l = 0, c = "0", u = t && [], d = [], h = x, p = t || b && w.find.TAG("*", o), f = S += null == h ? 1 : Math.random() || .1, v = p.length;
                for (o && (x = e == z || e || o); c !== v && null != (s = p[c]); c++) {
                    if (b && s) {
                        for (r = 0,
                        e || s.ownerDocument == z || (k(s),
                        i = !C); a = m[r++]; )
                            if (a(s, e || z, i)) {
                                n.push(s);
                                break
                            }
                        o && (S = f)
                    }
                    g && ((s = !a && s) && l--,
                    t && u.push(s))
                }
                if (l += c,
                g && c !== l) {
                    for (r = 0; a = y[r++]; )
                        a(u, d, e, i);
                    if (t) {
                        if (0 < l)
                            for (; c--; )
                                u[c] || d[c] || (d[c] = X.call(n));
                        d = wt(d)
                    }
                    T.apply(n, d),
                    o && !t && 0 < d.length && 1 < l + y.length && O.uniqueSort(n)
                }
                return o && (S = f,
                x = h),
                u
            }
            var g = 0 < y.length
              , b = 0 < m.length;
            return g ? D(t) : t
        }
        return yt.prototype = w.filters = w.pseudos,
        w.setFilters = new yt,
        p = O.tokenize = function(t, e) {
            var i, n, o, s, r, a, l, c = W[t + " "];
            if (c)
                return e ? 0 : c.slice(0);
            for (r = t,
            a = [],
            l = w.preFilter; r; ) {
                for (s in i && !(n = et.exec(r)) || (n && (r = r.slice(n[0].length) || r),
                a.push(o = [])),
                i = !1,
                (n = it.exec(r)) && (i = n.shift(),
                o.push({
                    value: i,
                    type: n[0].replace(y, " ")
                }),
                r = r.slice(i.length)),
                w.filter)
                    !(n = b[s].exec(r)) || l[s] && !(n = l[s](n)) || (i = n.shift(),
                    o.push({
                        value: i,
                        type: s,
                        matches: n
                    }),
                    r = r.slice(i.length));
                if (!i)
                    break
            }
            return e ? r.length : r ? O.error(t) : W(t, a).slice(0)
        }
        ,
        _ = O.compile = function(t, e) {
            var i, n = [], o = [], s = $[t + " "];
            if (!s) {
                for (i = (e = e || p(t)).length; i--; )
                    ((s = function t(e) {
                        for (var n, i, o, s = e.length, r = w.relative[e[0].type], a = r || w.relative[" "], l = r ? 1 : 0, c = gt(function(t) {
                            return t === n
                        }, a, !0), u = gt(function(t) {
                            return -1 < g(n, t)
                        }, a, !0), d = [function(t, e, i) {
                            return t = !r && (i || e !== x) || ((n = e).nodeType ? c : u)(t, e, i),
                            n = null,
                            t
                        }
                        ]; l < s; l++)
                            if (i = w.relative[e[l].type])
                                d = [gt(bt(d), i)];
                            else {
                                if ((i = w.filter[e[l].type].apply(null, e[l].matches))[A]) {
                                    for (o = ++l; o < s && !w.relative[e[o].type]; o++)
                                        ;
                                    return xt(1 < l && bt(d), 1 < l && I(e.slice(0, l - 1).concat({
                                        value: " " === e[l - 2].type ? "*" : ""
                                    })).replace(y, "$1"), i, l < o && t(e.slice(l, o)), o < s && t(e = e.slice(o)), o < s && I(e))
                                }
                                d.push(i)
                            }
                        return bt(d)
                    }(e[i]))[A] ? n : o).push(s);
                (s = $(t, kt(o, n))).selector = t
            }
            return s
        }
        ,
        V = O.select = function(t, e, i, n) {
            var o, s, r, a, l, c = "function" == typeof t && t, u = !n && p(t = c.selector || t);
            if (i = i || [],
            1 === u.length) {
                if (2 < (s = u[0] = u[0].slice(0)).length && "ID" === (r = s[0]).type && 9 === e.nodeType && C && w.relative[s[1].type]) {
                    if (!(e = (w.find.ID(r.matches[0].replace(P, d), e) || [])[0]))
                        return i;
                    c && (e = e.parentNode),
                    t = t.slice(s.shift().value.length)
                }
                for (o = b.needsContext.test(t) ? 0 : s.length; o-- && (r = s[o],
                !w.relative[a = r.type]); )
                    if ((l = w.find[a]) && (n = l(r.matches[0].replace(P, d), ut.test(s[0].type) && mt(e.parentNode) || e))) {
                        if (s.splice(o, 1),
                        t = n.length && I(s))
                            break;
                        return T.apply(i, n),
                        i
                    }
            }
            return (c || _(t, u))(n, e, !C, i, !e || ut.test(t) && mt(e.parentNode) || e),
            i
        }
        ,
        h.sortStable = A.split("").sort(U).join("") === A,
        h.detectDuplicates = !!c,
        k(),
        h.sortDetached = L(function(t) {
            return 1 & t.compareDocumentPosition(z.createElement("fieldset"))
        }),
        L(function(t) {
            return t.innerHTML = "<a href='#'></a>",
            "#" === t.firstChild.getAttribute("href")
        }) || pt("type|href|height|width", function(t, e, i) {
            if (!i)
                return t.getAttribute(e, "type" === e.toLowerCase() ? 1 : 2)
        }),
        h.attributes && L(function(t) {
            return t.innerHTML = "<input/>",
            t.firstChild.setAttribute("value", ""),
            "" === t.firstChild.getAttribute("value")
        }) || pt("value", function(t, e, i) {
            if (!i && "input" === t.nodeName.toLowerCase())
                return t.defaultValue
        }),
        L(function(t) {
            return null == t.getAttribute("disabled")
        }) || pt(Q, function(t, e, i) {
            if (!i)
                return !0 === t[e] ? e.toLowerCase() : (i = t.getAttributeNode(e)) && i.specified ? i.value : null
        }),
        O
    }(v)
      , J = (w.find = t,
    w.expr = t.selectors,
    w.expr[":"] = w.expr.pseudos,
    w.uniqueSort = w.unique = t.uniqueSort,
    w.text = t.getText,
    w.isXMLDoc = t.isXML,
    w.contains = t.contains,
    w.escapeSelector = t.escape,
    w.expr.match.needsContext);
    function l(t, e) {
        return t.nodeName && t.nodeName.toLowerCase() === e.toLowerCase()
    }
    var Q = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
    function K(t, i, n) {
        return m(i) ? w.grep(t, function(t, e) {
            return !!i.call(t, e, t) !== n
        }) : i.nodeType ? w.grep(t, function(t) {
            return t === i !== n
        }) : "string" != typeof i ? w.grep(t, function(t) {
            return -1 < _.call(i, t) !== n
        }) : w.filter(i, t, n)
    }
    w.filter = function(t, e, i) {
        var n = e[0];
        return i && (t = ":not(" + t + ")"),
        1 === e.length && 1 === n.nodeType ? w.find.matchesSelector(n, t) ? [n] : [] : w.find.matches(t, w.grep(e, function(t) {
            return 1 === t.nodeType
        }))
    }
    ,
    w.fn.extend({
        find: function(t) {
            var e, i, n = this.length, o = this;
            if ("string" != typeof t)
                return this.pushStack(w(t).filter(function() {
                    for (e = 0; e < n; e++)
                        if (w.contains(o[e], this))
                            return !0
                }));
            for (i = this.pushStack([]),
            e = 0; e < n; e++)
                w.find(t, o[e], i);
            return 1 < n ? w.uniqueSort(i) : i
        },
        filter: function(t) {
            return this.pushStack(K(this, t || [], !1))
        },
        not: function(t) {
            return this.pushStack(K(this, t || [], !0))
        },
        is: function(t) {
            return !!K(this, "string" == typeof t && J.test(t) ? w(t) : t || [], !1).length
        }
    });
    var Z, tt = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, et = ((w.fn.init = function(t, e, i) {
        if (!t)
            return this;
        if (i = i || Z,
        "string" != typeof t)
            return t.nodeType ? (this[0] = t,
            this.length = 1,
            this) : m(t) ? void 0 !== i.ready ? i.ready(t) : t(w) : w.makeArray(t, this);
        if (!(n = "<" === t[0] && ">" === t[t.length - 1] && 3 <= t.length ? [null, t, null] : tt.exec(t)) || !n[1] && e)
            return (!e || e.jquery ? e || i : this.constructor(e)).find(t);
        if (n[1]) {
            if (e = e instanceof w ? e[0] : e,
            w.merge(this, w.parseHTML(n[1], e && e.nodeType ? e.ownerDocument || e : b, !0)),
            Q.test(n[1]) && w.isPlainObject(e))
                for (var n in e)
                    m(this[n]) ? this[n](e[n]) : this.attr(n, e[n]);
            return this
        }
        return (i = b.getElementById(n[2])) && (this[0] = i,
        this.length = 1),
        this
    }
    ).prototype = w.fn,
    Z = w(b),
    /^(?:parents|prev(?:Until|All))/), it = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    function nt(t, e) {
        for (; (t = t[e]) && 1 !== t.nodeType; )
            ;
        return t
    }
    w.fn.extend({
        has: function(t) {
            var e = w(t, this)
              , i = e.length;
            return this.filter(function() {
                for (var t = 0; t < i; t++)
                    if (w.contains(this, e[t]))
                        return !0
            })
        },
        closest: function(t, e) {
            var i, n = 0, o = this.length, s = [], r = "string" != typeof t && w(t);
            if (!J.test(t))
                for (; n < o; n++)
                    for (i = this[n]; i && i !== e; i = i.parentNode)
                        if (i.nodeType < 11 && (r ? -1 < r.index(i) : 1 === i.nodeType && w.find.matchesSelector(i, t))) {
                            s.push(i);
                            break
                        }
            return this.pushStack(1 < s.length ? w.uniqueSort(s) : s)
        },
        index: function(t) {
            return t ? "string" == typeof t ? _.call(w(t), this[0]) : _.call(this, t.jquery ? t[0] : t) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        },
        add: function(t, e) {
            return this.pushStack(w.uniqueSort(w.merge(this.get(), w(t, e))))
        },
        addBack: function(t) {
            return this.add(null == t ? this.prevObject : this.prevObject.filter(t))
        }
    }),
    w.each({
        parent: function(t) {
            t = t.parentNode;
            return t && 11 !== t.nodeType ? t : null
        },
        parents: function(t) {
            return n(t, "parentNode")
        },
        parentsUntil: function(t, e, i) {
            return n(t, "parentNode", i)
        },
        next: function(t) {
            return nt(t, "nextSibling")
        },
        prev: function(t) {
            return nt(t, "previousSibling")
        },
        nextAll: function(t) {
            return n(t, "nextSibling")
        },
        prevAll: function(t) {
            return n(t, "previousSibling")
        },
        nextUntil: function(t, e, i) {
            return n(t, "nextSibling", i)
        },
        prevUntil: function(t, e, i) {
            return n(t, "previousSibling", i)
        },
        siblings: function(t) {
            return Y((t.parentNode || {}).firstChild, t)
        },
        children: function(t) {
            return Y(t.firstChild)
        },
        contents: function(t) {
            return null != t.contentDocument && H(t.contentDocument) ? t.contentDocument : (l(t, "template") && (t = t.content || t),
            w.merge([], t.childNodes))
        }
    }, function(n, o) {
        w.fn[n] = function(t, e) {
            var i = w.map(this, o, t);
            return (e = "Until" !== n.slice(-5) ? t : e) && "string" == typeof e && (i = w.filter(e, i)),
            1 < this.length && (it[n] || w.uniqueSort(i),
            et.test(n) && i.reverse()),
            this.pushStack(i)
        }
    });
    var x = /[^\x20\t\r\n\f]+/g;
    function u(t) {
        return t
    }
    function ot(t) {
        throw t
    }
    function st(t, e, i, n) {
        var o;
        try {
            t && m(o = t.promise) ? o.call(t).done(e).fail(i) : t && m(o = t.then) ? o.call(t, e, i) : e.apply(void 0, [t].slice(n))
        } catch (t) {
            i.apply(void 0, [t])
        }
    }
    w.Callbacks = function(n) {
        var t, i;
        n = "string" == typeof n ? (t = n,
        i = {},
        w.each(t.match(x) || [], function(t, e) {
            i[e] = !0
        }),
        i) : w.extend({}, n);
        function o() {
            for (a = a || n.once,
            r = s = !0; c.length; u = -1)
                for (e = c.shift(); ++u < l.length; )
                    !1 === l[u].apply(e[0], e[1]) && n.stopOnFalse && (u = l.length,
                    e = !1);
            n.memory || (e = !1),
            s = !1,
            a && (l = e ? [] : "")
        }
        var s, e, r, a, l = [], c = [], u = -1, d = {
            add: function() {
                return l && (e && !s && (u = l.length - 1,
                c.push(e)),
                function i(t) {
                    w.each(t, function(t, e) {
                        m(e) ? n.unique && d.has(e) || l.push(e) : e && e.length && "string" !== f(e) && i(e)
                    })
                }(arguments),
                e && !s && o()),
                this
            },
            remove: function() {
                return w.each(arguments, function(t, e) {
                    for (var i; -1 < (i = w.inArray(e, l, i)); )
                        l.splice(i, 1),
                        i <= u && u--
                }),
                this
            },
            has: function(t) {
                return t ? -1 < w.inArray(t, l) : 0 < l.length
            },
            empty: function() {
                return l = l && [],
                this
            },
            disable: function() {
                return a = c = [],
                l = e = "",
                this
            },
            disabled: function() {
                return !l
            },
            lock: function() {
                return a = c = [],
                e || s || (l = e = ""),
                this
            },
            locked: function() {
                return !!a
            },
            fireWith: function(t, e) {
                return a || (e = [t, (e = e || []).slice ? e.slice() : e],
                c.push(e),
                s || o()),
                this
            },
            fire: function() {
                return d.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!r
            }
        };
        return d
    }
    ,
    w.extend({
        Deferred: function(t) {
            var s = [["notify", "progress", w.Callbacks("memory"), w.Callbacks("memory"), 2], ["resolve", "done", w.Callbacks("once memory"), w.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", w.Callbacks("once memory"), w.Callbacks("once memory"), 1, "rejected"]]
              , o = "pending"
              , r = {
                state: function() {
                    return o
                },
                always: function() {
                    return a.done(arguments).fail(arguments),
                    this
                },
                catch: function(t) {
                    return r.then(null, t)
                },
                pipe: function() {
                    var o = arguments;
                    return w.Deferred(function(n) {
                        w.each(s, function(t, e) {
                            var i = m(o[e[4]]) && o[e[4]];
                            a[e[1]](function() {
                                var t = i && i.apply(this, arguments);
                                t && m(t.promise) ? t.promise().progress(n.notify).done(n.resolve).fail(n.reject) : n[e[0] + "With"](this, i ? [t] : arguments)
                            })
                        }),
                        o = null
                    }).promise()
                },
                then: function(e, i, n) {
                    var l = 0;
                    function c(o, s, r, a) {
                        return function() {
                            function t() {
                                var t, e;
                                if (!(o < l)) {
                                    if ((t = r.apply(i, n)) === s.promise())
                                        throw new TypeError("Thenable self-resolution");
                                    e = t && ("object" == typeof t || "function" == typeof t) && t.then,
                                    m(e) ? a ? e.call(t, c(l, s, u, a), c(l, s, ot, a)) : (l++,
                                    e.call(t, c(l, s, u, a), c(l, s, ot, a), c(l, s, u, s.notifyWith))) : (r !== u && (i = void 0,
                                    n = [t]),
                                    (a || s.resolveWith)(i, n))
                                }
                            }
                            var i = this
                              , n = arguments
                              , e = a ? t : function() {
                                try {
                                    t()
                                } catch (t) {
                                    w.Deferred.exceptionHook && w.Deferred.exceptionHook(t, e.stackTrace),
                                    l <= o + 1 && (r !== ot && (i = void 0,
                                    n = [t]),
                                    s.rejectWith(i, n))
                                }
                            }
                            ;
                            o ? e() : (w.Deferred.getStackHook && (e.stackTrace = w.Deferred.getStackHook()),
                            v.setTimeout(e))
                        }
                    }
                    return w.Deferred(function(t) {
                        s[0][3].add(c(0, t, m(n) ? n : u, t.notifyWith)),
                        s[1][3].add(c(0, t, m(e) ? e : u)),
                        s[2][3].add(c(0, t, m(i) ? i : ot))
                    }).promise()
                },
                promise: function(t) {
                    return null != t ? w.extend(t, r) : r
                }
            }
              , a = {};
            return w.each(s, function(t, e) {
                var i = e[2]
                  , n = e[5];
                r[e[1]] = i.add,
                n && i.add(function() {
                    o = n
                }, s[3 - t][2].disable, s[3 - t][3].disable, s[0][2].lock, s[0][3].lock),
                i.add(e[3].fire),
                a[e[0]] = function() {
                    return a[e[0] + "With"](this === a ? void 0 : this, arguments),
                    this
                }
                ,
                a[e[0] + "With"] = i.fireWith
            }),
            r.promise(a),
            t && t.call(a, a),
            a
        },
        when: function(t) {
            function e(e) {
                return function(t) {
                    o[e] = this,
                    s[e] = 1 < arguments.length ? a.call(arguments) : t,
                    --i || r.resolveWith(o, s)
                }
            }
            var i = arguments.length
              , n = i
              , o = Array(n)
              , s = a.call(arguments)
              , r = w.Deferred();
            if (i <= 1 && (st(t, r.done(e(n)).resolve, r.reject, !i),
            "pending" === r.state() || m(s[n] && s[n].then)))
                return r.then();
            for (; n--; )
                st(s[n], e(n), r.reject);
            return r.promise()
        }
    });
    var rt = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/
      , at = (w.Deferred.exceptionHook = function(t, e) {
        v.console && v.console.warn && t && rt.test(t.name) && v.console.warn("jQuery.Deferred exception: " + t.message, t.stack, e)
    }
    ,
    w.readyException = function(t) {
        v.setTimeout(function() {
            throw t
        })
    }
    ,
    w.Deferred());
    function lt() {
        b.removeEventListener("DOMContentLoaded", lt),
        v.removeEventListener("load", lt),
        w.ready()
    }
    w.fn.ready = function(t) {
        return at.then(t).catch(function(t) {
            w.readyException(t)
        }),
        this
    }
    ,
    w.extend({
        isReady: !1,
        readyWait: 1,
        ready: function(t) {
            (!0 === t ? --w.readyWait : w.isReady) || (w.isReady = !0) !== t && 0 < --w.readyWait || at.resolveWith(b, [w])
        }
    }),
    w.ready.then = at.then,
    "complete" === b.readyState || "loading" !== b.readyState && !b.documentElement.doScroll ? v.setTimeout(w.ready) : (b.addEventListener("DOMContentLoaded", lt),
    v.addEventListener("load", lt));
    function d(t, e, i, n, o, s, r) {
        var a = 0
          , l = t.length
          , c = null == i;
        if ("object" === f(i))
            for (a in o = !0,
            i)
                d(t, e, a, i[a], !0, s, r);
        else if (void 0 !== n && (o = !0,
        m(n) || (r = !0),
        e = c ? r ? (e.call(t, n),
        null) : (c = e,
        function(t, e, i) {
            return c.call(w(t), i)
        }
        ) : e))
            for (; a < l; a++)
                e(t[a], i, r ? n : n.call(t[a], a, e(t[a], i)));
        return o ? t : c ? e.call(t) : l ? e(t[0], i) : s
    }
    var ct = /^-ms-/
      , ut = /-([a-z])/g;
    function dt(t, e) {
        return e.toUpperCase()
    }
    function h(t) {
        return t.replace(ct, "ms-").replace(ut, dt)
    }
    function k(t) {
        return 1 === t.nodeType || 9 === t.nodeType || !+t.nodeType
    }
    function i() {
        this.expando = w.expando + i.uid++
    }
    i.uid = 1,
    i.prototype = {
        cache: function(t) {
            var e = t[this.expando];
            return e || (e = {},
            k(t) && (t.nodeType ? t[this.expando] = e : Object.defineProperty(t, this.expando, {
                value: e,
                configurable: !0
            }))),
            e
        },
        set: function(t, e, i) {
            var n, o = this.cache(t);
            if ("string" == typeof e)
                o[h(e)] = i;
            else
                for (n in e)
                    o[h(n)] = e[n];
            return o
        },
        get: function(t, e) {
            return void 0 === e ? this.cache(t) : t[this.expando] && t[this.expando][h(e)]
        },
        access: function(t, e, i) {
            return void 0 === e || e && "string" == typeof e && void 0 === i ? this.get(t, e) : (this.set(t, e, i),
            void 0 !== i ? i : e)
        },
        remove: function(t, e) {
            var i, n = t[this.expando];
            if (void 0 !== n) {
                if (void 0 !== e) {
                    i = (e = Array.isArray(e) ? e.map(h) : (e = h(e))in n ? [e] : e.match(x) || []).length;
                    for (; i--; )
                        delete n[e[i]]
                }
                void 0 !== e && !w.isEmptyObject(n) || (t.nodeType ? t[this.expando] = void 0 : delete t[this.expando])
            }
        },
        hasData: function(t) {
            t = t[this.expando];
            return void 0 !== t && !w.isEmptyObject(t)
        }
    };
    var z = new i
      , c = new i
      , ht = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/
      , pt = /[A-Z]/g;
    function ft(t, e, i) {
        var n, o;
        if (void 0 === i && 1 === t.nodeType)
            if (n = "data-" + e.replace(pt, "-$&").toLowerCase(),
            "string" == typeof (i = t.getAttribute(n))) {
                try {
                    i = "true" === (o = i) || "false" !== o && ("null" === o ? null : o === +o + "" ? +o : ht.test(o) ? JSON.parse(o) : o)
                } catch (t) {}
                c.set(t, e, i)
            } else
                i = void 0;
        return i
    }
    w.extend({
        hasData: function(t) {
            return c.hasData(t) || z.hasData(t)
        },
        data: function(t, e, i) {
            return c.access(t, e, i)
        },
        removeData: function(t, e) {
            c.remove(t, e)
        },
        _data: function(t, e, i) {
            return z.access(t, e, i)
        },
        _removeData: function(t, e) {
            z.remove(t, e)
        }
    }),
    w.fn.extend({
        data: function(i, t) {
            var e, n, o, s = this[0], r = s && s.attributes;
            if (void 0 !== i)
                return "object" == typeof i ? this.each(function() {
                    c.set(this, i)
                }) : d(this, function(t) {
                    var e;
                    if (s && void 0 === t)
                        return void 0 !== (e = c.get(s, i)) || void 0 !== (e = ft(s, i)) ? e : void 0;
                    this.each(function() {
                        c.set(this, i, t)
                    })
                }, null, t, 1 < arguments.length, null, !0);
            if (this.length && (o = c.get(s),
            1 === s.nodeType && !z.get(s, "hasDataAttrs"))) {
                for (e = r.length; e--; )
                    r[e] && 0 === (n = r[e].name).indexOf("data-") && (n = h(n.slice(5)),
                    ft(s, n, o[n]));
                z.set(s, "hasDataAttrs", !0)
            }
            return o
        },
        removeData: function(t) {
            return this.each(function() {
                c.remove(this, t)
            })
        }
    }),
    w.extend({
        queue: function(t, e, i) {
            var n;
            if (t)
                return n = z.get(t, e = (e || "fx") + "queue"),
                i && (!n || Array.isArray(i) ? n = z.access(t, e, w.makeArray(i)) : n.push(i)),
                n || []
        },
        dequeue: function(t, e) {
            e = e || "fx";
            var i = w.queue(t, e)
              , n = i.length
              , o = i.shift()
              , s = w._queueHooks(t, e);
            "inprogress" === o && (o = i.shift(),
            n--),
            o && ("fx" === e && i.unshift("inprogress"),
            delete s.stop,
            o.call(t, function() {
                w.dequeue(t, e)
            }, s)),
            !n && s && s.empty.fire()
        },
        _queueHooks: function(t, e) {
            var i = e + "queueHooks";
            return z.get(t, i) || z.access(t, i, {
                empty: w.Callbacks("once memory").add(function() {
                    z.remove(t, [e + "queue", i])
                })
            })
        }
    }),
    w.fn.extend({
        queue: function(e, i) {
            var t = 2;
            return "string" != typeof e && (i = e,
            e = "fx",
            t--),
            arguments.length < t ? w.queue(this[0], e) : void 0 === i ? this : this.each(function() {
                var t = w.queue(this, e, i);
                w._queueHooks(this, e),
                "fx" === e && "inprogress" !== t[0] && w.dequeue(this, e)
            })
        },
        dequeue: function(t) {
            return this.each(function() {
                w.dequeue(this, t)
            })
        },
        clearQueue: function(t) {
            return this.queue(t || "fx", [])
        },
        promise: function(t, e) {
            function i() {
                --o || s.resolveWith(r, [r])
            }
            var n, o = 1, s = w.Deferred(), r = this, a = this.length;
            for ("string" != typeof t && (e = t,
            t = void 0),
            t = t || "fx"; a--; )
                (n = z.get(r[a], t + "queueHooks")) && n.empty && (o++,
                n.empty.add(i));
            return i(),
            s.promise(e)
        }
    });
    function vt(t, e) {
        return "none" === (t = e || t).style.display || "" === t.style.display && A(t) && "none" === w.css(t, "display")
    }
    var t = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source
      , mt = new RegExp("^(?:([+-])=|)(" + t + ")([a-z%]*)$","i")
      , p = ["Top", "Right", "Bottom", "Left"]
      , C = b.documentElement
      , A = function(t) {
        return w.contains(t.ownerDocument, t)
    }
      , yt = {
        composed: !0
    };
    C.getRootNode && (A = function(t) {
        return w.contains(t.ownerDocument, t) || t.getRootNode(yt) === t.ownerDocument
    }
    );
    var gt = {};
    function bt(t, e) {
        for (var i, n, o, s, r, a = [], l = 0, c = t.length; l < c; l++)
            (n = t[l]).style && (i = n.style.display,
            e ? ("none" === i && (a[l] = z.get(n, "display") || null,
            a[l] || (n.style.display = "")),
            "" === n.style.display && vt(n) && (a[l] = (r = s = void 0,
            s = (o = n).ownerDocument,
            o = o.nodeName,
            (r = gt[o]) || (s = s.body.appendChild(s.createElement(o)),
            r = w.css(s, "display"),
            s.parentNode.removeChild(s),
            gt[o] = r = "none" === r ? "block" : r)))) : "none" !== i && (a[l] = "none",
            z.set(n, "display", i)));
        for (l = 0; l < c; l++)
            null != a[l] && (t[l].style.display = a[l]);
        return t
    }
    w.fn.extend({
        show: function() {
            return bt(this, !0)
        },
        hide: function() {
            return bt(this)
        },
        toggle: function(t) {
            return "boolean" == typeof t ? t ? this.show() : this.hide() : this.each(function() {
                vt(this) ? w(this).show() : w(this).hide()
            })
        }
    });
    var S = /^(?:checkbox|radio)$/i
      , wt = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i
      , xt = /^$|^module$|\/(?:java|ecma)script/i
      , T = (L = b.createDocumentFragment().appendChild(b.createElement("div")),
    (D = b.createElement("input")).setAttribute("type", "radio"),
    D.setAttribute("checked", "checked"),
    D.setAttribute("name", "t"),
    L.appendChild(D),
    g.checkClone = L.cloneNode(!0).cloneNode(!0).lastChild.checked,
    L.innerHTML = "<textarea>x</textarea>",
    g.noCloneChecked = !!L.cloneNode(!0).lastChild.defaultValue,
    L.innerHTML = "<option></option>",
    g.option = !!L.lastChild,
    {
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
    });
    function E(t, e) {
        var i = void 0 !== t.getElementsByTagName ? t.getElementsByTagName(e || "*") : void 0 !== t.querySelectorAll ? t.querySelectorAll(e || "*") : [];
        return void 0 === e || e && l(t, e) ? w.merge([t], i) : i
    }
    function kt(t, e) {
        for (var i = 0, n = t.length; i < n; i++)
            z.set(t[i], "globalEval", !e || z.get(e[i], "globalEval"))
    }
    T.tbody = T.tfoot = T.colgroup = T.caption = T.thead,
    T.th = T.td,
    g.option || (T.optgroup = T.option = [1, "<select multiple='multiple'>", "</select>"]);
    var zt = /<|&#?\w+;/;
    function Ct(t, e, i, n, o) {
        for (var s, r, a, l, c, u = e.createDocumentFragment(), d = [], h = 0, p = t.length; h < p; h++)
            if ((s = t[h]) || 0 === s)
                if ("object" === f(s))
                    w.merge(d, s.nodeType ? [s] : s);
                else if (zt.test(s)) {
                    for (r = r || u.appendChild(e.createElement("div")),
                    a = (wt.exec(s) || ["", ""])[1].toLowerCase(),
                    a = T[a] || T._default,
                    r.innerHTML = a[1] + w.htmlPrefilter(s) + a[2],
                    c = a[0]; c--; )
                        r = r.lastChild;
                    w.merge(d, r.childNodes),
                    (r = u.firstChild).textContent = ""
                } else
                    d.push(e.createTextNode(s));
        for (u.textContent = "",
        h = 0; s = d[h++]; )
            if (n && -1 < w.inArray(s, n))
                o && o.push(s);
            else if (l = A(s),
            r = E(u.appendChild(s), "script"),
            l && kt(r),
            i)
                for (c = 0; s = r[c++]; )
                    xt.test(s.type || "") && i.push(s);
        return u
    }
    var At = /^key/
      , St = /^(?:mouse|pointer|contextmenu|drag|drop)|click/
      , Tt = /^([^.]*)(?:\.(.+)|)/;
    function r() {
        return !0
    }
    function P() {
        return !1
    }
    function Et(t, e) {
        return t === function() {
            try {
                return b.activeElement
            } catch (t) {}
        }() == ("focus" === e)
    }
    function Pt(t, e, i, n, o, s) {
        var r, a;
        if ("object" == typeof e) {
            for (a in "string" != typeof i && (n = n || i,
            i = void 0),
            e)
                Pt(t, a, i, n, e[a], s);
            return t
        }
        if (null == n && null == o ? (o = i,
        n = i = void 0) : null == o && ("string" == typeof i ? (o = n,
        n = void 0) : (o = n,
        n = i,
        i = void 0)),
        !1 === o)
            o = P;
        else if (!o)
            return t;
        return 1 === s && (r = o,
        (o = function(t) {
            return w().off(t),
            r.apply(this, arguments)
        }
        ).guid = r.guid || (r.guid = w.guid++)),
        t.each(function() {
            w.event.add(this, e, o, n, i)
        })
    }
    function Ot(t, o, s) {
        s ? (z.set(t, o, !1),
        w.event.add(t, o, {
            namespace: !1,
            handler: function(t) {
                var e, i, n = z.get(this, o);
                if (1 & t.isTrigger && this[o]) {
                    if (n.length)
                        (w.event.special[o] || {}).delegateType && t.stopPropagation();
                    else if (n = a.call(arguments),
                    z.set(this, o, n),
                    e = s(this, o),
                    this[o](),
                    n !== (i = z.get(this, o)) || e ? z.set(this, o, !1) : i = {},
                    n !== i)
                        return t.stopImmediatePropagation(),
                        t.preventDefault(),
                        i.value
                } else
                    n.length && (z.set(this, o, {
                        value: w.event.trigger(w.extend(n[0], w.Event.prototype), n.slice(1), this)
                    }),
                    t.stopImmediatePropagation())
            }
        })) : void 0 === z.get(t, o) && w.event.add(t, o, r)
    }
    w.event = {
        global: {},
        add: function(e, t, i, n, o) {
            var s, r, a, l, c, u, d, h, p, f = z.get(e);
            if (k(e))
                for (i.handler && (i = (s = i).handler,
                o = s.selector),
                o && w.find.matchesSelector(C, o),
                i.guid || (i.guid = w.guid++),
                (a = f.events) || (a = f.events = Object.create(null)),
                (r = f.handle) || (r = f.handle = function(t) {
                    return void 0 !== w && w.event.triggered !== t.type ? w.event.dispatch.apply(e, arguments) : void 0
                }
                ),
                l = (t = (t || "").match(x) || [""]).length; l--; )
                    d = p = (h = Tt.exec(t[l]) || [])[1],
                    h = (h[2] || "").split(".").sort(),
                    d && (c = w.event.special[d] || {},
                    d = (o ? c.delegateType : c.bindType) || d,
                    c = w.event.special[d] || {},
                    p = w.extend({
                        type: d,
                        origType: p,
                        data: n,
                        handler: i,
                        guid: i.guid,
                        selector: o,
                        needsContext: o && w.expr.match.needsContext.test(o),
                        namespace: h.join(".")
                    }, s),
                    (u = a[d]) || ((u = a[d] = []).delegateCount = 0,
                    c.setup && !1 !== c.setup.call(e, n, h, r) || e.addEventListener && e.addEventListener(d, r)),
                    c.add && (c.add.call(e, p),
                    p.handler.guid || (p.handler.guid = i.guid)),
                    o ? u.splice(u.delegateCount++, 0, p) : u.push(p),
                    w.event.global[d] = !0)
        },
        remove: function(t, e, i, n, o) {
            var s, r, a, l, c, u, d, h, p, f, v, m = z.hasData(t) && z.get(t);
            if (m && (l = m.events)) {
                for (c = (e = (e || "").match(x) || [""]).length; c--; )
                    if (p = v = (a = Tt.exec(e[c]) || [])[1],
                    f = (a[2] || "").split(".").sort(),
                    p) {
                        for (d = w.event.special[p] || {},
                        h = l[p = (n ? d.delegateType : d.bindType) || p] || [],
                        a = a[2] && new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"),
                        r = s = h.length; s--; )
                            u = h[s],
                            !o && v !== u.origType || i && i.guid !== u.guid || a && !a.test(u.namespace) || n && n !== u.selector && ("**" !== n || !u.selector) || (h.splice(s, 1),
                            u.selector && h.delegateCount--,
                            d.remove && d.remove.call(t, u));
                        r && !h.length && (d.teardown && !1 !== d.teardown.call(t, f, m.handle) || w.removeEvent(t, p, m.handle),
                        delete l[p])
                    } else
                        for (p in l)
                            w.event.remove(t, p + e[c], i, n, !0);
                w.isEmptyObject(l) && z.remove(t, "handle events")
            }
        },
        dispatch: function(t) {
            var e, i, n, o, s, r = new Array(arguments.length), a = w.event.fix(t), t = (z.get(this, "events") || Object.create(null))[a.type] || [], l = w.event.special[a.type] || {};
            for (r[0] = a,
            e = 1; e < arguments.length; e++)
                r[e] = arguments[e];
            if (a.delegateTarget = this,
            !l.preDispatch || !1 !== l.preDispatch.call(this, a)) {
                for (s = w.event.handlers.call(this, a, t),
                e = 0; (n = s[e++]) && !a.isPropagationStopped(); )
                    for (a.currentTarget = n.elem,
                    i = 0; (o = n.handlers[i++]) && !a.isImmediatePropagationStopped(); )
                        a.rnamespace && !1 !== o.namespace && !a.rnamespace.test(o.namespace) || (a.handleObj = o,
                        a.data = o.data,
                        void 0 !== (o = ((w.event.special[o.origType] || {}).handle || o.handler).apply(n.elem, r)) && !1 === (a.result = o) && (a.preventDefault(),
                        a.stopPropagation()));
                return l.postDispatch && l.postDispatch.call(this, a),
                a.result
            }
        },
        handlers: function(t, e) {
            var i, n, o, s, r, a = [], l = e.delegateCount, c = t.target;
            if (l && c.nodeType && !("click" === t.type && 1 <= t.button))
                for (; c !== this; c = c.parentNode || this)
                    if (1 === c.nodeType && ("click" !== t.type || !0 !== c.disabled)) {
                        for (s = [],
                        r = {},
                        i = 0; i < l; i++)
                            void 0 === r[o = (n = e[i]).selector + " "] && (r[o] = n.needsContext ? -1 < w(o, this).index(c) : w.find(o, this, null, [c]).length),
                            r[o] && s.push(n);
                        s.length && a.push({
                            elem: c,
                            handlers: s
                        })
                    }
            return c = this,
            l < e.length && a.push({
                elem: c,
                handlers: e.slice(l)
            }),
            a
        },
        addProp: function(e, t) {
            Object.defineProperty(w.Event.prototype, e, {
                enumerable: !0,
                configurable: !0,
                get: m(t) ? function() {
                    if (this.originalEvent)
                        return t(this.originalEvent)
                }
                : function() {
                    if (this.originalEvent)
                        return this.originalEvent[e]
                }
                ,
                set: function(t) {
                    Object.defineProperty(this, e, {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    })
                }
            })
        },
        fix: function(t) {
            return t[w.expando] ? t : new w.Event(t)
        },
        special: {
            load: {
                noBubble: !0
            },
            click: {
                setup: function(t) {
                    t = this || t;
                    return S.test(t.type) && t.click && l(t, "input") && Ot(t, "click", r),
                    !1
                },
                trigger: function(t) {
                    t = this || t;
                    return S.test(t.type) && t.click && l(t, "input") && Ot(t, "click"),
                    !0
                },
                _default: function(t) {
                    t = t.target;
                    return S.test(t.type) && t.click && l(t, "input") && z.get(t, "click") || l(t, "a")
                }
            },
            beforeunload: {
                postDispatch: function(t) {
                    void 0 !== t.result && t.originalEvent && (t.originalEvent.returnValue = t.result)
                }
            }
        }
    },
    w.removeEvent = function(t, e, i) {
        t.removeEventListener && t.removeEventListener(e, i)
    }
    ,
    w.Event = function(t, e) {
        if (!(this instanceof w.Event))
            return new w.Event(t,e);
        t && t.type ? (this.originalEvent = t,
        this.type = t.type,
        this.isDefaultPrevented = t.defaultPrevented || void 0 === t.defaultPrevented && !1 === t.returnValue ? r : P,
        this.target = t.target && 3 === t.target.nodeType ? t.target.parentNode : t.target,
        this.currentTarget = t.currentTarget,
        this.relatedTarget = t.relatedTarget) : this.type = t,
        e && w.extend(this, e),
        this.timeStamp = t && t.timeStamp || Date.now(),
        this[w.expando] = !0
    }
    ,
    w.Event.prototype = {
        constructor: w.Event,
        isDefaultPrevented: P,
        isPropagationStopped: P,
        isImmediatePropagationStopped: P,
        isSimulated: !1,
        preventDefault: function() {
            var t = this.originalEvent;
            this.isDefaultPrevented = r,
            t && !this.isSimulated && t.preventDefault()
        },
        stopPropagation: function() {
            var t = this.originalEvent;
            this.isPropagationStopped = r,
            t && !this.isSimulated && t.stopPropagation()
        },
        stopImmediatePropagation: function() {
            var t = this.originalEvent;
            this.isImmediatePropagationStopped = r,
            t && !this.isSimulated && t.stopImmediatePropagation(),
            this.stopPropagation()
        }
    },
    w.each({
        altKey: !0,
        bubbles: !0,
        cancelable: !0,
        changedTouches: !0,
        ctrlKey: !0,
        detail: !0,
        eventPhase: !0,
        metaKey: !0,
        pageX: !0,
        pageY: !0,
        shiftKey: !0,
        view: !0,
        char: !0,
        code: !0,
        charCode: !0,
        key: !0,
        keyCode: !0,
        button: !0,
        buttons: !0,
        clientX: !0,
        clientY: !0,
        offsetX: !0,
        offsetY: !0,
        pointerId: !0,
        pointerType: !0,
        screenX: !0,
        screenY: !0,
        targetTouches: !0,
        toElement: !0,
        touches: !0,
        which: function(t) {
            var e = t.button;
            return null == t.which && At.test(t.type) ? null != t.charCode ? t.charCode : t.keyCode : !t.which && void 0 !== e && St.test(t.type) ? 1 & e ? 1 : 2 & e ? 3 : 4 & e ? 2 : 0 : t.which
        }
    }, w.event.addProp),
    w.each({
        focus: "focusin",
        blur: "focusout"
    }, function(t, e) {
        w.event.special[t] = {
            setup: function() {
                return Ot(this, t, Et),
                !1
            },
            trigger: function() {
                return Ot(this, t),
                !0
            },
            delegateType: e
        }
    }),
    w.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout",
        pointerenter: "pointerover",
        pointerleave: "pointerout"
    }, function(t, o) {
        w.event.special[t] = {
            delegateType: o,
            bindType: o,
            handle: function(t) {
                var e, i = t.relatedTarget, n = t.handleObj;
                return i && (i === this || w.contains(this, i)) || (t.type = n.origType,
                e = n.handler.apply(this, arguments),
                t.type = o),
                e
            }
        }
    }),
    w.fn.extend({
        on: function(t, e, i, n) {
            return Pt(this, t, e, i, n)
        },
        one: function(t, e, i, n) {
            return Pt(this, t, e, i, n, 1)
        },
        off: function(t, e, i) {
            var n, o;
            if (t && t.preventDefault && t.handleObj)
                return n = t.handleObj,
                w(t.delegateTarget).off(n.namespace ? n.origType + "." + n.namespace : n.origType, n.selector, n.handler),
                this;
            if ("object" != typeof t)
                return !1 !== e && "function" != typeof e || (i = e,
                e = void 0),
                !1 === i && (i = P),
                this.each(function() {
                    w.event.remove(this, t, i, e)
                });
            for (o in t)
                this.off(o, e, t[o]);
            return this
        }
    });
    var Mt = /<script|<style|<link/i
      , Dt = /checked\s*(?:[^=]|=\s*.checked.)/i
      , Lt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
    function Rt(t, e) {
        return l(t, "table") && l(11 !== e.nodeType ? e : e.firstChild, "tr") && w(t).children("tbody")[0] || t
    }
    function It(t) {
        return t.type = (null !== t.getAttribute("type")) + "/" + t.type,
        t
    }
    function Nt(t) {
        return "true/" === (t.type || "").slice(0, 5) ? t.type = t.type.slice(5) : t.removeAttribute("type"),
        t
    }
    function Ht(t, e) {
        var i, n, o, s;
        if (1 === e.nodeType) {
            if (z.hasData(t) && (s = z.get(t).events))
                for (o in z.remove(e, "handle events"),
                s)
                    for (i = 0,
                    n = s[o].length; i < n; i++)
                        w.event.add(e, o, s[o][i]);
            c.hasData(t) && (t = c.access(t),
            t = w.extend({}, t),
            c.set(e, t))
        }
    }
    function O(i, n, o, s) {
        n = q(n);
        var t, e, r, a, l, c, u = 0, d = i.length, h = d - 1, p = n[0], f = m(p);
        if (f || 1 < d && "string" == typeof p && !g.checkClone && Dt.test(p))
            return i.each(function(t) {
                var e = i.eq(t);
                f && (n[0] = p.call(this, t, e.html())),
                O(e, n, o, s)
            });
        if (d && (e = (t = Ct(n, i[0].ownerDocument, !1, i, s)).firstChild,
        1 === t.childNodes.length && (t = e),
        e || s)) {
            for (a = (r = w.map(E(t, "script"), It)).length; u < d; u++)
                l = t,
                u !== h && (l = w.clone(l, !0, !0),
                a && w.merge(r, E(l, "script"))),
                o.call(i[u], l, u);
            if (a)
                for (c = r[r.length - 1].ownerDocument,
                w.map(r, Nt),
                u = 0; u < a; u++)
                    l = r[u],
                    xt.test(l.type || "") && !z.access(l, "globalEval") && w.contains(c, l) && (l.src && "module" !== (l.type || "").toLowerCase() ? w._evalUrl && !l.noModule && w._evalUrl(l.src, {
                        nonce: l.nonce || l.getAttribute("nonce")
                    }, c) : G(l.textContent.replace(Lt, ""), l, c))
        }
        return i
    }
    function qt(t, e, i) {
        for (var n, o = e ? w.filter(e, t) : t, s = 0; null != (n = o[s]); s++)
            i || 1 !== n.nodeType || w.cleanData(E(n)),
            n.parentNode && (i && A(n) && kt(E(n, "script")),
            n.parentNode.removeChild(n));
        return t
    }
    w.extend({
        htmlPrefilter: function(t) {
            return t
        },
        clone: function(t, e, i) {
            var n, o, s, r, a, l, c, u = t.cloneNode(!0), d = A(t);
            if (!(g.noCloneChecked || 1 !== t.nodeType && 11 !== t.nodeType || w.isXMLDoc(t)))
                for (r = E(u),
                n = 0,
                o = (s = E(t)).length; n < o; n++)
                    a = s[n],
                    l = r[n],
                    c = void 0,
                    "input" === (c = l.nodeName.toLowerCase()) && S.test(a.type) ? l.checked = a.checked : "input" !== c && "textarea" !== c || (l.defaultValue = a.defaultValue);
            if (e)
                if (i)
                    for (s = s || E(t),
                    r = r || E(u),
                    n = 0,
                    o = s.length; n < o; n++)
                        Ht(s[n], r[n]);
                else
                    Ht(t, u);
            return 0 < (r = E(u, "script")).length && kt(r, !d && E(t, "script")),
            u
        },
        cleanData: function(t) {
            for (var e, i, n, o = w.event.special, s = 0; void 0 !== (i = t[s]); s++)
                if (k(i)) {
                    if (e = i[z.expando]) {
                        if (e.events)
                            for (n in e.events)
                                o[n] ? w.event.remove(i, n) : w.removeEvent(i, n, e.handle);
                        i[z.expando] = void 0
                    }
                    i[c.expando] && (i[c.expando] = void 0)
                }
        }
    }),
    w.fn.extend({
        detach: function(t) {
            return qt(this, t, !0)
        },
        remove: function(t) {
            return qt(this, t)
        },
        text: function(t) {
            return d(this, function(t) {
                return void 0 === t ? w.text(this) : this.empty().each(function() {
                    1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = t)
                })
            }, null, t, arguments.length)
        },
        append: function() {
            return O(this, arguments, function(t) {
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || Rt(this, t).appendChild(t)
            })
        },
        prepend: function() {
            return O(this, arguments, function(t) {
                var e;
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (e = Rt(this, t)).insertBefore(t, e.firstChild)
            })
        },
        before: function() {
            return O(this, arguments, function(t) {
                this.parentNode && this.parentNode.insertBefore(t, this)
            })
        },
        after: function() {
            return O(this, arguments, function(t) {
                this.parentNode && this.parentNode.insertBefore(t, this.nextSibling)
            })
        },
        empty: function() {
            for (var t, e = 0; null != (t = this[e]); e++)
                1 === t.nodeType && (w.cleanData(E(t, !1)),
                t.textContent = "");
            return this
        },
        clone: function(t, e) {
            return t = null != t && t,
            e = null == e ? t : e,
            this.map(function() {
                return w.clone(this, t, e)
            })
        },
        html: function(t) {
            return d(this, function(t) {
                var e = this[0] || {}
                  , i = 0
                  , n = this.length;
                if (void 0 === t && 1 === e.nodeType)
                    return e.innerHTML;
                if ("string" == typeof t && !Mt.test(t) && !T[(wt.exec(t) || ["", ""])[1].toLowerCase()]) {
                    t = w.htmlPrefilter(t);
                    try {
                        for (; i < n; i++)
                            1 === (e = this[i] || {}).nodeType && (w.cleanData(E(e, !1)),
                            e.innerHTML = t);
                        e = 0
                    } catch (t) {}
                }
                e && this.empty().append(t)
            }, null, t, arguments.length)
        },
        replaceWith: function() {
            var i = [];
            return O(this, arguments, function(t) {
                var e = this.parentNode;
                w.inArray(this, i) < 0 && (w.cleanData(E(this)),
                e && e.replaceChild(t, this))
            }, i)
        }
    }),
    w.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(t, r) {
        w.fn[t] = function(t) {
            for (var e, i = [], n = w(t), o = n.length - 1, s = 0; s <= o; s++)
                e = s === o ? this : this.clone(!0),
                w(n[s])[r](e),
                j.apply(i, e.get());
            return this.pushStack(i)
        }
    });
    function jt(t) {
        var e = t.ownerDocument.defaultView;
        return (e = e && e.opener ? e : v).getComputedStyle(t)
    }
    function _t(t, e, i) {
        var n, o = {};
        for (n in e)
            o[n] = t.style[n],
            t.style[n] = e[n];
        for (n in i = i.call(t),
        e)
            t.style[n] = o[n];
        return i
    }
    var Vt, Bt, Ft, Wt, $t, Ut, Gt, o, Xt = new RegExp("^(" + t + ")(?!px)[a-z%]+$","i"), Yt = new RegExp(p.join("|"),"i");
    function s() {
        var t;
        o && (Gt.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",
        o.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",
        C.appendChild(Gt).appendChild(o),
        t = v.getComputedStyle(o),
        Vt = "1%" !== t.top,
        Ut = 12 === Jt(t.marginLeft),
        o.style.right = "60%",
        Wt = 36 === Jt(t.right),
        Bt = 36 === Jt(t.width),
        o.style.position = "absolute",
        Ft = 12 === Jt(o.offsetWidth / 3),
        C.removeChild(Gt),
        o = null)
    }
    function Jt(t) {
        return Math.round(parseFloat(t))
    }
    function M(t, e, i) {
        var n, o, s = t.style;
        return (i = i || jt(t)) && ("" !== (o = i.getPropertyValue(e) || i[e]) || A(t) || (o = w.style(t, e)),
        !g.pixelBoxStyles() && Xt.test(o) && Yt.test(e) && (t = s.width,
        e = s.minWidth,
        n = s.maxWidth,
        s.minWidth = s.maxWidth = s.width = o,
        o = i.width,
        s.width = t,
        s.minWidth = e,
        s.maxWidth = n)),
        void 0 !== o ? o + "" : o
    }
    function Qt(t, e) {
        return {
            get: function() {
                if (!t())
                    return (this.get = e).apply(this, arguments);
                delete this.get
            }
        }
    }
    Gt = b.createElement("div"),
    (o = b.createElement("div")).style && (o.style.backgroundClip = "content-box",
    o.cloneNode(!0).style.backgroundClip = "",
    g.clearCloneStyle = "content-box" === o.style.backgroundClip,
    w.extend(g, {
        boxSizingReliable: function() {
            return s(),
            Bt
        },
        pixelBoxStyles: function() {
            return s(),
            Wt
        },
        pixelPosition: function() {
            return s(),
            Vt
        },
        reliableMarginLeft: function() {
            return s(),
            Ut
        },
        scrollboxSize: function() {
            return s(),
            Ft
        },
        reliableTrDimensions: function() {
            var t, e, i;
            return null == $t && (t = b.createElement("table"),
            e = b.createElement("tr"),
            i = b.createElement("div"),
            t.style.cssText = "position:absolute;left:-11111px",
            e.style.height = "1px",
            i.style.height = "9px",
            C.appendChild(t).appendChild(e).appendChild(i),
            i = v.getComputedStyle(e),
            $t = 3 < parseInt(i.height),
            C.removeChild(t)),
            $t
        }
    }));
    var Kt = ["Webkit", "Moz", "ms"]
      , Zt = b.createElement("div").style
      , te = {};
    function ee(t) {
        var e = w.cssProps[t] || te[t];
        return e || (t in Zt ? t : te[t] = function(t) {
            for (var e = t[0].toUpperCase() + t.slice(1), i = Kt.length; i--; )
                if ((t = Kt[i] + e)in Zt)
                    return t
        }(t) || t)
    }
    var D, L, ie = /^(none|table(?!-c[ea]).+)/, ne = /^--/, oe = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, se = {
        letterSpacing: "0",
        fontWeight: "400"
    };
    function re(t, e, i) {
        var n = mt.exec(e);
        return n ? Math.max(0, n[2] - (i || 0)) + (n[3] || "px") : e
    }
    function ae(t, e, i, n, o, s) {
        var r = "width" === e ? 1 : 0
          , a = 0
          , l = 0;
        if (i === (n ? "border" : "content"))
            return 0;
        for (; r < 4; r += 2)
            "margin" === i && (l += w.css(t, i + p[r], !0, o)),
            n ? ("content" === i && (l -= w.css(t, "padding" + p[r], !0, o)),
            "margin" !== i && (l -= w.css(t, "border" + p[r] + "Width", !0, o))) : (l += w.css(t, "padding" + p[r], !0, o),
            "padding" !== i ? l += w.css(t, "border" + p[r] + "Width", !0, o) : a += w.css(t, "border" + p[r] + "Width", !0, o));
        return !n && 0 <= s && (l += Math.max(0, Math.ceil(t["offset" + e[0].toUpperCase() + e.slice(1)] - s - l - a - .5)) || 0),
        l
    }
    function le(t, e, i) {
        var n = jt(t)
          , o = (!g.boxSizingReliable() || i) && "border-box" === w.css(t, "boxSizing", !1, n)
          , s = o
          , r = M(t, e, n)
          , a = "offset" + e[0].toUpperCase() + e.slice(1);
        if (Xt.test(r)) {
            if (!i)
                return r;
            r = "auto"
        }
        return (!g.boxSizingReliable() && o || !g.reliableTrDimensions() && l(t, "tr") || "auto" === r || !parseFloat(r) && "inline" === w.css(t, "display", !1, n)) && t.getClientRects().length && (o = "border-box" === w.css(t, "boxSizing", !1, n),
        (s = a in t) && (r = t[a])),
        (r = parseFloat(r) || 0) + ae(t, e, i || (o ? "border" : "content"), s, n, r) + "px"
    }
    w.extend({
        cssHooks: {
            opacity: {
                get: function(t, e) {
                    if (e)
                        return "" === (e = M(t, "opacity")) ? "1" : e
                }
            }
        },
        cssNumber: {
            animationIterationCount: !0,
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            gridArea: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnStart: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowStart: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {},
        style: function(t, e, i, n) {
            if (t && 3 !== t.nodeType && 8 !== t.nodeType && t.style) {
                var o, s, r, a = h(e), l = ne.test(e), c = t.style;
                if (l || (e = ee(a)),
                r = w.cssHooks[e] || w.cssHooks[a],
                void 0 === i)
                    return r && "get"in r && void 0 !== (o = r.get(t, !1, n)) ? o : c[e];
                "string" === (s = typeof i) && (o = mt.exec(i)) && o[1] && (i = function(t, e, i, n) {
                    var o, s, r = 20, a = n ? function() {
                        return n.cur()
                    }
                    : function() {
                        return w.css(t, e, "")
                    }
                    , l = a(), c = i && i[3] || (w.cssNumber[e] ? "" : "px"), u = t.nodeType && (w.cssNumber[e] || "px" !== c && +l) && mt.exec(w.css(t, e));
                    if (u && u[3] !== c) {
                        for (c = c || u[3],
                        u = +(l /= 2) || 1; r--; )
                            w.style(t, e, u + c),
                            (1 - s) * (1 - (s = a() / l || .5)) <= 0 && (r = 0),
                            u /= s;
                        w.style(t, e, (u *= 2) + c),
                        i = i || []
                    }
                    return i && (u = +u || +l || 0,
                    o = i[1] ? u + (i[1] + 1) * i[2] : +i[2],
                    n && (n.unit = c,
                    n.start = u,
                    n.end = o)),
                    o
                }(t, e, o),
                s = "number"),
                null != i && i == i && ("number" !== s || l || (i += o && o[3] || (w.cssNumber[a] ? "" : "px")),
                g.clearCloneStyle || "" !== i || 0 !== e.indexOf("background") || (c[e] = "inherit"),
                r && "set"in r && void 0 === (i = r.set(t, i, n)) || (l ? c.setProperty(e, i) : c[e] = i))
            }
        },
        css: function(t, e, i, n) {
            var o, s = h(e);
            return ne.test(e) || (e = ee(s)),
            "normal" === (o = void 0 === (o = (s = w.cssHooks[e] || w.cssHooks[s]) && "get"in s ? s.get(t, !0, i) : o) ? M(t, e, n) : o) && e in se && (o = se[e]),
            "" === i || i ? (s = parseFloat(o),
            !0 === i || isFinite(s) ? s || 0 : o) : o
        }
    }),
    w.each(["height", "width"], function(t, r) {
        w.cssHooks[r] = {
            get: function(t, e, i) {
                if (e)
                    return !ie.test(w.css(t, "display")) || t.getClientRects().length && t.getBoundingClientRect().width ? le(t, r, i) : _t(t, oe, function() {
                        return le(t, r, i)
                    })
            },
            set: function(t, e, i) {
                var n = jt(t)
                  , o = !g.scrollboxSize() && "absolute" === n.position
                  , s = (o || i) && "border-box" === w.css(t, "boxSizing", !1, n)
                  , i = i ? ae(t, r, i, s, n) : 0;
                return s && o && (i -= Math.ceil(t["offset" + r[0].toUpperCase() + r.slice(1)] - parseFloat(n[r]) - ae(t, r, "border", !1, n) - .5)),
                i && (s = mt.exec(e)) && "px" !== (s[3] || "px") && (t.style[r] = e,
                e = w.css(t, r)),
                re(0, e, i)
            }
        }
    }),
    w.cssHooks.marginLeft = Qt(g.reliableMarginLeft, function(t, e) {
        if (e)
            return (parseFloat(M(t, "marginLeft")) || t.getBoundingClientRect().left - _t(t, {
                marginLeft: 0
            }, function() {
                return t.getBoundingClientRect().left
            })) + "px"
    }),
    w.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(o, s) {
        w.cssHooks[o + s] = {
            expand: function(t) {
                for (var e = 0, i = {}, n = "string" == typeof t ? t.split(" ") : [t]; e < 4; e++)
                    i[o + p[e] + s] = n[e] || n[e - 2] || n[0];
                return i
            }
        },
        "margin" !== o && (w.cssHooks[o + s].set = re)
    }),
    w.fn.extend({
        css: function(t, e) {
            return d(this, function(t, e, i) {
                var n, o, s = {}, r = 0;
                if (Array.isArray(e)) {
                    for (n = jt(t),
                    o = e.length; r < o; r++)
                        s[e[r]] = w.css(t, e[r], !1, n);
                    return s
                }
                return void 0 !== i ? w.style(t, e, i) : w.css(t, e)
            }, t, e, 1 < arguments.length)
        }
    }),
    w.fn.delay = function(n, t) {
        return n = w.fx && w.fx.speeds[n] || n,
        this.queue(t = t || "fx", function(t, e) {
            var i = v.setTimeout(t, n);
            e.stop = function() {
                v.clearTimeout(i)
            }
        })
    }
    ,
    D = b.createElement("input"),
    L = b.createElement("select").appendChild(b.createElement("option")),
    D.type = "checkbox",
    g.checkOn = "" !== D.value,
    g.optSelected = L.selected,
    (D = b.createElement("input")).value = "t",
    D.type = "radio",
    g.radioValue = "t" === D.value;
    var ce, ue = w.expr.attrHandle, de = (w.fn.extend({
        attr: function(t, e) {
            return d(this, w.attr, t, e, 1 < arguments.length)
        },
        removeAttr: function(t) {
            return this.each(function() {
                w.removeAttr(this, t)
            })
        }
    }),
    w.extend({
        attr: function(t, e, i) {
            var n, o, s = t.nodeType;
            if (3 !== s && 8 !== s && 2 !== s)
                return void 0 === t.getAttribute ? w.prop(t, e, i) : (1 === s && w.isXMLDoc(t) || (o = w.attrHooks[e.toLowerCase()] || (w.expr.match.bool.test(e) ? ce : void 0)),
                void 0 !== i ? null === i ? void w.removeAttr(t, e) : o && "set"in o && void 0 !== (n = o.set(t, i, e)) ? n : (t.setAttribute(e, i + ""),
                i) : !(o && "get"in o && null !== (n = o.get(t, e))) && null == (n = w.find.attr(t, e)) ? void 0 : n)
        },
        attrHooks: {
            type: {
                set: function(t, e) {
                    var i;
                    if (!g.radioValue && "radio" === e && l(t, "input"))
                        return i = t.value,
                        t.setAttribute("type", e),
                        i && (t.value = i),
                        e
                }
            }
        },
        removeAttr: function(t, e) {
            var i, n = 0, o = e && e.match(x);
            if (o && 1 === t.nodeType)
                for (; i = o[n++]; )
                    t.removeAttribute(i)
        }
    }),
    ce = {
        set: function(t, e, i) {
            return !1 === e ? w.removeAttr(t, i) : t.setAttribute(i, i),
            i
        }
    },
    w.each(w.expr.match.bool.source.match(/\w+/g), function(t, e) {
        var r = ue[e] || w.find.attr;
        ue[e] = function(t, e, i) {
            var n, o, s = e.toLowerCase();
            return i || (o = ue[s],
            ue[s] = n,
            n = null != r(t, e, i) ? s : null,
            ue[s] = o),
            n
        }
    }),
    /^(?:input|select|textarea|button)$/i), he = /^(?:a|area)$/i;
    function R(t) {
        return (t.match(x) || []).join(" ")
    }
    function I(t) {
        return t.getAttribute && t.getAttribute("class") || ""
    }
    function pe(t) {
        return Array.isArray(t) ? t : "string" == typeof t && t.match(x) || []
    }
    w.fn.extend({
        prop: function(t, e) {
            return d(this, w.prop, t, e, 1 < arguments.length)
        },
        removeProp: function(t) {
            return this.each(function() {
                delete this[w.propFix[t] || t]
            })
        }
    }),
    w.extend({
        prop: function(t, e, i) {
            var n, o, s = t.nodeType;
            if (3 !== s && 8 !== s && 2 !== s)
                return 1 === s && w.isXMLDoc(t) || (e = w.propFix[e] || e,
                o = w.propHooks[e]),
                void 0 !== i ? o && "set"in o && void 0 !== (n = o.set(t, i, e)) ? n : t[e] = i : o && "get"in o && null !== (n = o.get(t, e)) ? n : t[e]
        },
        propHooks: {
            tabIndex: {
                get: function(t) {
                    var e = w.find.attr(t, "tabindex");
                    return e ? parseInt(e, 10) : de.test(t.nodeName) || he.test(t.nodeName) && t.href ? 0 : -1
                }
            }
        },
        propFix: {
            for: "htmlFor",
            class: "className"
        }
    }),
    g.optSelected || (w.propHooks.selected = {
        get: function(t) {
            t = t.parentNode;
            return t && t.parentNode && t.parentNode.selectedIndex,
            null
        },
        set: function(t) {
            t = t.parentNode;
            t && (t.selectedIndex,
            t.parentNode && t.parentNode.selectedIndex)
        }
    }),
    w.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
        w.propFix[this.toLowerCase()] = this
    }),
    w.fn.extend({
        addClass: function(e) {
            var t, i, n, o, s, r, a = 0;
            if (m(e))
                return this.each(function(t) {
                    w(this).addClass(e.call(this, t, I(this)))
                });
            if ((t = pe(e)).length)
                for (; i = this[a++]; )
                    if (r = I(i),
                    n = 1 === i.nodeType && " " + R(r) + " ") {
                        for (s = 0; o = t[s++]; )
                            n.indexOf(" " + o + " ") < 0 && (n += o + " ");
                        r !== (r = R(n)) && i.setAttribute("class", r)
                    }
            return this
        },
        removeClass: function(e) {
            var t, i, n, o, s, r, a = 0;
            if (m(e))
                return this.each(function(t) {
                    w(this).removeClass(e.call(this, t, I(this)))
                });
            if (!arguments.length)
                return this.attr("class", "");
            if ((t = pe(e)).length)
                for (; i = this[a++]; )
                    if (r = I(i),
                    n = 1 === i.nodeType && " " + R(r) + " ") {
                        for (s = 0; o = t[s++]; )
                            for (; -1 < n.indexOf(" " + o + " "); )
                                n = n.replace(" " + o + " ", " ");
                        r !== (r = R(n)) && i.setAttribute("class", r)
                    }
            return this
        },
        toggleClass: function(o, e) {
            var s = typeof o
              , r = "string" == s || Array.isArray(o);
            return "boolean" == typeof e && r ? e ? this.addClass(o) : this.removeClass(o) : m(o) ? this.each(function(t) {
                w(this).toggleClass(o.call(this, t, I(this), e), e)
            }) : this.each(function() {
                var t, e, i, n;
                if (r)
                    for (e = 0,
                    i = w(this),
                    n = pe(o); t = n[e++]; )
                        i.hasClass(t) ? i.removeClass(t) : i.addClass(t);
                else
                    void 0 !== o && "boolean" != s || ((t = I(this)) && z.set(this, "__className__", t),
                    this.setAttribute && this.setAttribute("class", !t && !1 !== o && z.get(this, "__className__") || ""))
            })
        },
        hasClass: function(t) {
            for (var e, i = 0, n = " " + t + " "; e = this[i++]; )
                if (1 === e.nodeType && -1 < (" " + R(I(e)) + " ").indexOf(n))
                    return !0;
            return !1
        }
    });
    function fe(t) {
        t.stopPropagation()
    }
    var ve = /\r/g
      , me = (w.fn.extend({
        val: function(e) {
            var i, t, n, o = this[0];
            return arguments.length ? (n = m(e),
            this.each(function(t) {
                1 === this.nodeType && (null == (t = n ? e.call(this, t, w(this).val()) : e) ? t = "" : "number" == typeof t ? t += "" : Array.isArray(t) && (t = w.map(t, function(t) {
                    return null == t ? "" : t + ""
                })),
                (i = w.valHooks[this.type] || w.valHooks[this.nodeName.toLowerCase()]) && "set"in i && void 0 !== i.set(this, t, "value") || (this.value = t))
            })) : o ? (i = w.valHooks[o.type] || w.valHooks[o.nodeName.toLowerCase()]) && "get"in i && void 0 !== (t = i.get(o, "value")) ? t : "string" == typeof (t = o.value) ? t.replace(ve, "") : null == t ? "" : t : void 0
        }
    }),
    w.extend({
        valHooks: {
            option: {
                get: function(t) {
                    var e = w.find.attr(t, "value");
                    return null != e ? e : R(w.text(t))
                }
            },
            select: {
                get: function(t) {
                    for (var e, i = t.options, n = t.selectedIndex, o = "select-one" === t.type, s = o ? null : [], r = o ? n + 1 : i.length, a = n < 0 ? r : o ? n : 0; a < r; a++)
                        if (((e = i[a]).selected || a === n) && !e.disabled && (!e.parentNode.disabled || !l(e.parentNode, "optgroup"))) {
                            if (e = w(e).val(),
                            o)
                                return e;
                            s.push(e)
                        }
                    return s
                },
                set: function(t, e) {
                    for (var i, n, o = t.options, s = w.makeArray(e), r = o.length; r--; )
                        ((n = o[r]).selected = -1 < w.inArray(w.valHooks.option.get(n), s)) && (i = !0);
                    return i || (t.selectedIndex = -1),
                    s
                }
            }
        }
    }),
    w.each(["radio", "checkbox"], function() {
        w.valHooks[this] = {
            set: function(t, e) {
                if (Array.isArray(e))
                    return t.checked = -1 < w.inArray(w(t).val(), e)
            }
        },
        g.checkOn || (w.valHooks[this].get = function(t) {
            return null === t.getAttribute("value") ? "on" : t.value
        }
        )
    }),
    g.focusin = "onfocusin"in v,
    /^(?:focusinfocus|focusoutblur)$/)
      , ye = (w.extend(w.event, {
        trigger: function(t, e, i, n) {
            var o, s, r, a, l, c, u, d = [i || b], h = F.call(t, "type") ? t.type : t, p = F.call(t, "namespace") ? t.namespace.split(".") : [], f = u = s = i = i || b;
            if (3 !== i.nodeType && 8 !== i.nodeType && !me.test(h + w.event.triggered) && (-1 < h.indexOf(".") && (h = (p = h.split(".")).shift(),
            p.sort()),
            a = h.indexOf(":") < 0 && "on" + h,
            (t = t[w.expando] ? t : new w.Event(h,"object" == typeof t && t)).isTrigger = n ? 2 : 3,
            t.namespace = p.join("."),
            t.rnamespace = t.namespace ? new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
            t.result = void 0,
            t.target || (t.target = i),
            e = null == e ? [t] : w.makeArray(e, [t]),
            c = w.event.special[h] || {},
            n || !c.trigger || !1 !== c.trigger.apply(i, e))) {
                if (!n && !c.noBubble && !y(i)) {
                    for (r = c.delegateType || h,
                    me.test(r + h) || (f = f.parentNode); f; f = f.parentNode)
                        d.push(f),
                        s = f;
                    s === (i.ownerDocument || b) && d.push(s.defaultView || s.parentWindow || v)
                }
                for (o = 0; (f = d[o++]) && !t.isPropagationStopped(); )
                    u = f,
                    t.type = 1 < o ? r : c.bindType || h,
                    (l = (z.get(f, "events") || Object.create(null))[t.type] && z.get(f, "handle")) && l.apply(f, e),
                    (l = a && f[a]) && l.apply && k(f) && (t.result = l.apply(f, e),
                    !1 === t.result && t.preventDefault());
                return t.type = h,
                n || t.isDefaultPrevented() || c._default && !1 !== c._default.apply(d.pop(), e) || !k(i) || a && m(i[h]) && !y(i) && ((s = i[a]) && (i[a] = null),
                w.event.triggered = h,
                t.isPropagationStopped() && u.addEventListener(h, fe),
                i[h](),
                t.isPropagationStopped() && u.removeEventListener(h, fe),
                w.event.triggered = void 0,
                s && (i[a] = s)),
                t.result
            }
        },
        simulate: function(t, e, i) {
            i = w.extend(new w.Event, i, {
                type: t,
                isSimulated: !0
            });
            w.event.trigger(i, null, e)
        }
    }),
    w.fn.extend({
        trigger: function(t, e) {
            return this.each(function() {
                w.event.trigger(t, e, this)
            })
        },
        triggerHandler: function(t, e) {
            var i = this[0];
            if (i)
                return w.event.trigger(t, e, i, !0)
        }
    }),
    g.focusin || w.each({
        focus: "focusin",
        blur: "focusout"
    }, function(i, n) {
        function o(t) {
            w.event.simulate(n, t.target, w.event.fix(t))
        }
        w.event.special[n] = {
            setup: function() {
                var t = this.ownerDocument || this.document || this
                  , e = z.access(t, n);
                e || t.addEventListener(i, o, !0),
                z.access(t, n, (e || 0) + 1)
            },
            teardown: function() {
                var t = this.ownerDocument || this.document || this
                  , e = z.access(t, n) - 1;
                e ? z.access(t, n, e) : (t.removeEventListener(i, o, !0),
                z.remove(t, n))
            }
        }
    }),
    w.parseXML = function(t) {
        var e;
        if (!t || "string" != typeof t)
            return null;
        try {
            e = (new v.DOMParser).parseFromString(t, "text/xml")
        } catch (t) {
            e = void 0
        }
        return e && !e.getElementsByTagName("parsererror").length || w.error("Invalid XML: " + t),
        e
    }
    ,
    /\[\]$/)
      , ge = /\r?\n/g
      , be = /^(?:submit|button|image|reset|file)$/i
      , we = /^(?:input|select|textarea|keygen)/i;
    w.param = function(t, e) {
        function i(t, e) {
            e = m(e) ? e() : e,
            o[o.length] = encodeURIComponent(t) + "=" + encodeURIComponent(null == e ? "" : e)
        }
        var n, o = [];
        if (null == t)
            return "";
        if (Array.isArray(t) || t.jquery && !w.isPlainObject(t))
            w.each(t, function() {
                i(this.name, this.value)
            });
        else
            for (n in t)
                !function i(n, t, o, s) {
                    if (Array.isArray(t))
                        w.each(t, function(t, e) {
                            o || ye.test(n) ? s(n, e) : i(n + "[" + ("object" == typeof e && null != e ? t : "") + "]", e, o, s)
                        });
                    else if (o || "object" !== f(t))
                        s(n, t);
                    else
                        for (var e in t)
                            i(n + "[" + e + "]", t[e], o, s)
                }(n, t[n], e, i);
        return o.join("&")
    }
    ,
    w.fn.extend({
        serialize: function() {
            return w.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                var t = w.prop(this, "elements");
                return t ? w.makeArray(t) : this
            }).filter(function() {
                var t = this.type;
                return this.name && !w(this).is(":disabled") && we.test(this.nodeName) && !be.test(t) && (this.checked || !S.test(t))
            }).map(function(t, e) {
                var i = w(this).val();
                return null == i ? null : Array.isArray(i) ? w.map(i, function(t) {
                    return {
                        name: e.name,
                        value: t.replace(ge, "\r\n")
                    }
                }) : {
                    name: e.name,
                    value: i.replace(ge, "\r\n")
                }
            }).get()
        }
    }),
    w.fn.extend({
        wrapAll: function(t) {
            return this[0] && (m(t) && (t = t.call(this[0])),
            t = w(t, this[0].ownerDocument).eq(0).clone(!0),
            this[0].parentNode && t.insertBefore(this[0]),
            t.map(function() {
                for (var t = this; t.firstElementChild; )
                    t = t.firstElementChild;
                return t
            }).append(this)),
            this
        },
        wrapInner: function(i) {
            return m(i) ? this.each(function(t) {
                w(this).wrapInner(i.call(this, t))
            }) : this.each(function() {
                var t = w(this)
                  , e = t.contents();
                e.length ? e.wrapAll(i) : t.append(i)
            })
        },
        wrap: function(e) {
            var i = m(e);
            return this.each(function(t) {
                w(this).wrapAll(i ? e.call(this, t) : e)
            })
        },
        unwrap: function(t) {
            return this.parent(t).not("body").each(function() {
                w(this).replaceWith(this.childNodes)
            }),
            this
        }
    }),
    w.expr.pseudos.hidden = function(t) {
        return !w.expr.pseudos.visible(t)
    }
    ,
    w.expr.pseudos.visible = function(t) {
        return !!(t.offsetWidth || t.offsetHeight || t.getClientRects().length)
    }
    ,
    g.createHTMLDocument = ((t = b.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>",
    2 === t.childNodes.length),
    w.parseHTML = function(t, e, i) {
        return "string" != typeof t ? [] : ("boolean" == typeof e && (i = e,
        e = !1),
        e || (g.createHTMLDocument ? ((n = (e = b.implementation.createHTMLDocument("")).createElement("base")).href = b.location.href,
        e.head.appendChild(n)) : e = b),
        n = !i && [],
        (i = Q.exec(t)) ? [e.createElement(i[1])] : (i = Ct([t], e, n),
        n && n.length && w(n).remove(),
        w.merge([], i.childNodes)));
        var n
    }
    ,
    w.offset = {
        setOffset: function(t, e, i) {
            var n, o, s, r, a = w.css(t, "position"), l = w(t), c = {};
            "static" === a && (t.style.position = "relative"),
            s = l.offset(),
            n = w.css(t, "top"),
            r = w.css(t, "left"),
            a = ("absolute" === a || "fixed" === a) && -1 < (n + r).indexOf("auto") ? (o = (a = l.position()).top,
            a.left) : (o = parseFloat(n) || 0,
            parseFloat(r) || 0),
            null != (e = m(e) ? e.call(t, i, w.extend({}, s)) : e).top && (c.top = e.top - s.top + o),
            null != e.left && (c.left = e.left - s.left + a),
            "using"in e ? e.using.call(t, c) : ("number" == typeof c.top && (c.top += "px"),
            "number" == typeof c.left && (c.left += "px"),
            l.css(c))
        }
    },
    w.fn.extend({
        offset: function(e) {
            if (arguments.length)
                return void 0 === e ? this : this.each(function(t) {
                    w.offset.setOffset(this, e, t)
                });
            var t, i = this[0];
            return i ? i.getClientRects().length ? (t = i.getBoundingClientRect(),
            i = i.ownerDocument.defaultView,
            {
                top: t.top + i.pageYOffset,
                left: t.left + i.pageXOffset
            }) : {
                top: 0,
                left: 0
            } : void 0
        },
        position: function() {
            if (this[0]) {
                var t, e, i, n = this[0], o = {
                    top: 0,
                    left: 0
                };
                if ("fixed" === w.css(n, "position"))
                    e = n.getBoundingClientRect();
                else {
                    for (e = this.offset(),
                    i = n.ownerDocument,
                    t = n.offsetParent || i.documentElement; t && (t === i.body || t === i.documentElement) && "static" === w.css(t, "position"); )
                        t = t.parentNode;
                    t && t !== n && 1 === t.nodeType && ((o = w(t).offset()).top += w.css(t, "borderTopWidth", !0),
                    o.left += w.css(t, "borderLeftWidth", !0))
                }
                return {
                    top: e.top - o.top - w.css(n, "marginTop", !0),
                    left: e.left - o.left - w.css(n, "marginLeft", !0)
                }
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var t = this.offsetParent; t && "static" === w.css(t, "position"); )
                    t = t.offsetParent;
                return t || C
            })
        }
    }),
    w.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(e, o) {
        var s = "pageYOffset" === o;
        w.fn[e] = function(t) {
            return d(this, function(t, e, i) {
                var n;
                if (y(t) ? n = t : 9 === t.nodeType && (n = t.defaultView),
                void 0 === i)
                    return n ? n[o] : t[e];
                n ? n.scrollTo(s ? n.pageXOffset : i, s ? i : n.pageYOffset) : t[e] = i
            }, e, t, arguments.length)
        }
    }),
    w.each(["top", "left"], function(t, i) {
        w.cssHooks[i] = Qt(g.pixelPosition, function(t, e) {
            if (e)
                return e = M(t, i),
                Xt.test(e) ? w(t).position()[i] + "px" : e
        })
    }),
    w.each({
        Height: "height",
        Width: "width"
    }, function(r, a) {
        w.each({
            padding: "inner" + r,
            content: a,
            "": "outer" + r
        }, function(n, s) {
            w.fn[s] = function(t, e) {
                var i = arguments.length && (n || "boolean" != typeof t)
                  , o = n || (!0 === t || !0 === e ? "margin" : "border");
                return d(this, function(t, e, i) {
                    var n;
                    return y(t) ? 0 === s.indexOf("outer") ? t["inner" + r] : t.document.documentElement["client" + r] : 9 === t.nodeType ? (n = t.documentElement,
                    Math.max(t.body["scroll" + r], n["scroll" + r], t.body["offset" + r], n["offset" + r], n["client" + r])) : void 0 === i ? w.css(t, e, o) : w.style(t, e, i, o)
                }, a, i ? t : void 0, i)
            }
        })
    }),
    w.fn.extend({
        bind: function(t, e, i) {
            return this.on(t, null, e, i)
        },
        unbind: function(t, e) {
            return this.off(t, null, e)
        },
        delegate: function(t, e, i, n) {
            return this.on(e, t, i, n)
        },
        undelegate: function(t, e, i) {
            return 1 === arguments.length ? this.off(t, "**") : this.off(e, t || "**", i)
        },
        hover: function(t, e) {
            return this.mouseenter(t).mouseleave(e || t)
        }
    }),
    w.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(t, i) {
        w.fn[i] = function(t, e) {
            return 0 < arguments.length ? this.on(i, null, t, e) : this.trigger(i)
        }
    });
    var xe = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g
      , ke = (w.proxy = function(t, e) {
        var i, n;
        if ("string" == typeof e && (n = t[e],
        e = t,
        t = n),
        m(t))
            return i = a.call(arguments, 2),
            (n = function() {
                return t.apply(e || this, i.concat(a.call(arguments)))
            }
            ).guid = t.guid = t.guid || w.guid++,
            n
    }
    ,
    w.holdReady = function(t) {
        t ? w.readyWait++ : w.ready(!0)
    }
    ,
    w.isArray = Array.isArray,
    w.parseJSON = JSON.parse,
    w.nodeName = l,
    w.isFunction = m,
    w.isWindow = y,
    w.camelCase = h,
    w.type = f,
    w.now = Date.now,
    w.isNumeric = function(t) {
        var e = w.type(t);
        return ("number" === e || "string" === e) && !isNaN(t - parseFloat(t))
    }
    ,
    w.trim = function(t) {
        return null == t ? "" : (t + "").replace(xe, "")
    }
    ,
    "function" == typeof define && define.amd && define("jquery", [], function() {
        return w
    }),
    v.jQuery)
      , ze = v.$;
    return w.noConflict = function(t) {
        return v.$ === w && (v.$ = ze),
        t && v.jQuery === w && (v.jQuery = ke),
        w
    }
    ,
    void 0 === N && (v.jQuery = v.$ = w),
    w
}),
function(t, e) {
    for (var i in e)
        t[i] = e[i]
}(window, function(i) {
    var n = {};
    function o(t) {
        if (n[t])
            return n[t].exports;
        var e = n[t] = {
            i: t,
            l: !1,
            exports: {}
        };
        return i[t].call(e.exports, e, e.exports, o),
        e.l = !0,
        e.exports
    }
    return o.m = i,
    o.c = n,
    o.d = function(t, e, i) {
        o.o(t, e) || Object.defineProperty(t, e, {
            enumerable: !0,
            get: i
        })
    }
    ,
    o.r = function(t) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(t, "__esModule", {
            value: !0
        })
    }
    ,
    o.t = function(e, t) {
        if (1 & t && (e = o(e)),
        8 & t)
            return e;
        if (4 & t && "object" == typeof e && e && e.__esModule)
            return e;
        var i = Object.create(null);
        if (o.r(i),
        Object.defineProperty(i, "default", {
            enumerable: !0,
            value: e
        }),
        2 & t && "string" != typeof e)
            for (var n in e)
                o.d(i, n, function(t) {
                    return e[t]
                }
                .bind(null, n));
        return i
    }
    ,
    o.n = function(t) {
        var e = t && t.__esModule ? function() {
            return t.default
        }
        : function() {
            return t
        }
        ;
        return o.d(e, "a", e),
        e
    }
    ,
    o.o = function(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e)
    }
    ,
    o.p = "",
    o(o.s = 4)
}({
    4: function(N, t, e) {
        "use strict";
        function o(t, r, a, l) {
            return new (a = a || Promise)(function(i, e) {
                function n(t) {
                    try {
                        s(l.next(t))
                    } catch (t) {
                        e(t)
                    }
                }
                function o(t) {
                    try {
                        s(l.throw(t))
                    } catch (t) {
                        e(t)
                    }
                }
                function s(t) {
                    var e;
                    t.done ? i(t.value) : ((e = t.value)instanceof a ? e : new a(function(t) {
                        t(e)
                    }
                    )).then(n, o)
                }
                s((l = l.apply(t, r || [])).next())
            }
            )
        }
        var i, u, r, d, h, l, p, m, f, n, a, c, v, y, g, H, s, q, b, w, j, _;
        e.r(t),
        e.d(t, "MoveDirection", function() {
            return i
        }),
        e.d(t, "RotateDirection", function() {
            return p
        }),
        e.d(t, "ClickMode", function() {
            return c
        }),
        e.d(t, "DivMode", function() {
            return a
        }),
        e.d(t, "HoverMode", function() {
            return r
        }),
        e.d(t, "CollisionMode", function() {
            return n
        }),
        e.d(t, "OutMode", function() {
            return m
        }),
        e.d(t, "SizeMode", function() {
            return s
        }),
        e.d(t, "SizeAnimationStatus", function() {
            return h
        }),
        e.d(t, "OpacityAnimationStatus", function() {
            return d
        }),
        e.d(t, "DestroyType", function() {
            return l
        }),
        e.d(t, "ProcessBubbleType", function() {
            return y
        }),
        e.d(t, "ShapeType", function() {
            return u
        }),
        e.d(t, "StartValueType", function() {
            return f
        }),
        e.d(t, "DivType", function() {
            return v
        }),
        e.d(t, "InteractivityDetect", function() {
            return g
        }),
        e.d(t, "particlesJS", function() {
            return Ie
        }),
        e.d(t, "pJSDom", function() {
            return Ne
        }),
        e.d(t, "tsParticles", function() {
            return Re
        }),
        Object.create,
        Object.create;
        class V {
            draw(t, e, i) {
                t.rect(-i, -i, 2 * i, 2 * i)
            }
        }
        (e = i = i || {}).bottom = "bottom",
        e.bottomLeft = "bottom-left",
        e.bottomRight = "bottom-right",
        e.left = "left",
        e.none = "none",
        e.right = "right",
        e.top = "top",
        e.topLeft = "top-left",
        e.topRight = "top-right";
        class x {
        }
        x.canvasClass = "tsparticles-canvas-el",
        x.randomColorValue = "random",
        x.midColorValue = "mid",
        x.touchEndEvent = "touchend",
        x.mouseUpEvent = "mouseup",
        x.mouseMoveEvent = "mousemove",
        x.touchStartEvent = "touchstart",
        x.touchMoveEvent = "touchmove",
        x.mouseLeaveEvent = "mouseleave",
        x.touchCancelEvent = "touchcancel",
        x.resizeEvent = "resize",
        x.visibilityChangeEvent = "visibilitychange",
        x.noPolygonDataLoaded = "No polygon data loaded.",
        x.noPolygonFound = "No polygon found, you need to specify SVG url in config.";
        class k {
            static colorToRgb(e) {
                var i, n;
                if (void 0 !== e) {
                    var o = "string" == typeof e ? {
                        value: e
                    } : e;
                    let t;
                    if ("string" == typeof o.value)
                        t = o.value === x.randomColorValue ? this.getRandomRgbColor() : k.stringToRgb(o.value);
                    else if (o.value instanceof Array) {
                        const e = z.itemFromArray(o.value);
                        t = k.colorToRgb({
                            value: e
                        })
                    } else {
                        const e = o.value
                          , s = null != (i = e.rgb) ? i : o.value;
                        if (void 0 !== s.r)
                            t = s;
                        else {
                            const i = null != (n = e.hsl) ? n : o.value;
                            void 0 !== i.h && (t = k.hslToRgb(i))
                        }
                    }
                    return t
                }
            }
            static colorToHsl(t) {
                t = this.colorToRgb(t);
                return void 0 !== t ? this.rgbToHsl(t) : t
            }
            static rgbToHsl(t) {
                const e = t.r / 255
                  , i = t.g / 255
                  , n = t.b / 255
                  , o = Math.max(e, i, n)
                  , s = Math.min(e, i, n)
                  , r = {
                    h: 0,
                    l: (o + s) / 2,
                    s: 0
                };
                return o != s && (r.s = r.l < .5 ? (o - s) / (o + s) : (o - s) / (2 - o - s),
                r.h = e === o ? (i - n) / (o - s) : r.h = i === o ? 2 + (n - e) / (o - s) : 4 + (e - i) / (o - s)),
                r.l *= 100,
                r.s *= 100,
                r.h *= 60,
                r.h < 0 && (r.h += 360),
                r
            }
            static stringToAlpha(t) {
                return null == (t = k.stringToRgba(t)) ? void 0 : t.a
            }
            static stringToRgb(t) {
                return k.stringToRgba(t)
            }
            static hslToRgb(t) {
                const e = {
                    b: 0,
                    g: 0,
                    r: 0
                }
                  , i = {
                    h: t.h / 360,
                    l: t.l / 100,
                    s: t.s / 100
                };
                if (0 === i.s)
                    e.b = i.l,
                    e.g = i.l,
                    e.r = i.l;
                else {
                    const t = i.l < .5 ? i.l * (1 + i.s) : i.l + i.s - i.l * i.s
                      , n = 2 * i.l - t;
                    e.r = k.hue2rgb(n, t, i.h + 1 / 3),
                    e.g = k.hue2rgb(n, t, i.h),
                    e.b = k.hue2rgb(n, t, i.h - 1 / 3)
                }
                return e.r = Math.floor(255 * e.r),
                e.g = Math.floor(255 * e.g),
                e.b = Math.floor(255 * e.b),
                e
            }
            static hslaToRgba(t) {
                var e = k.hslToRgb(t);
                return {
                    a: t.a,
                    b: e.b,
                    g: e.g,
                    r: e.r
                }
            }
            static getRandomRgbColor(t) {
                var t = t || 0
                  , t = t + t * Math.pow(16, 2) + t * Math.pow(16, 4)
                  , e = 16777215 ^ t
                  , e = Math.floor(Math.random() * e | t).toString(16);
                return null != (t = this.stringToRgb("#" + e)) ? t : {
                    b: 0,
                    g: 0,
                    r: 0
                }
            }
            static getStyleFromRgb(t, e) {
                return `rgba(${t.r}, ${t.g}, ${t.b}, ${null != e ? e : 1})`
            }
            static getStyleFromHsl(t, e) {
                return `hsla(${t.h}, ${t.s}%, ${t.l}%, ${null != e ? e : 1})`
            }
            static mix(t, e, i, n) {
                let o = t
                  , s = e;
                return void 0 === o.r && (o = this.hslToRgb(t)),
                void 0 === s.r && (s = this.hslToRgb(e)),
                {
                    b: z.mix(o.b, s.b, i, n),
                    g: z.mix(o.g, s.g, i, n),
                    r: z.mix(o.r, s.r, i, n)
                }
            }
            static hue2rgb(t, e, i) {
                let n = i;
                return n < 0 && (n += 1),
                1 < n && --n,
                n < 1 / 6 ? t + 6 * (e - t) * n : n < .5 ? e : n < 2 / 3 ? t + (e - t) * (2 / 3 - n) * 6 : t
            }
            static stringToRgba(t) {
                if (t.startsWith("rgb"))
                    return (e = /rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([\d.]+)\s*)?\)/i.exec(t)) ? {
                        a: 4 < e.length ? parseFloat(e[5]) : 1,
                        b: parseInt(e[3], 10),
                        g: parseInt(e[2], 10),
                        r: parseInt(e[1], 10)
                    } : void 0;
                if (t.startsWith("hsl"))
                    return (e = /hsla?\(\s*(\d+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([\d.]+)\s*)?\)/i.exec(t)) ? k.hslaToRgba({
                        a: 4 < e.length ? parseFloat(e[5]) : 1,
                        h: parseInt(e[1], 10),
                        l: parseInt(e[3], 10),
                        s: parseInt(e[2], 10)
                    }) : void 0;
                var e = t.replace(/^#?([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i, (t,e,i,n,o)=>e + e + i + i + n + n + (void 0 !== o ? o + o : ""))
                  , t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i.exec(e);
                return t ? {
                    a: void 0 !== t[4] ? parseInt(t[4], 16) / 255 : 1,
                    b: parseInt(t[3], 16),
                    g: parseInt(t[2], 16),
                    r: parseInt(t[1], 16)
                } : void 0
            }
        }
        class z {
            static isSsr() {
                return "undefined" == typeof window || !window
            }
            static get animate() {
                return this.isSsr() ? t=>setTimeout(t) : t=>(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || window.setTimeout)(t)
            }
            static get cancelAnimation() {
                return this.isSsr() ? t=>clearTimeout(t) : t=>(window.cancelAnimationFrame || window.webkitCancelRequestAnimationFrame || window.mozCancelRequestAnimationFrame || window.oCancelRequestAnimationFrame || window.msCancelRequestAnimationFrame || window.clearTimeout)(t)
            }
            static replaceColorSvg(t, e, i) {
                return t.svgData ? t.svgData.replace(/#([0-9A-F]{3,6})/gi, ()=>k.getStyleFromHsl(e, i)) : ""
            }
            static clamp(t, e, i) {
                return Math.min(Math.max(t, e), i)
            }
            static isInArray(t, e) {
                return t === e || e instanceof Array && -1 < e.indexOf(t)
            }
            static mix(t, e, i, n) {
                return Math.floor((t * i + e * n) / (i + n))
            }
            static getParticleBaseVelocity(t) {
                let e;
                switch (t.direction) {
                case i.top:
                    e = {
                        x: 0,
                        y: -1
                    };
                    break;
                case i.topRight:
                    e = {
                        x: .5,
                        y: -.5
                    };
                    break;
                case i.right:
                    e = {
                        x: 1,
                        y: -0
                    };
                    break;
                case i.bottomRight:
                    e = {
                        x: .5,
                        y: .5
                    };
                    break;
                case i.bottom:
                    e = {
                        x: 0,
                        y: 1
                    };
                    break;
                case i.bottomLeft:
                    e = {
                        x: -.5,
                        y: 1
                    };
                    break;
                case i.left:
                    e = {
                        x: -1,
                        y: 0
                    };
                    break;
                case i.topLeft:
                    e = {
                        x: -.5,
                        y: -.5
                    };
                    break;
                default:
                    e = {
                        x: 0,
                        y: 0
                    }
                }
                return e
            }
            static getDistances(t, e) {
                var i = t.x - e.x
                  , t = t.y - e.y;
                return {
                    dx: i,
                    dy: t,
                    distance: Math.sqrt(i * i + t * t)
                }
            }
            static getDistance(t, e) {
                return this.getDistances(t, e).distance
            }
            static loadFont(t) {
                return o(this, void 0, void 0, function*() {
                    try {
                        yield document.fonts.load(`${t.weight} 36px '${t.font}'`)
                    } catch (t) {}
                })
            }
            static arrayRandomIndex(t) {
                return Math.floor(Math.random() * t.length)
            }
            static itemFromArray(t, e) {
                return t[void 0 !== e ? e : this.arrayRandomIndex(t)]
            }
            static randomInRange(t, e) {
                var i = Math.max(t, e)
                  , t = Math.min(t, e);
                return Math.random() * (i - t) + t
            }
            static isPointInside(t, e, i) {
                return this.areBoundsInside(this.calculateBounds(t, null != i ? i : 0), e)
            }
            static areBoundsInside(t, e) {
                return t.left < e.width && 0 < t.right && t.top < e.height && 0 < t.bottom
            }
            static calculateBounds(t, e) {
                return {
                    bottom: t.y + e,
                    left: t.x - e,
                    right: t.x + e,
                    top: t.y - e
                }
            }
            static loadImage(o) {
                return new Promise((t,e)=>{
                    const i = {
                        source: o,
                        type: o.substr(o.length - 3)
                    };
                    if (o) {
                        const n = new Image;
                        n.addEventListener("load", ()=>{
                            i.element = n,
                            t(i)
                        }
                        ),
                        n.addEventListener("error", ()=>{
                            e("Error tsParticles - loading image: " + o)
                        }
                        ),
                        n.src = o
                    } else
                        e("Error tsParticles - No image.src")
                }
                )
            }
            static downloadSvgImage(i) {
                return o(this, void 0, void 0, function*() {
                    if (i) {
                        const t = {
                            source: i,
                            type: i.substr(i.length - 3)
                        };
                        if ("svg" !== t.type)
                            return this.loadImage(i);
                        const e = yield fetch(t.source);
                        if (e.ok)
                            return t.svgData = yield e.text(),
                            t;
                        throw new Error("Error tsParticles - Image not found")
                    }
                    throw new Error("Error tsParticles - No image.src")
                })
            }
            static deepExtend(e, ...i) {
                for (const t of i)
                    if (null != t)
                        if ("object" != typeof t)
                            e = t;
                        else {
                            const i = Array.isArray(t);
                            !i || "object" == typeof e && e && Array.isArray(e) ? i || "object" == typeof e && e && !Array.isArray(e) || (e = {}) : e = [];
                            for (const i in t)
                                if ("__proto__" !== i) {
                                    const n = t[i]
                                      , o = "object" == typeof n;
                                    e[i] = o && Array.isArray(n) ? n.map(t=>this.deepExtend(e[i], t)) : this.deepExtend(e[i], n)
                                }
                        }
                return e
            }
            static isDivModeEnabled(e, t) {
                return t instanceof Array ? 0 < t.filter(t=>t.enable && z.isInArray(e, t.mode)).length : z.isInArray(e, t.mode)
            }
            static divModeExecute(t, e, i) {
                if (e instanceof Array)
                    for (const o of e) {
                        const e = o.mode;
                        o.enable && z.isInArray(t, e) && this.singleDivModeExecute(o, i)
                    }
                else {
                    var n = e.mode;
                    e.enable && z.isInArray(t, n) && this.singleDivModeExecute(e, i)
                }
            }
            static singleDivModeExecute(t, e) {
                var i = t.ids;
                if (i instanceof Array)
                    for (const n of i)
                        e(n, t);
                else
                    e(i, t)
            }
            static divMode(t, e) {
                if (e && t)
                    return t instanceof Array ? t.find(t=>z.isInArray(e, t.ids)) : z.isInArray(e, t.ids) ? t : void 0
            }
        }
        (t = u = u || {}).char = "char",
        t.character = "character",
        t.circle = "circle",
        t.edge = "edge",
        t.image = "image",
        t.images = "images",
        t.line = "line",
        t.polygon = "polygon",
        t.square = "square",
        t.star = "star",
        t.triangle = "triangle";
        class B {
            init(e) {
                var i;
                return o(this, void 0, void 0, function*() {
                    var t = e.options;
                    if (z.isInArray(u.char, t.particles.shape.type) || z.isInArray(u.character, t.particles.shape.type)) {
                        const e = null != (i = t.particles.shape.options[u.character]) ? i : t.particles.shape.options[u.char];
                        if (e instanceof Array)
                            for (const i of e)
                                yield z.loadFont(i);
                        else
                            void 0 !== e && (yield z.loadFont(e))
                    }
                })
            }
            draw(t, e, i) {
                var n = e.shapeData;
                if (void 0 !== n) {
                    var o = n.value;
                    if (void 0 !== o) {
                        const l = e;
                        void 0 === l.text && (l.text = o instanceof Array ? z.itemFromArray(o, e.randomIndexData) : o);
                        var o = l.text
                          , s = n.style
                          , r = n.weight
                          , a = 2 * Math.round(i)
                          , n = n.font
                          , e = e.fill
                          , s = (t.font = s + ` ${r} ${a}px "${n}"`,
                        {
                            x: -i / 2,
                            y: i / 2
                        });
                        e ? t.fillText(o, s.x, s.y) : t.strokeText(o, s.x, s.y)
                    }
                }
            }
        }
        class F {
            constructor() {
                this.images = []
            }
            getImages(e) {
                var t = this.images.filter(t=>t.id === e.id);
                return t.length ? t[0] : (this.images.push({
                    id: e.id,
                    images: []
                }),
                this.getImages(e))
            }
            addImage(t, e) {
                const i = this.getImages(t);
                null != i && i.images.push(e)
            }
            init(e) {
                var i;
                return o(this, void 0, void 0, function*() {
                    var t = e.options.particles.shape;
                    if (z.isInArray(u.image, t.type) || z.isInArray(u.images, t.type)) {
                        t = null != (i = t.options[u.images]) ? i : t.options[u.image];
                        if (t instanceof Array)
                            for (const i of t)
                                yield this.loadImageShape(e, i);
                        else
                            yield this.loadImageShape(e, t)
                    }
                })
            }
            destroy() {
                this.images = []
            }
            loadImageShape(e, i) {
                return o(this, void 0, void 0, function*() {
                    try {
                        var t = i.replaceColor ? yield z.downloadSvgImage(i.src) : yield z.loadImage(i.src);
                        this.addImage(e, t)
                    } catch (t) {
                        console.log(`tsParticles error - ${i.src} not found`)
                    }
                })
            }
            draw(t, e, i, n) {
                var o, s, r;
                !t || (o = null == (o = null == (e = e.image) ? void 0 : e.data) ? void 0 : o.element) && (s = null != (s = null == e ? void 0 : e.ratio) ? s : 1,
                r = {
                    x: -i,
                    y: -i
                },
                null != e && e.data.svgData && null != e && e.replaceColor || (t.globalAlpha = n),
                t.drawImage(o, r.x, r.y, 2 * i, 2 * i / s),
                null != e && e.data.svgData && null != e && e.replaceColor || (t.globalAlpha = 1))
            }
        }
        class C {
            static getPlugin(e) {
                return this.plugins.filter(t=>t.id === e)[0]
            }
            static addPlugin(t) {
                this.getPlugin(t.id) || this.plugins.push(t)
            }
            static getAvailablePlugins(e) {
                const t = new Map
                  , i = this.plugins.filter(t=>t.needsPlugin(e.options));
                for (const n of i)
                    t.set(n.id, n.getPlugin(e));
                return t
            }
            static loadOptions(t, e) {
                for (const i of this.plugins)
                    i.loadOptions(t, e)
            }
            static getPreset(t) {
                return this.presets.get(t)
            }
            static addPreset(t, e) {
                this.getPreset(t) || this.presets.set(t, e)
            }
            static addShapeDrawer(t, e) {
                this.getShapeDrawer(t) || this.drawers.set(t, e)
            }
            static getShapeDrawer(t) {
                return this.drawers.get(t)
            }
            static getSupportedShapes() {
                return this.drawers.keys()
            }
        }
        C.plugins = [],
        C.presets = new Map,
        C.drawers = new Map;
        class W {
            draw(t, e, i) {
                t.moveTo(0, -i / 2),
                t.lineTo(0, i / 2)
            }
        }
        class $ {
            draw(t, e, i) {
                t.arc(0, 0, i, 0, 2 * Math.PI, !1)
            }
        }
        class U {
            draw(e, t, i) {
                var n = this.getCenter(t, i)
                  , o = this.getSidesData(t, i)
                  , s = o.count.numerator * o.count.denominator
                  , t = o.count.numerator / o.count.denominator
                  , r = Math.PI - Math.PI * (180 * (t - 2) / t) / 180;
                if (e) {
                    e.beginPath(),
                    e.translate(n.x, n.y),
                    e.moveTo(0, 0);
                    for (let t = 0; t < s; t++)
                        e.lineTo(o.length, 0),
                        e.translate(o.length, 0),
                        e.rotate(r)
                }
            }
        }
        class G extends U {
            getSidesData(t, e) {
                return {
                    count: {
                        denominator: 2,
                        numerator: 3
                    },
                    length: 2 * e
                }
            }
            getCenter(t, e) {
                return {
                    x: -e,
                    y: e / 1.66
                }
            }
        }
        class X {
            draw(e, t, i) {
                var n, t = t.shapeData, o = null != (n = null != (n = null == t ? void 0 : t.sides) ? n : null == t ? void 0 : t.nb_sides) ? n : 5, s = null != (n = null == t ? void 0 : t.inset) ? n : 2;
                e.moveTo(0, 0 - i);
                for (let t = 0; t < o; t++)
                    e.rotate(Math.PI / o),
                    e.lineTo(0, 0 - i * s),
                    e.rotate(Math.PI / o),
                    e.lineTo(0, 0 - i)
            }
        }
        class Y extends U {
            getSidesData(t, e) {
                var i, t = t.shapeData, t = null != (i = null != (i = null == t ? void 0 : t.sides) ? i : null == t ? void 0 : t.nb_sides) ? i : 5;
                return {
                    count: {
                        denominator: 1,
                        numerator: t
                    },
                    length: 2.66 * e / (t / 3)
                }
            }
            getCenter(t, e) {
                var i, t = t.shapeData;
                return {
                    x: -e / ((null != (i = null != (i = null == t ? void 0 : t.sides) ? i : null == t ? void 0 : t.nb_sides) ? i : 5) / 3.5),
                    y: -e / .76
                }
            }
        }
        class A {
            static paintBase(t, e, i) {
                t.save(),
                t.fillStyle = null != i ? i : "rgba(0,0,0,0)",
                t.fillRect(0, 0, e.width, e.height),
                t.restore()
            }
            static clear(t, e) {
                t.clearRect(0, 0, e.width, e.height)
            }
            static drawLinkLine(i, t, n, o, s, r, e, a, l, c, u) {
                let d = !1;
                if (z.getDistance(n, o) <= s)
                    this.drawLine(i, n, o),
                    d = !0;
                else if (e) {
                    let t, e;
                    const a = {
                        x: o.x - r.width,
                        y: o.y
                    }
                      , {dx: l, dy: c, distance: u} = z.getDistances(n, a);
                    if (u <= s) {
                        const i = n.y - c / l * n.x;
                        t = {
                            x: 0,
                            y: i
                        },
                        e = {
                            x: r.width,
                            y: i
                        }
                    } else {
                        const i = {
                            x: o.x,
                            y: o.y - r.height
                        }
                          , {dx: a, dy: l, distance: c} = z.getDistances(n, i);
                        if (c <= s) {
                            const i = -(n.y - l / a * n.x) / (l / a);
                            t = {
                                x: i,
                                y: 0
                            },
                            e = {
                                x: i,
                                y: r.height
                            }
                        } else {
                            const i = {
                                x: o.x - r.width,
                                y: o.y - r.height
                            }
                              , {dx: a, dy: l, distance: c} = z.getDistances(n, i);
                            if (c <= s) {
                                const i = n.y - l / a * n.x;
                                t = {
                                    x: -i / (l / a),
                                    y: i
                                },
                                e = {
                                    x: t.x + r.width,
                                    y: t.y + r.height
                                }
                            }
                        }
                    }
                    t && e && (this.drawLine(i, n, t),
                    this.drawLine(i, o, e),
                    d = !0)
                }
                if (d) {
                    if (i.lineWidth = t,
                    a && (i.globalCompositeOperation = "destination-out"),
                    i.strokeStyle = k.getStyleFromRgb(l, c),
                    u.enable) {
                        const t = k.colorToRgb(u.color);
                        t && (i.shadowBlur = u.blur,
                        i.shadowColor = k.getStyleFromRgb(t))
                    }
                    i.stroke()
                }
            }
            static drawLinkTriangle(t, e, i, n, o, s, r, a) {
                this.drawTriangle(t, i, n, o),
                t.lineWidth = e,
                s && (t.globalCompositeOperation = "destination-out"),
                t.fillStyle = k.getStyleFromRgb(r, a),
                t.fill()
            }
            static drawConnectLine(t, e, i, n, o) {
                t.save(),
                this.drawLine(t, n, o),
                t.lineWidth = e,
                t.strokeStyle = i,
                t.stroke(),
                t.restore()
            }
            static gradient(t, e, i, n) {
                var o = Math.floor(i.size.value / e.size.value)
                  , s = e.getColor()
                  , r = i.getColor();
                if (s && r) {
                    const a = e.getPosition()
                      , l = i.getPosition()
                      , c = k.mix(s, r, e.size.value, i.size.value)
                      , u = t.createLinearGradient(a.x, a.y, l.x, l.y);
                    return u.addColorStop(0, k.getStyleFromHsl(s, n)),
                    u.addColorStop(1 < o ? 1 : o, k.getStyleFromRgb(c, n)),
                    u.addColorStop(1, k.getStyleFromHsl(r, n)),
                    u
                }
            }
            static drawGrabLine(t, e, i, n, o, s) {
                t.save(),
                this.drawLine(t, i, n),
                t.strokeStyle = k.getStyleFromRgb(o, s),
                t.lineWidth = e,
                t.stroke(),
                t.restore()
            }
            static drawParticle(t, e, i, n, o, s, r, a, l) {
                var c = i.getPosition()
                  , u = (e.save(),
                e.translate(c.x, c.y),
                e.beginPath(),
                0 !== i.angle && e.rotate(i.angle * Math.PI / 180),
                s && (e.globalCompositeOperation = "destination-out"),
                i.shadowColor)
                  , u = (l.enable && u && (e.shadowBlur = l.blur,
                e.shadowColor = k.getStyleFromRgb(u),
                e.shadowOffsetX = l.offset.x,
                e.shadowOffsetY = l.offset.y),
                e.fillStyle = o,
                i.stroke);
                e.lineWidth = u.width,
                i.strokeColor && (e.strokeStyle = k.getStyleFromRgb(i.strokeColor, i.stroke.opacity)),
                i.close && e.closePath(),
                this.drawShape(t, e, i, r, a, n),
                0 < u.width && i.strokeColor && e.stroke(),
                i.fill && e.fill(),
                e.restore(),
                e.save(),
                e.translate(c.x, c.y),
                0 !== i.angle && e.rotate(i.angle * Math.PI / 180),
                s && (e.globalCompositeOperation = "destination-out"),
                this.drawShapeAfterEffect(t, e, i, r, a, n),
                e.restore()
            }
            static drawShape(t, e, i, n, o, s) {
                if (i.shape) {
                    const r = t.drawers.get(i.shape);
                    r && r.draw(e, i, n, o, s)
                }
            }
            static drawShapeAfterEffect(t, e, i, n, o, s) {
                if (i.shape) {
                    const r = t.drawers.get(i.shape);
                    null != r && r.afterEffect && r.afterEffect(e, i, n, o, s)
                }
            }
            static drawPlugin(t, e, i) {
                void 0 !== e.draw && (t.save(),
                e.draw(t, i),
                t.restore())
            }
            static drawLine(t, e, i) {
                t.beginPath(),
                t.moveTo(e.x, e.y),
                t.lineTo(i.x, i.y),
                t.closePath()
            }
            static drawTriangle(t, e, i, n) {
                t.beginPath(),
                t.moveTo(e.x, e.y),
                t.lineTo(i.x, i.y),
                t.lineTo(n.x, n.y),
                t.closePath()
            }
        }
        class J {
            constructor(t) {
                this.container = t,
                this.size = {
                    height: 0,
                    width: 0
                },
                this.context = null,
                this.generatedCanvas = !1
            }
            init() {
                this.resize();
                var t = this.container.options
                  , e = t.backgroundMask.cover.color
                  , t = t.particles.move.trail;
                this.coverColor = k.colorToRgb(e),
                this.trailFillColor = k.colorToRgb(t.fillColor),
                this.paint()
            }
            loadCanvas(t, e) {
                var i;
                t.className || (t.className = x.canvasClass),
                this.generatedCanvas && null != (i = this.element) && i.remove(),
                this.generatedCanvas = null != e && e,
                this.element = t,
                this.size.height = t.offsetHeight,
                this.size.width = t.offsetWidth,
                this.context = this.element.getContext("2d"),
                this.container.retina.init(),
                this.initBackground()
            }
            destroy() {
                var t;
                this.generatedCanvas && null != (t = this.element) && t.remove(),
                this.context && A.clear(this.context, this.size)
            }
            resize() {
                this.element && (this.element.width = this.size.width,
                this.element.height = this.size.height)
            }
            paint() {
                var t = this.container.options;
                this.context && (t.backgroundMask.enable && t.backgroundMask.cover && this.coverColor ? this.paintBase(k.getStyleFromRgb(this.coverColor)) : this.paintBase())
            }
            clear() {
                var t = this.container.options
                  , e = t.particles.move.trail;
                t.backgroundMask.enable ? this.paint() : e.enable && 0 < e.length && this.trailFillColor ? this.paintBase(k.getStyleFromRgb(this.trailFillColor, 1 / e.length)) : this.context && A.clear(this.context, this.size)
            }
            drawLinkTriangle(e, i, n) {
                var o;
                const s = this.container
                  , r = s.options
                  , a = i.destination
                  , t = n.destination
                  , l = e.particlesOptions.links.triangles
                  , c = null != (o = l.opacity) ? o : (i.opacity + n.opacity) / 2
                  , u = e.getPosition()
                  , d = a.getPosition()
                  , h = t.getPosition()
                  , p = this.context;
                if (p) {
                    let t = k.colorToRgb(l.color);
                    if (!t) {
                        const i = e.particlesOptions.links
                          , n = void 0 !== i.id ? s.particles.linksColors[i.id] : s.particles.linksColor;
                        if (n === x.randomColorValue)
                            t = k.getRandomRgbColor();
                        else if ("mid" === n) {
                            const i = e.getColor()
                              , n = a.getColor();
                            if (i && n)
                                t = k.mix(i, n, e.size.value, a.size.value);
                            else {
                                const e = null != i ? i : n;
                                if (!e)
                                    return;
                                t = k.hslToRgb(e)
                            }
                        } else
                            t = n
                    }
                    i = null != (o = e.linksWidth) ? o : s.retina.linksWidth;
                    A.drawLinkTriangle(p, i, u, d, h, r.backgroundMask.enable, t, c)
                }
            }
            drawLinkLine(e, i) {
                var n;
                const o = this.container
                  , s = o.options
                  , r = i.destination;
                let a = i.opacity;
                var i = e.getPosition()
                  , l = r.getPosition()
                  , c = this.context;
                if (c) {
                    let t;
                    var u = e.particlesOptions.twinkle.lines;
                    if (u.enable) {
                        const e = u.frequency
                          , i = k.colorToRgb(u.color);
                        Math.random() < e && void 0 !== i && (t = i,
                        a = u.opacity)
                    }
                    if (!t) {
                        const i = e.particlesOptions.links
                          , n = void 0 !== i.id ? o.particles.linksColors[i.id] : o.particles.linksColor;
                        if (n === x.randomColorValue)
                            t = k.getRandomRgbColor();
                        else if ("mid" === n) {
                            const i = e.getColor()
                              , n = r.getColor();
                            if (i && n)
                                t = k.mix(i, n, e.size.value, r.size.value);
                            else {
                                const e = null != i ? i : n;
                                if (!e)
                                    return;
                                t = k.hslToRgb(e)
                            }
                        } else
                            t = n
                    }
                    u = null != (n = e.linksWidth) ? n : o.retina.linksWidth;
                    A.drawLinkLine(c, u, i, l, e.particlesOptions.links.distance, o.canvas.size, e.particlesOptions.links.warp, s.backgroundMask.enable, t, a, e.particlesOptions.links.shadow)
                }
            }
            drawConnectLine(t, e) {
                var i, n, o = this.lineStyle(t, e);
                !o || (i = this.context) && (n = t.getPosition(),
                e = e.getPosition(),
                A.drawConnectLine(i, null != (i = t.linksWidth) ? i : this.container.retina.linksWidth, o, n, e))
            }
            drawGrabLine(t, e, i, n) {
                var o, s = this.container, r = s.canvas.context;
                r && (o = t.getPosition(),
                A.drawGrabLine(r, null != (r = t.linksWidth) ? r : s.retina.linksWidth, o, n, e, i))
            }
            drawParticle(t, e) {
                var i = t.getColor();
                if (void 0 !== i) {
                    var n = this.container.options
                      , o = t.particlesOptions.twinkle.particles
                      , s = o.frequency
                      , r = k.colorToRgb(o.color)
                      , s = o.enable && Math.random() < s
                      , a = null != (a = t.bubble.radius) ? a : t.size.value
                      , o = s ? o.opacity : null != (l = t.bubble.opacity) ? l : t.opacity.value
                      , l = t.infectionStage
                      , c = n.infection.stages
                      , c = void 0 !== l ? c[l].color : void 0
                      , l = k.colorToRgb(c)
                      , c = s && void 0 !== r ? r : null != l ? l : k.hslToRgb(i)
                      , s = void 0 !== c ? k.getStyleFromRgb(c, o) : void 0;
                    if (this.context && s) {
                        if (0 < t.links.length) {
                            this.context.save();
                            for (const e of t.links) {
                                if (t.particlesOptions.links.triangles.enable) {
                                    const a = t.links.map(t=>t.destination)
                                      , l = e.destination.links.filter(t=>0 <= a.indexOf(t.destination));
                                    if (l.length)
                                        for (const a of l)
                                            this.drawLinkTriangle(t, e, a)
                                }
                                this.drawLinkLine(t, e)
                            }
                            this.context.restore()
                        }
                        A.drawParticle(this.container, this.context, t, e, s, n.backgroundMask.enable, a, o, t.particlesOptions.shadow)
                    }
                }
            }
            drawPlugin(t, e) {
                this.context && A.drawPlugin(this.context, t, e)
            }
            paintBase(t) {
                this.context && A.paintBase(this.context, this.size, t)
            }
            lineStyle(t, e) {
                var i = this.container.options.interactivity.modes.connect;
                if (this.context)
                    return A.gradient(this.context, t, e, i.links.opacity)
            }
            initBackground() {
                const t = this.container.options.background
                  , e = this.element;
                if (e) {
                    const i = e.style;
                    if (t.color) {
                        const e = k.colorToRgb(t.color);
                        e && (i.backgroundColor = k.getStyleFromRgb(e, t.opacity))
                    }
                    t.image && (i.backgroundImage = t.image),
                    t.position && (i.backgroundPosition = t.position),
                    t.repeat && (i.backgroundRepeat = t.repeat),
                    t.size && (i.backgroundSize = t.size)
                }
            }
        }
        (e = r = r || {}).bubble = "bubble",
        e.connect = "connect",
        e.grab = "grab",
        e.repulse = "repulse",
        e.slow = "slow";
        class Q {
            constructor(t, e) {
                this.container = t,
                this.particle = e
            }
            move(t) {
                this.moveParticle(t),
                this.moveParallax()
            }
            moveParticle(t) {
                var e, i, n, o;
                const s = this.particle
                  , r = s.particlesOptions;
                r.move.enable && (n = (e = this.container).options,
                i = this.getProximitySpeedFactor(),
                n = 0 < n.fpsLimit ? 60 * t / 1e3 : 3.6,
                o = (null != (o = s.moveSpeed) ? o : e.retina.moveSpeed) / 2 * i * n,
                this.applyNoise(t),
                s.position.x += s.velocity.horizontal * o,
                s.position.y += s.velocity.vertical * o,
                r.move.vibrate && (s.position.x += Math.sin(s.position.x * Math.cos(s.position.y)),
                s.position.y += Math.cos(s.position.y * Math.sin(s.position.x))))
            }
            applyNoise(t) {
                const e = this.particle;
                if (e.particlesOptions.move.noise.enable) {
                    const i = this.container;
                    e.lastNoiseTime <= e.noiseDelay ? e.lastNoiseTime += t : (t = i.noise.generate(e),
                    e.velocity.horizontal += Math.cos(t.angle) * t.length,
                    e.velocity.horizontal = z.clamp(e.velocity.horizontal, -1, 1),
                    e.velocity.vertical += Math.sin(t.angle) * t.length,
                    e.velocity.vertical = z.clamp(e.velocity.vertical, -1, 1),
                    e.lastNoiseTime -= e.noiseDelay)
                }
            }
            moveParallax() {
                var t, e = this.container, i = e.options;
                if (i.interactivity.events.onHover.parallax.enable) {
                    const n = this.particle
                      , o = i.interactivity.events.onHover.parallax.force
                      , s = e.interactivity.mouse.position;
                    s && (e = window.innerHeight / 2,
                    t = window.innerWidth / 2,
                    i = i.interactivity.events.onHover.parallax.smooth,
                    t = (s.x - t) * (n.size.value / o),
                    e = (s.y - e) * (n.size.value / o),
                    n.offset.x += (t - n.offset.x) / i,
                    n.offset.y += (e - n.offset.y) / i)
                }
            }
            getProximitySpeedFactor() {
                var t = this.container
                  , e = t.options;
                if (!z.isInArray(r.slow, e.interactivity.events.onHover.mode))
                    return 1;
                var i = this.container.interactivity.mouse.position;
                if (!i)
                    return 1;
                var n = this.particle.getPosition()
                  , i = z.getDistance(i, n)
                  , n = t.retina.slowModeRadius;
                return n < i ? 1 : (i / n || 0) / e.interactivity.modes.slow.factor
            }
        }
        (t = d = d || {})[t.increasing = 0] = "increasing",
        t[t.decreasing = 1] = "decreasing",
        (e = h = h || {})[e.increasing = 0] = "increasing",
        e[e.decreasing = 1] = "decreasing",
        (t = l = l || {}).none = "none",
        t.max = "max",
        t.min = "min",
        (e = p = p || {}).clockwise = "clockwise",
        e.counterClockwise = "counter-clockwise",
        e.random = "random",
        (t = m = m || {}).bounce = "bounce",
        t.bounceHorizontal = "bounce-horizontal",
        t.bounceVertical = "bounce-vertical",
        t.out = "out",
        t.destroy = "destroy";
        class K {
            constructor(t, e) {
                this.container = t,
                this.particle = e,
                this.mover = new Q(t,e)
            }
            static checkBounds(t, e, i, n, o) {
                (i < t + e && 0 < n || t - e < 0 && n < 0) && o()
            }
            update(t) {
                this.mover.move(t),
                this.updateOpacity(t),
                this.updateSize(t),
                this.updateAngle(t),
                this.updateColor(t),
                this.fixOutOfCanvasPosition(),
                this.updateOutMode(t)
            }
            updateOpacity(t) {
                const e = this.container.options
                  , i = this.particle
                  , n = 0 < e.fpsLimit ? 60 * t / 1e3 : 3.6;
                if (i.particlesOptions.opacity.animation.enable) {
                    switch (i.opacity.status) {
                    case d.increasing:
                        i.opacity.value >= i.particlesOptions.opacity.value ? i.opacity.status = d.decreasing : i.opacity.value += (i.opacity.velocity || 0) * n;
                        break;
                    case d.decreasing:
                        i.opacity.value <= i.particlesOptions.opacity.animation.minimumValue ? i.opacity.status = d.increasing : i.opacity.value -= (i.opacity.velocity || 0) * n
                    }
                    i.opacity.value < 0 && (i.opacity.value = 0)
                }
            }
            updateSize(t) {
                var e;
                const i = this.container
                  , n = i.options
                  , o = this.particle
                  , s = 0 < n.fpsLimit ? 60 * t / 1e3 : 3.6
                  , r = o.particlesOptions.size
                  , a = r.animation;
                if (a.enable) {
                    switch (o.size.status) {
                    case h.increasing:
                        o.size.value >= (null != (e = o.sizeValue) ? e : i.retina.sizeValue) ? o.size.status = h.decreasing : o.size.value += (o.size.velocity || 0) * s;
                        break;
                    case h.decreasing:
                        o.size.value <= a.minimumValue ? o.size.status = h.increasing : o.size.value -= (o.size.velocity || 0) * s
                    }
                    switch (a.destroy) {
                    case l.max:
                        o.size.value >= r.value * i.retina.pixelRatio && o.destroy();
                        break;
                    case l.min:
                        o.size.value <= a.minimumValue * i.retina.pixelRatio && o.destroy()
                    }
                    o.size.value < 0 && !o.destroyed && (o.size.value = 0)
                }
            }
            updateAngle(t) {
                const e = this.container.options
                  , i = this.particle
                  , n = 0 < e.fpsLimit ? 60 * t / 1e3 : 3.6;
                i.particlesOptions.rotate.animation.enable && (i.rotateDirection === p.clockwise ? (i.angle += i.particlesOptions.rotate.animation.speed * Math.PI / 18 * n,
                360 < i.angle && (i.angle -= 360)) : (p.counterClockwise,
                i.angle -= i.particlesOptions.rotate.animation.speed * Math.PI / 18 * n,
                i.angle < 0 && (i.angle += 360)))
            }
            updateColor(t) {
                const e = this.container.options
                  , i = this.particle;
                void 0 !== i.color && (t = 0 < e.fpsLimit ? 60 * t / 1e3 : 3.6,
                i.particlesOptions.color.animation.enable && (i.color.h += (i.colorVelocity || 0) * t,
                360 < i.color.h && (i.color.h -= 360)))
            }
            fixOutOfCanvasPosition() {
                const t = this.container
                  , e = this.particle
                  , i = e.particlesOptions.move.outMode
                  , n = e.particlesOptions.move.warp
                  , o = t.canvas.size;
                var s = i === m.bounce ? {
                    bottom: o.height,
                    left: e.size.value,
                    right: o.width,
                    top: e.size.value
                } : i === m.bounceHorizontal ? {
                    bottom: o.height + e.size.value - e.offset.y,
                    left: e.size.value,
                    right: o.width,
                    top: -e.size.value - e.offset.y
                } : i === m.bounceVertical ? {
                    bottom: o.height,
                    left: -e.size.value - e.offset.x,
                    right: o.width + e.size.value + e.offset.x,
                    top: e.size.value
                } : {
                    bottom: o.height + e.size.value - e.offset.y,
                    left: -e.size.value - e.offset.x,
                    right: o.width + e.size.value + e.offset.x,
                    top: -e.size.value - e.offset.y
                };
                if (i === m.destroy) {
                    const i = e.size.value;
                    z.isPointInside(e.position, t.canvas.size, i) || t.particles.remove(e)
                } else {
                    const t = e.size.value
                      , i = z.calculateBounds(e.position, t);
                    i.left > o.width - e.offset.x ? (e.position.x = s.left,
                    n || (e.position.y = Math.random() * o.height)) : i.right < -e.offset.x && (e.position.x = s.right,
                    n || (e.position.y = Math.random() * o.height)),
                    i.top > o.height - e.offset.y ? (n || (e.position.x = Math.random() * o.width),
                    e.position.y = s.top) : i.bottom < -e.offset.y && (n || (e.position.x = Math.random() * o.width),
                    e.position.y = s.bottom)
                }
            }
            updateOutMode(t) {
                switch (this.particle.particlesOptions.move.outMode) {
                case m.bounce:
                case m.bounceVertical:
                case m.bounceHorizontal:
                    this.updateBounce(t)
                }
            }
            updateBounce(t) {
                const e = this.container
                  , i = this.particle;
                let n = !1;
                for (var [,o] of e.plugins)
                    if (void 0 !== o.particleBounce && (n = o.particleBounce(i, t)),
                    n)
                        break;
                if (!n) {
                    const t = i.particlesOptions.move.outMode
                      , n = i.getPosition();
                    if (t === m.bounce || t === m.bounceHorizontal) {
                        const t = i.size.value
                          , s = i.velocity.horizontal;
                        K.checkBounds(n.x, t, e.canvas.size.width, s, ()=>{
                            i.velocity.horizontal *= -1
                        }
                        )
                    }
                    if (t === m.bounce || t === m.bounceVertical) {
                        const t = i.size.value
                          , r = i.velocity.vertical;
                        K.checkBounds(n.y, t, e.canvas.size.height, r, ()=>{
                            i.velocity.vertical *= -1
                        }
                        )
                    }
                }
            }
        }
        class S {
            constructor() {
                this.value = "#fff"
            }
            static create(t, e) {
                const i = null != t ? t : new S;
                return void 0 !== e && i.load("string" == typeof e ? {
                    value: e
                } : e),
                i
            }
            load(t) {
                void 0 !== (null == t ? void 0 : t.value) && (this.value = t.value)
            }
        }
        class Z {
            constructor() {
                this.blur = 5,
                this.color = new S,
                this.enable = !1,
                this.color.value = "lime"
            }
            load(t) {
                void 0 !== t && (void 0 !== t.blur && (this.blur = t.blur),
                this.color = S.create(this.color, t.color),
                void 0 !== t.enable && (this.enable = t.enable))
            }
        }
        class tt {
            constructor() {
                this.enable = !1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.color && (this.color = S.create(this.color, t.color)),
                void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.opacity && (this.opacity = t.opacity))
            }
        }
        class et {
            constructor() {
                this.blink = !1,
                this.color = new S,
                this.consent = !1,
                this.distance = 100,
                this.enable = !1,
                this.opacity = 1,
                this.shadow = new Z,
                this.triangles = new tt,
                this.width = 1,
                this.warp = !1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.id && (this.id = t.id),
                void 0 !== t.blink && (this.blink = t.blink),
                this.color = S.create(this.color, t.color),
                void 0 !== t.consent && (this.consent = t.consent),
                void 0 !== t.distance && (this.distance = t.distance),
                void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.opacity && (this.opacity = t.opacity),
                this.shadow.load(t.shadow),
                this.triangles.load(t.triangles),
                void 0 !== t.width && (this.width = t.width),
                void 0 !== t.warp && (this.warp = t.warp))
            }
        }
        class it {
            constructor() {
                this.enable = !1,
                this.rotate = {
                    x: 3e3,
                    y: 3e3
                }
            }
            get rotateX() {
                return this.rotate.x
            }
            set rotateX(t) {
                this.rotate.x = t
            }
            get rotateY() {
                return this.rotate.y
            }
            set rotateY(t) {
                this.rotate.y = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== (e = null != (e = null == (e = t.rotate) ? void 0 : e.x) ? e : t.rotateX) && (this.rotate.x = e),
                void 0 !== (e = null != (e = null == (e = t.rotate) ? void 0 : e.y) ? e : t.rotateY) && (this.rotate.y = e))
            }
        }
        class nt {
            constructor() {
                this.enable = !1,
                this.length = 10,
                this.fillColor = new S,
                this.fillColor.value = "#000000"
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                this.fillColor = S.create(this.fillColor, t.fillColor),
                void 0 !== t.length && (this.length = t.length))
            }
        }
        class ot {
            constructor() {
                this.enable = !1,
                this.minimumValue = 0
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.minimumValue && (this.minimumValue = t.minimumValue))
            }
        }
        class st {
            constructor() {
                this.random = new ot,
                this.value = 0
            }
            load(t) {
                var e;
                void 0 !== t && (null != (e = this.random) && e.load(t.random),
                void 0 !== t.value && (this.value = t.value))
            }
        }
        class rt {
            constructor() {
                this.delay = new st,
                this.enable = !1
            }
            load(t) {
                void 0 !== t && (this.delay.load(t.delay),
                void 0 !== t.enable && (this.enable = t.enable))
            }
        }
        class at {
            constructor() {
                this.angle = 90,
                this.attract = new it,
                this.direction = i.none,
                this.enable = !1,
                this.noise = new rt,
                this.outMode = m.out,
                this.random = !1,
                this.speed = 2,
                this.straight = !1,
                this.trail = new nt,
                this.vibrate = !1,
                this.warp = !1
            }
            get collisions() {
                return !1
            }
            set collisions(t) {}
            get bounce() {
                return this.collisions
            }
            set bounce(t) {
                this.collisions = t
            }
            get out_mode() {
                return this.outMode
            }
            set out_mode(t) {
                this.outMode = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== t.angle && (this.angle = t.angle),
                this.attract.load(t.attract),
                void 0 !== t.direction && (this.direction = t.direction),
                void 0 !== t.enable && (this.enable = t.enable),
                this.noise.load(t.noise),
                void 0 !== (e = null != (e = t.outMode) ? e : t.out_mode) && (this.outMode = e),
                void 0 !== t.random && (this.random = t.random),
                void 0 !== t.speed && (this.speed = t.speed),
                void 0 !== t.straight && (this.straight = t.straight),
                this.trail.load(t.trail),
                void 0 !== t.vibrate && (this.vibrate = t.vibrate),
                void 0 !== t.warp && (this.warp = t.warp))
            }
        }
        class lt {
            constructor() {
                this.enable = !1,
                this.area = 800,
                this.factor = 1e3
            }
            get value_area() {
                return this.area
            }
            set value_area(t) {
                this.area = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== (e = null != (e = t.area) ? e : t.value_area) && (this.area = e),
                void 0 !== t.factor && (this.factor = t.factor))
            }
        }
        class ct {
            constructor() {
                this.density = new lt,
                this.limit = 0,
                this.value = 100
            }
            get max() {
                return this.limit
            }
            set max(t) {
                this.limit = t
            }
            load(t) {
                var e;
                void 0 !== t && (this.density.load(t.density),
                void 0 !== (e = null != (e = t.limit) ? e : t.max) && (this.limit = e),
                void 0 !== t.value && (this.value = t.value))
            }
        }
        class ut {
            constructor() {
                this.enable = !1,
                this.minimumValue = 0,
                this.speed = 2,
                this.sync = !1
            }
            get opacity_min() {
                return this.minimumValue
            }
            set opacity_min(t) {
                this.minimumValue = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== (e = null != (e = t.minimumValue) ? e : t.opacity_min) && (this.minimumValue = e),
                void 0 !== t.speed && (this.speed = t.speed),
                void 0 !== t.sync && (this.sync = t.sync))
            }
        }
        class dt {
            constructor() {
                this.enable = !1,
                this.minimumValue = 1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.minimumValue && (this.minimumValue = t.minimumValue))
            }
        }
        class ht {
            constructor() {
                this.animation = new ut,
                this.random = new dt,
                this.value = 1
            }
            get anim() {
                return this.animation
            }
            set anim(t) {
                this.animation = t
            }
            load(t) {
                var e;
                void 0 !== t && (this.animation.load(null != (e = t.animation) ? e : t.anim),
                void 0 !== t.random && ("boolean" == typeof t.random ? this.random.enable = t.random : this.random.load(t.random)),
                void 0 !== t.value && (this.value = t.value))
            }
        }
        class pt {
            constructor() {
                this.options = {},
                this.type = u.circle
            }
            get image() {
                var t;
                return null != (t = this.options[u.image]) ? t : this.options[u.images]
            }
            set image(t) {
                this.options[u.image] = t,
                this.options[u.images] = t
            }
            get custom() {
                return this.options
            }
            set custom(t) {
                this.options = t
            }
            get images() {
                return this.image instanceof Array ? this.image : [this.image]
            }
            set images(t) {
                this.image = t
            }
            get stroke() {
                return []
            }
            set stroke(t) {}
            get character() {
                var t;
                return null != (t = this.options[u.character]) ? t : this.options[u.char]
            }
            set character(t) {
                this.options[u.character] = t,
                this.options[u.char] = t
            }
            get polygon() {
                var t;
                return null != (t = this.options[u.polygon]) ? t : this.options[u.star]
            }
            set polygon(t) {
                this.options[u.polygon] = t,
                this.options[u.star] = t
            }
            load(t) {
                var e, i;
                if (void 0 !== t) {
                    var n = null != (i = t.options) ? i : t.custom;
                    if (void 0 !== n)
                        for (const t in n) {
                            const i = n[t];
                            void 0 !== i && (this.options[t] = z.deepExtend(null != (e = this.options[t]) ? e : {}, i))
                        }
                    this.loadShape(t.character, u.character, u.char, !0),
                    this.loadShape(t.polygon, u.polygon, u.star, !1),
                    this.loadShape(null != (i = t.image) ? i : t.images, u.image, u.images, !0),
                    void 0 !== t.type && (this.type = t.type)
                }
            }
            loadShape(t, e, i, n) {
                var o;
                void 0 !== t && (t instanceof Array ? (this.options[e]instanceof Array || (this.options[e] = [],
                this.options[i] && !n || (this.options[i] = [])),
                this.options[e] = z.deepExtend(null != (o = this.options[e]) ? o : [], t),
                this.options[i] && !n || (this.options[i] = z.deepExtend(null != (o = this.options[i]) ? o : [], t))) : (this.options[e]instanceof Array && (this.options[e] = {},
                this.options[i] && !n || (this.options[i] = {})),
                this.options[e] = z.deepExtend(null != (o = this.options[e]) ? o : {}, t),
                this.options[i] && !n || (this.options[i] = z.deepExtend(null != (e = this.options[i]) ? e : {}, t))))
            }
        }
        (e = f = f || {}).max = "max",
        e.min = "min";
        class ft {
            constructor() {
                this.destroy = l.none,
                this.enable = !1,
                this.minimumValue = 0,
                this.speed = 5,
                this.startValue = f.max,
                this.sync = !1
            }
            get size_min() {
                return this.minimumValue
            }
            set size_min(t) {
                this.minimumValue = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== t.destroy && (this.destroy = t.destroy),
                void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== (e = null != (e = t.minimumValue) ? e : t.size_min) && (this.minimumValue = e),
                void 0 !== t.speed && (this.speed = t.speed),
                void 0 !== t.startValue && (this.startValue = t.startValue),
                void 0 !== t.sync && (this.sync = t.sync))
            }
        }
        class vt {
            constructor() {
                this.enable = !1,
                this.minimumValue = 1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.minimumValue && (this.minimumValue = t.minimumValue))
            }
        }
        class mt {
            constructor() {
                this.animation = new ft,
                this.random = new vt,
                this.value = 3
            }
            get anim() {
                return this.animation
            }
            set anim(t) {
                this.animation = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== (e = null != (e = t.animation) ? e : t.anim) && this.animation.load(e),
                void 0 !== t.random && ("boolean" == typeof t.random ? this.random.enable = t.random : this.random.load(t.random)),
                void 0 !== t.value && (this.value = t.value))
            }
        }
        class yt {
            constructor() {
                this.enable = !1,
                this.speed = 0,
                this.sync = !1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.speed && (this.speed = t.speed),
                void 0 !== t.sync && (this.sync = t.sync))
            }
        }
        class gt {
            constructor() {
                this.animation = new yt,
                this.direction = p.clockwise,
                this.random = !1,
                this.value = 0
            }
            load(t) {
                void 0 !== t && (this.animation.load(t.animation),
                void 0 !== t.random && (this.random = t.random),
                void 0 !== t.direction && (this.direction = t.direction),
                void 0 !== t.value && (this.value = t.value))
            }
        }
        class bt {
            constructor() {
                this.blur = 0,
                this.color = new S,
                this.enable = !1,
                this.offset = {
                    x: 0,
                    y: 0
                },
                this.color.value = "#000000"
            }
            load(t) {
                void 0 !== t && (void 0 !== t.blur && (this.blur = t.blur),
                this.color = S.create(this.color, t.color),
                void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.offset && (void 0 !== t.offset.x && (this.offset.x = t.offset.x),
                void 0 !== t.offset.y && (this.offset.y = t.offset.y)))
            }
        }
        class wt {
            constructor() {
                this.color = new S,
                this.width = 0,
                this.opacity = 1,
                this.color.value = "#ff0000"
            }
            load(t) {
                void 0 !== t && (this.color = S.create(this.color, t.color),
                void 0 !== t.width && (this.width = t.width),
                void 0 !== t.opacity && (this.opacity = t.opacity))
            }
        }
        (t = n = n || {}).absorb = "absorb",
        t.bounce = "bounce",
        t.destroy = "destroy";
        class xt {
            constructor() {
                this.enable = !1,
                this.mode = n.bounce
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.mode && (this.mode = t.mode))
            }
        }
        class kt {
            constructor() {
                this.enable = !1,
                this.frequency = .05,
                this.opacity = 1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.color && (this.color = S.create(this.color, t.color)),
                void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.frequency && (this.frequency = t.frequency),
                void 0 !== t.opacity && (this.opacity = t.opacity))
            }
        }
        class zt {
            constructor() {
                this.lines = new kt,
                this.particles = new kt
            }
            load(t) {
                void 0 !== t && (this.lines.load(t.lines),
                this.particles.load(t.particles))
            }
        }
        class Ct {
            constructor() {
                this.enable = !1,
                this.speed = 1,
                this.sync = !0
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.speed && (this.speed = t.speed),
                void 0 !== t.sync && (this.sync = t.sync))
            }
        }
        class At extends S {
            constructor() {
                super(),
                this.animation = new Ct
            }
            static create(t, e) {
                const i = null != t ? t : new At;
                return void 0 !== e && i.load("string" == typeof e ? {
                    value: e
                } : e),
                i
            }
            load(t) {
                super.load(t),
                this.animation.load(null == t ? void 0 : t.animation)
            }
        }
        class St {
            constructor() {
                this.collisions = new xt,
                this.color = new At,
                this.links = new et,
                this.move = new at,
                this.number = new ct,
                this.opacity = new ht,
                this.rotate = new gt,
                this.shadow = new bt,
                this.shape = new pt,
                this.size = new mt,
                this.stroke = new wt,
                this.twinkle = new zt
            }
            get line_linked() {
                return this.links
            }
            set line_linked(t) {
                this.links = t
            }
            get lineLinked() {
                return this.links
            }
            set lineLinked(t) {
                this.links = t
            }
            load(t) {
                if (void 0 !== t) {
                    void 0 !== t.color && (this.color = At.create(this.color, t.color));
                    var e = null != (e = null != (e = t.links) ? e : t.lineLinked) ? e : t.line_linked
                      , e = (void 0 !== e && this.links.load(e),
                    this.move.load(t.move),
                    this.number.load(t.number),
                    this.opacity.load(t.opacity),
                    this.rotate.load(t.rotate),
                    this.shape.load(t.shape),
                    this.size.load(t.size),
                    this.shadow.load(t.shadow),
                    this.twinkle.load(t.twinkle),
                    null != (e = null == (e = t.move) ? void 0 : e.collisions) ? e : null == (e = t.move) ? void 0 : e.bounce);
                    void 0 !== e && (this.collisions.enable = e),
                    this.collisions.load(t.collisions);
                    const i = null != (e = t.stroke) ? e : null == (e = t.shape) ? void 0 : e.stroke;
                    void 0 !== i && (i instanceof Array ? this.stroke = i.map(t=>{
                        const e = new wt;
                        return e.load(t),
                        e
                    }
                    ) : (this.stroke instanceof Array && (this.stroke = new wt),
                    this.stroke.load(i)))
                }
            }
        }
        class Tt {
            constructor(t, e, i) {
                var n, o;
                this.container = t,
                this.fill = !0,
                this.close = !0,
                this.links = [],
                this.lastNoiseTime = 0,
                this.destroyed = !1;
                const s = t.options
                  , r = new St;
                if (r.load(s.particles),
                void 0 !== (null == i ? void 0 : i.shape)) {
                    const t = null != (n = i.shape.type) ? n : r.shape.type
                      , e = (this.shape = t instanceof Array ? z.itemFromArray(t) : t,
                    new pt);
                    if (e.load(i.shape),
                    void 0 !== this.shape) {
                        const t = e.options[this.shape];
                        void 0 !== t && (this.shapeData = z.deepExtend({}, t instanceof Array ? z.itemFromArray(t) : t),
                        this.fill = null != (a = null == (l = this.shapeData) ? void 0 : l.fill) ? a : this.fill,
                        this.close = null != (l = null == (n = this.shapeData) ? void 0 : n.close) ? l : this.close)
                    }
                } else {
                    const t = r.shape.type
                      , e = (this.shape = t instanceof Array ? z.itemFromArray(t) : t,
                    r.shape.options[this.shape]);
                    e && (this.shapeData = z.deepExtend({}, e instanceof Array ? z.itemFromArray(e) : e),
                    this.fill = null != (n = null == (a = this.shapeData) ? void 0 : a.fill) ? n : this.fill,
                    this.close = null != (a = null == (l = this.shapeData) ? void 0 : l.close) ? a : this.close)
                }
                void 0 !== i && r.load(i),
                void 0 !== (null == (n = this.shapeData) ? void 0 : n.particles) && r.load(null == (l = this.shapeData) ? void 0 : l.particles),
                this.particlesOptions = r;
                var a = this.particlesOptions.move.noise.delay
                  , i = (this.noiseDelay = 1e3 * (a.random.enable ? z.randomInRange(a.random.minimumValue, a.value) : a.value),
                t.retina.initParticle(this),
                this.particlesOptions.color)
                  , l = null != (n = this.sizeValue) ? n : t.retina.sizeValue
                  , a = "boolean" == typeof this.particlesOptions.size.random ? this.particlesOptions.size.random : this.particlesOptions.size.random.enable;
                if (this.size = {
                    value: a && void 0 !== this.randomMinimumSize ? z.randomInRange(this.randomMinimumSize, l) : l
                },
                this.direction = this.particlesOptions.move.direction,
                this.bubble = {
                    inRange: !1
                },
                this.angle = this.particlesOptions.rotate.random ? 360 * Math.random() : this.particlesOptions.rotate.value,
                this.particlesOptions.rotate.direction === p.random) {
                    const t = Math.floor(2 * Math.random());
                    this.rotateDirection = 0 < t ? p.counterClockwise : p.clockwise
                } else
                    this.rotateDirection = this.particlesOptions.rotate.direction;
                if (this.particlesOptions.size.animation.enable) {
                    if (this.particlesOptions.size.animation.startValue === f.min)
                        if (!a) {
                            const e = t.retina.pixelRatio;
                            this.size.value = this.particlesOptions.size.animation.minimumValue * e
                        }
                    this.size.status = h.increasing,
                    this.size.velocity = (null != (n = this.sizeAnimationSpeed) ? n : t.retina.sizeAnimationSpeed) / 100,
                    this.particlesOptions.size.animation.sync || (this.size.velocity = this.size.velocity * Math.random())
                }
                this.particlesOptions.color.animation.enable ? (this.colorVelocity = this.particlesOptions.color.animation.speed / 100,
                this.particlesOptions.color.animation.sync || (this.colorVelocity = this.colorVelocity * Math.random())) : this.colorVelocity = 0,
                this.particlesOptions.rotate.animation.enable && !this.particlesOptions.rotate.animation.sync && (this.angle = 360 * Math.random()),
                this.position = this.calcPosition(this.container, e),
                this.offset = {
                    x: 0,
                    y: 0
                },
                this.particlesOptions.collisions.enable && this.checkOverlap(e),
                this.color = k.colorToHsl(i);
                l = this.particlesOptions.opacity.random,
                a = this.particlesOptions.opacity.value;
                this.opacity = {
                    value: l.enable ? z.randomInRange(l.minimumValue, a) : a
                },
                this.particlesOptions.opacity.animation.enable && (this.opacity.status = d.increasing,
                this.opacity.velocity = this.particlesOptions.opacity.animation.speed / 100,
                this.particlesOptions.opacity.animation.sync || (this.opacity.velocity *= Math.random())),
                this.initialVelocity = this.calculateVelocity(),
                this.velocity = {
                    horizontal: this.initialVelocity.horizontal,
                    vertical: this.initialVelocity.vertical
                };
                let c = t.drawers.get(this.shape);
                if (c || (c = C.getShapeDrawer(this.shape)) && t.drawers.set(this.shape, c),
                this.shape === u.image || this.shape === u.images) {
                    const e = c
                      , i = this.particlesOptions.shape.options[this.shape]
                      , n = e.getImages(t).images
                      , l = n[z.arrayRandomIndex(n)]
                      , u = i instanceof Array ? i.filter(t=>t.src === l.source)[0] : i
                      , a = this.getColor();
                    if (void 0 !== (null == l ? void 0 : l.svgData) && u.replaceColor && a) {
                        const t = z.replaceColorSvg(l, a, this.opacity.value)
                          , e = new Blob([t],{
                            type: "image/svg+xml"
                        })
                          , i = window.URL || window.webkitURL || window
                          , n = i.createObjectURL(e)
                          , d = new Image;
                        this.image = {
                            data: l,
                            loaded: !1,
                            ratio: u.width / u.height,
                            replaceColor: null != (o = u.replaceColor) ? o : u.replace_color,
                            source: u.src
                        },
                        d.addEventListener("load", ()=>{
                            this.image && (this.image.loaded = !0,
                            l.element = d),
                            i.revokeObjectURL(n)
                        }
                        ),
                        d.addEventListener("error", ()=>{
                            i.revokeObjectURL(n),
                            z.loadImage(u.src).then(t=>{
                                this.image && (l.element = t.element,
                                this.image.loaded = !0)
                            }
                            )
                        }
                        ),
                        d.src = n
                    } else
                        this.image = {
                            data: l,
                            loaded: !0,
                            ratio: u.width / u.height,
                            replaceColor: null != (t = u.replaceColor) ? t : u.replace_color,
                            source: u.src
                        };
                    this.image.ratio || (this.image.ratio = 1),
                    this.fill = null != (o = u.fill) ? o : this.fill,
                    this.close = null != (t = u.close) ? t : this.close
                }
                this.stroke = this.particlesOptions.stroke instanceof Array ? z.itemFromArray(this.particlesOptions.stroke) : this.particlesOptions.stroke,
                this.strokeColor = k.colorToRgb(this.stroke.color),
                this.shadowColor = k.colorToRgb(this.particlesOptions.shadow.color),
                this.updater = new K(this.container,this)
            }
            update(t) {
                this.links = [],
                this.updater.update(t)
            }
            draw(t) {
                var e;
                !1 !== (null == (e = this.image) ? void 0 : e.loaded) && this.container.canvas.drawParticle(this, t)
            }
            isOverlapping() {
                const t = this.container;
                let e = !1
                  , i = 0;
                var n = this.getPosition();
                for (const o of t.particles.array.filter(t=>t != this)) {
                    i++;
                    const t = o.getPosition();
                    if (z.getDistance(n, t) <= this.size.value + o.size.value) {
                        e = !0;
                        break
                    }
                }
                return {
                    collisionFound: e,
                    iterations: i
                }
            }
            checkOverlap(t) {
                const e = this.container
                  , i = this.isOverlapping();
                i.iterations >= e.particles.count ? e.particles.remove(this) : i.collisionFound && (this.position.x = t ? t.x : Math.random() * e.canvas.size.width,
                this.position.y = t ? t.y : Math.random() * e.canvas.size.height,
                this.checkOverlap())
            }
            startInfection(t) {
                t > this.container.options.infection.stages.length || t < 0 || (this.infectionDelay = 0,
                this.infectionDelayStage = t)
            }
            updateInfectionStage(t) {
                t > this.container.options.infection.stages.length || t < 0 || void 0 !== this.infectionStage && this.infectionStage > t || (void 0 !== this.infectionTimeout && window.clearTimeout(this.infectionTimeout),
                this.infectionStage = t,
                this.infectionTime = 0)
            }
            updateInfection(t) {
                const e = this.container.options
                  , i = e.infection
                  , n = e.infection.stages
                  , o = n.length;
                if (void 0 !== this.infectionDelay && void 0 !== this.infectionDelayStage) {
                    const e = this.infectionDelayStage;
                    if (e > o || e < 0)
                        return;
                    this.infectionDelay > 1e3 * i.delay ? (this.infectionStage = e,
                    this.infectionTime = 0,
                    delete this.infectionDelay,
                    delete this.infectionDelayStage) : this.infectionDelay += t
                } else
                    delete this.infectionDelay,
                    delete this.infectionDelayStage;
                if (void 0 !== this.infectionStage && void 0 !== this.infectionTime) {
                    const e = n[this.infectionStage];
                    void 0 !== e.duration && 0 <= e.duration && this.infectionTime > 1e3 * e.duration ? this.nextInfectionStage() : this.infectionTime += t
                } else
                    delete this.infectionStage,
                    delete this.infectionTime
            }
            getPosition() {
                return {
                    x: this.position.x + this.offset.x,
                    y: this.position.y + this.offset.y
                }
            }
            getColor() {
                var t;
                return null != (t = this.bubble.color) ? t : this.color
            }
            destroy() {
                this.destroyed = !0
            }
            nextInfectionStage() {
                var t = this.container.options
                  , e = t.infection.stages.length;
                if (!(e <= 0 || void 0 === this.infectionStage) && (this.infectionTime = 0,
                e <= ++this.infectionStage)) {
                    if (t.infection.cure)
                        return delete this.infectionStage,
                        void delete this.infectionTime;
                    this.infectionStage = 0,
                    this.infectionTime = 0
                }
            }
            calcPosition(t, e) {
                var i;
                for (const [,i] of t.plugins) {
                    const t = void 0 !== i.particlePosition ? i.particlePosition(e, this) : void 0;
                    if (void 0 !== t)
                        return z.deepExtend({}, t)
                }
                const n = {
                    x: null != (i = null == e ? void 0 : e.x) ? i : Math.random() * t.canvas.size.width,
                    y: null != (i = null == e ? void 0 : e.y) ? i : Math.random() * t.canvas.size.height
                }
                  , o = this.particlesOptions.move.outMode;
                return (z.isInArray(o, m.bounce) || z.isInArray(o, m.bounceHorizontal)) && (n.x > t.canvas.size.width - 2 * this.size.value ? n.x -= this.size.value : n.x < 2 * this.size.value && (n.x += this.size.value)),
                (z.isInArray(o, m.bounce) || z.isInArray(o, m.bounceVertical)) && (n.y > t.canvas.size.height - 2 * this.size.value ? n.y -= this.size.value : n.y < 2 * this.size.value && (n.y += this.size.value)),
                n
            }
            calculateVelocity() {
                const t = z.getParticleBaseVelocity(this)
                  , e = {
                    horizontal: 0,
                    vertical: 0
                }
                  , i = this.particlesOptions.move
                  , n = Math.PI / 180 * i.angle
                  , o = Math.PI / 4
                  , s = {
                    left: Math.sin(o + n / 2) - Math.sin(o - n / 2),
                    right: Math.cos(o + n / 2) - Math.cos(o - n / 2)
                };
                return i.straight ? (e.horizontal = t.x,
                e.vertical = t.y,
                i.random && (e.horizontal += z.randomInRange(s.left, s.right) / 2,
                e.vertical += z.randomInRange(s.left, s.right) / 2)) : (e.horizontal = t.x + z.randomInRange(s.left, s.right) / 2,
                e.vertical = t.y + z.randomInRange(s.left, s.right) / 2),
                e
            }
        }
        class Et {
            constructor(t, e) {
                this.position = {
                    x: t,
                    y: e
                }
            }
        }
        class T extends Et {
            constructor(t, e, i, n) {
                super(t, e),
                this.size = {
                    height: n,
                    width: i
                }
            }
            contains(t) {
                return t.x >= this.position.x && t.x <= this.position.x + this.size.width && t.y >= this.position.y && t.y <= this.position.y + this.size.height
            }
            intersects(t) {
                const e = t
                  , i = t
                  , n = this.size.width
                  , o = this.size.height
                  , s = this.position
                  , r = t.position;
                if (void 0 !== i.radius)
                    return i.intersects(this);
                if (void 0 === e.size)
                    return !1;
                {
                    const t = e.size
                      , i = t.width
                      , a = t.height;
                    return r.x - i < s.x + n && r.x + i > s.x - n && r.y - a < s.y + o && r.y + a > s.y - o
                }
            }
        }
        class E {
            constructor(t, e) {
                this.rectangle = t,
                this.capacity = e,
                this.points = [],
                this.divided = !1
            }
            subdivide() {
                var t = this.rectangle.position.x
                  , e = this.rectangle.position.y
                  , i = this.rectangle.size.width
                  , n = this.rectangle.size.height
                  , o = this.capacity;
                this.northEast = new E(new T(t,e,i / 2,n / 2),o),
                this.northWest = new E(new T(t + i / 2,e,i / 2,n / 2),o),
                this.southEast = new E(new T(t,e + n / 2,i / 2,n / 2),o),
                this.southWest = new E(new T(t + i / 2,e + n / 2,i / 2,n / 2),o),
                this.divided = !0
            }
            insert(t) {
                var e;
                return !!this.rectangle.contains(t.position) && (this.points.length < this.capacity ? (this.points.push(t),
                !0) : (this.divided || this.subdivide(),
                null != (e = (null == (e = this.northEast) ? void 0 : e.insert(t)) || (null == (e = this.northWest) ? void 0 : e.insert(t)) || (null == (e = this.southEast) ? void 0 : e.insert(t)) || (null == (e = this.southWest) ? void 0 : e.insert(t))) && e))
            }
            query(e, t) {
                const i = null != t ? t : [];
                if (!e.intersects(this.rectangle))
                    return [];
                for (const t of this.points.filter(t=>e.contains(t.position)))
                    i.push(t.particle);
                return this.divided && (null != (t = this.northEast) && t.query(e, i),
                null != (t = this.northWest) && t.query(e, i),
                null != (t = this.southEast) && t.query(e, i),
                null != (t = this.southWest) && t.query(e, i)),
                i
            }
        }
        class Pt {
            constructor(t, e) {
                this.position = t,
                this.particle = e
            }
        }
        class P extends Et {
            constructor(t, e, i) {
                super(t, e),
                this.radius = i
            }
            contains(t) {
                return Math.pow(t.x - this.position.x, 2) + Math.pow(t.y - this.position.y, 2) <= this.radius * this.radius
            }
            intersects(t) {
                const e = t
                  , i = t
                  , n = this.position
                  , o = t.position
                  , s = Math.abs(o.x - n.x)
                  , r = Math.abs(o.y - n.y)
                  , a = this.radius;
                if (void 0 !== i.radius)
                    return a + i.radius > Math.sqrt(s * s + r + r);
                if (void 0 === e.size)
                    return !1;
                {
                    const t = e.size.width
                      , i = e.size.height
                      , n = Math.pow(s - t, 2) + Math.pow(r - i, 2);
                    return !(s > a + t || r > a + i) && (s <= t || r <= i || n <= a * a)
                }
            }
        }
        class Ot {
            constructor(t) {
                this.container = t
            }
            isEnabled() {
                var t = this.container
                  , e = t.interactivity.mouse
                  , t = t.options.interactivity.events;
                if (!t.onHover.enable || !e.position)
                    return !1;
                e = t.onHover.mode;
                return z.isInArray(r.grab, e)
            }
            reset() {}
            interact() {
                const t = this.container
                  , e = t.options.interactivity;
                if (e.events.onHover.enable && t.interactivity.status === x.mouseMoveEvent) {
                    var i = t.interactivity.mouse.position;
                    if (void 0 !== i) {
                        var n = t.retina.grabModeDistance;
                        for (const a of t.particles.quadTree.query(new P(i.x,i.y,n))) {
                            var o = a.getPosition()
                              , o = z.getDistance(o, i);
                            if (o <= t.retina.grabModeDistance) {
                                var s = e.modes.grab.links
                                  , r = s.opacity
                                  , o = r - o * r / t.retina.grabModeDistance;
                                if (0 < o) {
                                    const e = null != (r = s.color) ? r : a.particlesOptions.links.color;
                                    if (t.particles.grabLineColor || (t.particles.grabLineColor = e === x.randomColorValue || (null == (s = e) ? void 0 : s.value) === x.randomColorValue ? x.randomColorValue : k.colorToRgb(e)),
                                    void 0 === (r = t.particles.grabLineColor === x.randomColorValue ? k.getRandomRgbColor() : t.particles.grabLineColor))
                                        return;
                                    t.canvas.drawGrabLine(a, r, o, i)
                                }
                            }
                        }
                    }
                }
            }
        }
        (e = a = a || {}).bubble = "bubble",
        e.repulse = "repulse",
        (t = c = c || {}).bubble = "bubble",
        t.push = "push",
        t.remove = "remove",
        t.repulse = "repulse",
        t.pause = "pause",
        (e = v = v || {}).circle = "circle",
        e.rectangle = "rectangle";
        class Mt {
            constructor(t) {
                this.container = t
            }
            isEnabled() {
                var t = this.container
                  , e = t.options
                  , t = t.interactivity.mouse
                  , e = e.interactivity.events
                  , i = e.onDiv
                  , i = z.isDivModeEnabled(a.repulse, i);
                if (!(i || e.onHover.enable && t.position || e.onClick.enable && t.clickPosition))
                    return !1;
                t = e.onHover.mode,
                e = e.onClick.mode;
                return z.isInArray(r.repulse, t) || z.isInArray(c.repulse, e) || i
            }
            reset() {}
            interact() {
                var t = this.container
                  , e = t.options
                  , t = t.interactivity.status === x.mouseMoveEvent
                  , e = e.interactivity.events
                  , i = e.onHover.enable
                  , n = e.onHover.mode
                  , o = e.onClick.enable
                  , s = e.onClick.mode
                  , e = e.onDiv;
                t && i && z.isInArray(r.repulse, n) ? this.hoverRepulse() : o && z.isInArray(c.repulse, s) ? this.clickRepulse() : z.divModeExecute(a.repulse, e, (t,e)=>this.singleDivRepulse(t, e))
            }
            singleDivRepulse(t, e) {
                var i, n, o, s = this.container, r = document.getElementById(t);
                r && (o = s.retina.pixelRatio,
                i = {
                    x: (r.offsetLeft + r.offsetWidth / 2) * o,
                    y: (r.offsetTop + r.offsetHeight / 2) * o
                },
                n = r.offsetWidth / 2 * o,
                e = e.type === v.circle ? new P(i.x,i.y,n) : new T(r.offsetLeft * o,r.offsetTop * o,r.offsetWidth * o,r.offsetHeight * o),
                r = s.options.interactivity.modes.repulse.divs,
                o = z.divMode(r, t),
                this.processRepulse(i, n, e, o))
            }
            hoverRepulse() {
                var t = this.container
                  , e = t.interactivity.mouse.position;
                e && (t = t.retina.repulseModeDistance,
                this.processRepulse(e, t, new P(e.x,e.y,t)))
            }
            processRepulse(t, e, i, n) {
                var o;
                const s = this.container
                  , r = s.particles.quadTree.query(i);
                for (const i of r) {
                    const {dx: r, dy: a, distance: l} = z.getDistances(i.position, t)
                      , c = r / l
                      , u = a / l
                      , d = 100 * (null != (o = null == n ? void 0 : n.speed) ? o : s.options.interactivity.modes.repulse.speed)
                      , h = z.clamp((1 - Math.pow(l / e, 2)) * d, 0, 50)
                      , p = i.particlesOptions.move.outMode
                      , f = i.size.value
                      , v = {
                        x: i.position.x + c * h,
                        y: i.position.y + u * h
                    };
                    if (p === m.bounce || p === m.bounceVertical || p === m.bounceHorizontal) {
                        const t = {
                            horizontal: 0 < v.x - f && v.x + f < s.canvas.size.width,
                            vertical: 0 < v.y - f && v.y + f < s.canvas.size.height
                        };
                        p !== m.bounceVertical && !t.horizontal || (i.position.x = v.x),
                        p !== m.bounceHorizontal && !t.vertical || (i.position.y = v.y)
                    } else
                        i.position.x = v.x,
                        i.position.y = v.y
                }
            }
            clickRepulse() {
                const t = this.container;
                if (t.repulse.finish || (t.repulse.count || (t.repulse.count = 0),
                t.repulse.count++,
                t.repulse.count === t.particles.count && (t.repulse.finish = !0)),
                t.repulse.clicking) {
                    var e = t.retina.repulseModeDistance
                      , i = Math.pow(e / 6, 3)
                      , n = t.interactivity.mouse.clickPosition;
                    if (void 0 !== n) {
                        e = new P(n.x,n.y,i);
                        for (const l of t.particles.quadTree.query(e)) {
                            var {dx: o, dy: s, distance: r} = z.getDistances(n, l.position)
                              , r = r * r
                              , a = -i * t.options.interactivity.modes.repulse.speed / r;
                            r <= i && (t.repulse.particles.push(l),
                            this.processClickRepulse(l, o, s, a))
                        }
                    }
                } else if (!1 === t.repulse.clicking) {
                    for (const c of t.repulse.particles)
                        c.velocity.horizontal = c.initialVelocity.horizontal,
                        c.velocity.vertical = c.initialVelocity.vertical;
                    t.repulse.particles = []
                }
            }
            processClickRepulse(t, e, i, n) {
                var o = this.container
                  , s = o.options
                  , i = Math.atan2(i, e)
                  , n = (t.velocity.horizontal = n * Math.cos(i),
                t.velocity.vertical = n * Math.sin(i),
                s.particles.move.outMode);
                if (n === m.bounce || n === m.bounceHorizontal || n === m.bounceVertical) {
                    const e = {
                        x: t.position.x + t.velocity.horizontal,
                        y: t.position.y + t.velocity.vertical
                    };
                    n !== m.bounceVertical && (e.x + t.size.value > o.canvas.size.width || e.x - t.size.value < 0) && (t.velocity.horizontal *= -1),
                    n !== m.bounceHorizontal && (e.y + t.size.value > o.canvas.size.height || e.y - t.size.value < 0) && (t.velocity.vertical *= -1)
                }
            }
        }
        (t = y = y || {}).color = "color",
        t.opacity = "opacity",
        t.size = "size";
        class Dt {
            constructor(t) {
                this.container = t
            }
            static calculateBubbleValue(t, e, i, n) {
                var o;
                return i < e ? (o = t + (e - i) * n,
                z.clamp(o, t, e)) : e < i ? (o = t - (i - e) * n,
                z.clamp(o, e, t)) : void 0
            }
            isEnabled() {
                var t = this.container
                  , e = t.options
                  , t = t.interactivity.mouse
                  , e = e.interactivity.events
                  , i = e.onDiv
                  , i = z.isDivModeEnabled(a.bubble, i);
                if (!(i || e.onHover.enable && t.position || e.onClick.enable && t.clickPosition))
                    return !1;
                t = e.onHover.mode,
                e = e.onClick.mode;
                return z.isInArray(r.bubble, t) || z.isInArray(c.bubble, e) || i
            }
            reset(t, e) {
                t.bubble.inRange && !e || (delete t.bubble.divId,
                delete t.bubble.opacity,
                delete t.bubble.radius,
                delete t.bubble.color)
            }
            interact() {
                var t = this.container.options.interactivity.events
                  , e = t.onHover
                  , i = t.onClick
                  , n = e.enable
                  , e = e.mode
                  , o = i.enable
                  , i = i.mode
                  , t = t.onDiv;
                n && z.isInArray(r.bubble, e) ? this.hoverBubble() : o && z.isInArray(c.bubble, i) ? this.clickBubble() : z.divModeExecute(a.bubble, t, (t,e)=>this.singleDivHover(t, e))
            }
            singleDivHover(t, e) {
                const i = this.container
                  , n = document.getElementById(t);
                if (n) {
                    const o = i.retina.pixelRatio
                      , s = {
                        x: (n.offsetLeft + n.offsetWidth / 2) * o,
                        y: (n.offsetTop + n.offsetHeight / 2) * o
                    }
                      , r = n.offsetWidth / 2 * o
                      , a = e.type === v.circle ? new P(s.x,s.y,r) : new T(n.offsetLeft * o,n.offsetTop * o,n.offsetWidth * o,n.offsetHeight * o)
                      , l = i.particles.quadTree.query(a);
                    for (const e of l.filter(t=>a.contains(t.getPosition()))) {
                        e.bubble.inRange = !0;
                        const n = i.options.interactivity.modes.bubble.divs
                          , o = z.divMode(n, t);
                        e.bubble.divId && e.bubble.divId === t || (this.reset(e, !0),
                        e.bubble.divId = t),
                        this.hoverBubbleSize(e, 1, o),
                        this.hoverBubbleOpacity(e, 1, o),
                        this.hoverBubbleColor(e, o)
                    }
                }
            }
            process(t, e, i, n) {
                var o = this.container
                  , s = n.bubbleObj.optValue;
                if (void 0 !== s) {
                    var r = o.options.interactivity.modes.bubble.duration
                      , a = o.retina.bubbleModeDistance
                      , l = n.particlesObj.optValue
                      , c = n.bubbleObj.value
                      , u = n.particlesObj.value || 0
                      , n = n.type;
                    if (s !== l)
                        if (o.bubble.durationEnd)
                            c && (n === y.size && delete t.bubble.radius,
                            n === y.opacity && delete t.bubble.opacity);
                        else if (e <= a) {
                            if ((null != c ? c : u) !== s) {
                                const e = u - i * (u - s) / r;
                                n === y.size && (t.bubble.radius = e),
                                n === y.opacity && (t.bubble.opacity = e)
                            }
                        } else
                            n === y.size && delete t.bubble.radius,
                            n === y.opacity && delete t.bubble.opacity
                }
            }
            clickBubble() {
                var t;
                const e = this.container
                  , i = e.options
                  , n = e.interactivity.mouse.clickPosition;
                if (void 0 !== n) {
                    const o = e.retina.bubbleModeDistance
                      , s = e.particles.quadTree.query(new P(n.x,n.y,o));
                    for (const o of s) {
                        o.bubble.inRange = !0;
                        const s = o.getPosition()
                          , r = z.getDistance(s, n)
                          , a = ((new Date).getTime() - (e.interactivity.mouse.clickTime || 0)) / 1e3;
                        if (e.bubble.clicking) {
                            a > i.interactivity.modes.bubble.duration && (e.bubble.durationEnd = !0),
                            a > 2 * i.interactivity.modes.bubble.duration && (e.bubble.clicking = !1,
                            e.bubble.durationEnd = !1);
                            const n = {
                                bubbleObj: {
                                    optValue: e.retina.bubbleModeSize,
                                    value: o.bubble.radius
                                },
                                particlesObj: {
                                    optValue: null != (t = o.sizeValue) ? t : e.retina.sizeValue,
                                    value: o.size.value
                                },
                                type: y.size
                            }
                              , s = (this.process(o, r, a, n),
                            {
                                bubbleObj: {
                                    optValue: i.interactivity.modes.bubble.opacity,
                                    value: o.bubble.opacity
                                },
                                particlesObj: {
                                    optValue: o.particlesOptions.opacity.value,
                                    value: o.opacity.value
                                },
                                type: y.opacity
                            });
                            this.process(o, r, a, s),
                            !e.bubble.durationEnd && r <= e.retina.bubbleModeDistance ? this.hoverBubbleColor(o) : delete o.bubble.color
                        }
                    }
                }
            }
            hoverBubble() {
                const t = this.container
                  , e = t.interactivity.mouse.position;
                if (void 0 !== e) {
                    const i = t.retina.bubbleModeDistance
                      , n = t.particles.quadTree.query(new P(e.x,e.y,i));
                    for (const i of n) {
                        i.bubble.inRange = !0;
                        const n = i.getPosition()
                          , o = z.getDistance(n, e)
                          , s = 1 - o / t.retina.bubbleModeDistance;
                        o <= t.retina.bubbleModeDistance ? 0 <= s && t.interactivity.status === x.mouseMoveEvent && (this.hoverBubbleSize(i, s),
                        this.hoverBubbleOpacity(i, s),
                        this.hoverBubbleColor(i)) : this.reset(i),
                        t.interactivity.status === x.mouseLeaveEvent && this.reset(i)
                    }
                }
            }
            hoverBubbleSize(t, e, i) {
                var n, o = this.container, i = null != i && i.size ? i.size * o.retina.pixelRatio : o.retina.bubbleModeSize;
                void 0 !== i && (n = null != (n = t.sizeValue) ? n : o.retina.sizeValue,
                o = t.size.value,
                void 0 !== (o = Dt.calculateBubbleValue(o, i, n, e)) && (t.bubble.radius = o))
            }
            hoverBubbleOpacity(t, e, i) {
                var n, o = this.container.options, i = null != (i = null == i ? void 0 : i.opacity) ? i : o.interactivity.modes.bubble.opacity;
                void 0 !== i && (o = t.particlesOptions.opacity.value,
                n = t.opacity.value,
                void 0 !== (n = Dt.calculateBubbleValue(n, i, o, e)) && (t.bubble.opacity = n))
            }
            hoverBubbleColor(t, e) {
                var i = this.container.options;
                void 0 === t.bubble.color && void 0 !== (e = null != (e = null == e ? void 0 : e.color) ? e : i.interactivity.modes.bubble.color) && (i = e instanceof Array ? z.itemFromArray(e) : e,
                t.bubble.color = k.colorToHsl(i))
            }
        }
        class Lt {
            constructor(t) {
                this.container = t
            }
            isEnabled() {
                var t = this.container
                  , e = t.interactivity.mouse
                  , t = t.options.interactivity.events;
                if (!t.onHover.enable || !e.position)
                    return !1;
                e = t.onHover.mode;
                return z.isInArray(r.connect, e)
            }
            reset() {}
            interact() {
                const e = this.container;
                if (e.options.interactivity.events.onHover.enable && "mousemove" === e.interactivity.status) {
                    var i = e.interactivity.mouse.position;
                    if (i) {
                        const a = Math.abs(e.retina.connectModeRadius)
                          , l = e.particles.quadTree.query(new P(i.x,i.y,a));
                        let t = 0;
                        for (const c of l) {
                            var n = c.getPosition();
                            for (const u of l.slice(t + 1)) {
                                var o = u.getPosition()
                                  , s = Math.abs(e.retina.connectModeDistance)
                                  , r = Math.abs(n.x - o.x)
                                  , o = Math.abs(n.y - o.y);
                                r < s && o < s && e.canvas.drawConnectLine(c, u)
                            }
                            ++t
                        }
                    }
                }
            }
        }
        class Rt extends P {
            constructor(t, e, i, n) {
                super(t, e, i),
                this.canvasSize = n,
                this.canvasSize = {
                    height: n.height,
                    width: n.width
                }
            }
            contains(t) {
                if (super.contains(t))
                    return !0;
                var e = {
                    x: t.x - this.canvasSize.width,
                    y: t.y
                };
                if (super.contains(e))
                    return !0;
                e = {
                    x: t.x - this.canvasSize.width,
                    y: t.y - this.canvasSize.height
                };
                if (super.contains(e))
                    return !0;
                e = {
                    x: t.x,
                    y: t.y - this.canvasSize.height
                };
                return super.contains(e)
            }
            intersects(t) {
                if (super.intersects(t))
                    return !0;
                var e = t
                  , i = t
                  , n = {
                    x: t.position.x - this.canvasSize.width,
                    y: t.position.y - this.canvasSize.height
                };
                if (void 0 !== i.radius) {
                    const t = new P(n.x,n.y,2 * i.radius);
                    return super.intersects(t)
                }
                if (void 0 === e.size)
                    return !1;
                {
                    const t = new T(n.x,n.y,2 * e.size.width,2 * e.size.height);
                    return super.intersects(t)
                }
            }
        }
        class It {
            constructor(t) {
                this.container = t
            }
            isEnabled(t) {
                return t.particlesOptions.links.enable
            }
            reset() {}
            interact(e) {
                var i;
                const n = this.container
                  , o = e.particlesOptions.links
                  , s = o.opacity
                  , r = null != (i = e.linksDistance) ? i : n.retina.linksDistance
                  , a = n.canvas.size
                  , l = o.warp
                  , c = e.getPosition()
                  , t = l ? new Rt(c.x,c.y,r,a) : new P(c.x,c.y,r)
                  , u = n.particles.quadTree.query(t);
                for (const i of u) {
                    const t = i.particlesOptions.links;
                    if (e !== i && t.enable && o.id === t.id) {
                        const u = i.getPosition();
                        let t = z.getDistance(c, u);
                        if (l && t > r) {
                            const e = {
                                x: u.x - a.width,
                                y: u.y
                            };
                            if ((t = z.getDistance(c, e)) > r) {
                                const e = {
                                    x: u.x - a.width,
                                    y: u.y - a.height
                                };
                                if ((t = z.getDistance(c, e)) > r) {
                                    const e = {
                                        x: u.x,
                                        y: u.y - a.height
                                    };
                                    t = z.getDistance(c, e)
                                }
                            }
                        }
                        if (t > r)
                            return;
                        var d, h = s - t * s / r;
                        if (0 < h) {
                            const o = e.particlesOptions.links;
                            if (!(void 0 !== o.id ? n.particles.linksColors[o.id] : n.particles.linksColor)) {
                                const e = o.color
                                  , i = "string" == typeof e ? e : e.value;
                                d = i !== x.randomColorValue || o.consent ? k.colorToRgb({
                                    value: i
                                }) : o.blink ? x.randomColorValue : x.midColorValue,
                                void 0 !== o.id ? n.particles.linksColors[o.id] = d : n.particles.linksColor = d
                            }
                            -1 === i.links.map(t=>t.destination).indexOf(e) && -1 === e.links.map(t=>t.destination).indexOf(i) && e.links.push({
                                destination: i,
                                opacity: h
                            })
                        }
                    }
                }
            }
        }
        class Nt {
            constructor(t) {
                this.container = t
            }
            interact(t) {
                var e;
                const i = this.container
                  , n = i.options
                  , o = null != (e = t.linksDistance) ? e : i.retina.linksDistance
                  , s = t.getPosition()
                  , r = i.particles.quadTree.query(new P(s.x,s.y,o));
                for (const e of r)
                    if (t !== e && !e.particlesOptions.move.attract.enable) {
                        const i = e.getPosition()
                          , {dx: o, dy: r} = z.getDistances(s, i)
                          , a = n.particles.move.attract.rotate
                          , l = o / (1e3 * a.x)
                          , c = r / (1e3 * a.y);
                        t.velocity.horizontal -= l,
                        t.velocity.vertical -= c,
                        e.velocity.horizontal += l,
                        e.velocity.vertical += c
                    }
            }
            isEnabled(t) {
                return t.particlesOptions.move.attract.enable
            }
            reset() {}
        }
        class O {
            constructor(t) {
                this.container = t
            }
            static rotate(t, e) {
                return {
                    horizontal: t.horizontal * Math.cos(e) - t.vertical * Math.sin(e),
                    vertical: t.horizontal * Math.sin(e) + t.vertical * Math.cos(e)
                }
            }
            static collisionVelocity(t, e, i, n) {
                return {
                    horizontal: t.horizontal * (i - n) / (i + n) + 2 * e.horizontal * n / (i + n),
                    vertical: t.vertical
                }
            }
            static bounce(t, e) {
                const i = t.getPosition()
                  , n = e.getPosition()
                  , o = t.velocity.horizontal - e.velocity.horizontal
                  , s = t.velocity.vertical - e.velocity.vertical;
                if (0 <= o * (n.x - i.x) + s * (n.y - i.y)) {
                    const o = -Math.atan2(n.y - i.y, n.x - i.x)
                      , s = t.size.value
                      , r = e.size.value
                      , a = O.rotate(t.velocity, o)
                      , l = O.rotate(e.velocity, o)
                      , c = O.collisionVelocity(a, l, s, r)
                      , u = O.collisionVelocity(l, a, s, r)
                      , d = O.rotate(c, -o)
                      , h = O.rotate(u, -o);
                    t.velocity.horizontal = d.horizontal,
                    t.velocity.vertical = d.vertical,
                    e.velocity.horizontal = h.horizontal,
                    e.velocity.vertical = h.vertical
                }
            }
            static destroy(t, e) {
                void 0 === t.size.value && void 0 !== e.size.value ? t.destroy() : void 0 !== t.size.value && void 0 === e.size.value ? e.destroy() : void 0 !== t.size.value && void 0 !== e.size.value && (t.size.value >= e.size.value ? e : t).destroy()
            }
            static getRadius(t, e) {
                return t.bubble.radius || t.size.value || e
            }
            isEnabled(t) {
                return t.particlesOptions.collisions.enable
            }
            reset() {}
            interact(t) {
                const e = this.container
                  , i = t.getPosition()
                  , n = e.particles.quadTree.query(new P(i.x,i.y,2 * t.size.value));
                for (const o of n)
                    if (t !== o && o.particlesOptions.collisions.enable && t.particlesOptions.collisions.mode === o.particlesOptions.collisions.mode) {
                        const n = o.getPosition()
                          , s = z.getDistance(i, n)
                          , r = e.retina.sizeValue;
                        s <= O.getRadius(t, r) + O.getRadius(o, r) && this.resolveCollision(t, o)
                    }
            }
            resolveCollision(t, e) {
                switch (t.particlesOptions.collisions.mode) {
                case n.absorb:
                    this.absorb(t, e);
                    break;
                case n.bounce:
                    O.bounce(t, e);
                    break;
                case n.destroy:
                    O.destroy(t, e)
                }
            }
            absorb(t, e) {
                var i, n = this.container, o = n.options.fpsLimit / 1e3;
                void 0 === t.size.value && void 0 !== e.size.value ? t.destroy() : void 0 !== t.size.value && void 0 === e.size.value ? e.destroy() : void 0 !== t.size.value && void 0 !== e.size.value && (t.size.value >= e.size.value ? (i = z.clamp(t.size.value / e.size.value, 0, e.size.value) * o,
                t.size.value += i,
                e.size.value -= i,
                e.size.value <= n.retina.pixelRatio && (e.size.value = 0,
                e.destroy())) : (i = z.clamp(e.size.value / t.size.value, 0, t.size.value) * o,
                t.size.value -= i,
                e.size.value += i,
                t.size.value <= n.retina.pixelRatio && (t.size.value = 0,
                t.destroy())))
            }
        }
        class Ht {
            constructor(t) {
                this.container = t
            }
            isEnabled() {
                return this.container.options.infection.enable
            }
            reset() {}
            interact(e, t) {
                var i;
                if (e.updateInfection(t),
                void 0 !== e.infectionStage) {
                    const c = this.container
                      , u = c.options.infection;
                    if (u.enable && !(u.stages.length < 1)) {
                        var t = u.stages[e.infectionStage]
                          , n = c.retina.pixelRatio
                          , n = 2 * e.size.value + t.radius * n
                          , o = e.getPosition()
                          , s = null != (r = t.infectedStage) ? r : e.infectionStage
                          , r = c.particles.quadTree.query(new P(o.x,o.y,n)).filter(t=>void 0 === t.infectionStage || t.infectionStage !== e.infectionStage)
                          , a = t.rate
                          , l = r.length;
                        for (const t of r)
                            if (Math.random() < a / l)
                                if (void 0 === t.infectionStage)
                                    t.startInfection(s);
                                else if (t.infectionStage < e.infectionStage)
                                    t.updateInfectionStage(s);
                                else if (t.infectionStage > e.infectionStage) {
                                    const r = u.stages[t.infectionStage]
                                      , c = null != (i = null == r ? void 0 : r.infectedStage) ? i : t.infectionStage;
                                    e.updateInfectionStage(c)
                                }
                    }
                }
            }
        }
        class qt {
            constructor(t) {
                this.container = t,
                this.externalInteractors = [new Dt(t), new Lt(t), new Ot(t), new Mt(t)],
                this.particleInteractors = [new Nt(t), new O(t), new Ht(t), new It(t)]
            }
            init() {}
            interact(t) {
                this.externalInteract(t),
                this.particlesInteract(t)
            }
            externalInteract(t) {
                for (const e of this.externalInteractors)
                    e.isEnabled() && e.interact(t)
            }
            particlesInteract(t) {
                for (const e of this.container.particles.array) {
                    for (const t of this.externalInteractors)
                        t.reset(e);
                    for (const i of this.particleInteractors)
                        i.isEnabled(e) && i.interact(e, t)
                }
            }
        }
        class jt {
            constructor(t) {
                this.container = t,
                this.array = [],
                this.interactionManager = new qt(t);
                t = this.container.canvas.size;
                this.linksColors = {},
                this.quadTree = new E(new T(0,0,t.width,t.height),4)
            }
            get count() {
                return this.array.length
            }
            init() {
                const e = this.container
                  , i = e.options;
                let t = !1;
                for (const [,i] of e.plugins)
                    if (void 0 !== i.particlesInitialization && (t = i.particlesInitialization()),
                    t)
                        break;
                if (!t)
                    for (let t = this.count; t < i.particles.number.value; t++)
                        this.addParticle();
                if (i.infection.enable)
                    for (let t = 0; t < i.infection.infections; t++) {
                        const e = this.array.filter(t=>void 0 === t.infectionStage);
                        z.itemFromArray(e).startInfection(0)
                    }
                this.interactionManager.init(),
                e.noise.init()
            }
            redraw() {
                this.clear(),
                this.init(),
                this.draw(0)
            }
            removeAt(t, e) {
                if (0 <= t && t <= this.count)
                    for (const i of this.array.splice(t, null != e ? e : 1))
                        i.destroy()
            }
            remove(t) {
                this.removeAt(this.array.indexOf(t))
            }
            update(t) {
                const e = this.container
                  , i = [];
                e.noise.update();
                for (const n of this.array) {
                    n.bubble.inRange = !1;
                    for (const [,i] of e.plugins) {
                        if (n.destroyed)
                            break;
                        i.particleUpdate && i.particleUpdate(n, t)
                    }
                    n.destroyed || n.update(t),
                    n.destroyed ? i.push(n) : this.quadTree.insert(new Pt(n.getPosition(),n))
                }
                for (const t of i)
                    this.remove(t);
                this.interactionManager.interact(t)
            }
            draw(t) {
                const e = this.container
                  , i = (e.canvas.clear(),
                this.container.canvas.size);
                this.quadTree = new E(new T(0,0,i.width,i.height),4),
                this.update(t);
                for (const [,i] of e.plugins)
                    e.canvas.drawPlugin(i, t);
                for (const e of this.array)
                    e.draw(t)
            }
            clear() {
                this.array = []
            }
            push(e, t) {
                var i = this.container
                  , n = i.options
                  , i = n.particles.number.limit * i.density;
                if (this.pushing = !0,
                0 < i) {
                    const t = this.count + e - i;
                    0 < t && this.removeQuantity(t)
                }
                let o;
                t && (o = null != (i = t.position) ? i : {
                    x: 0,
                    y: 0
                });
                for (let t = 0; t < e; t++)
                    this.addParticle(o);
                n.particles.move.enable || this.container.play(),
                this.pushing = !1
            }
            addParticle(t, e) {
                t = new Tt(this.container,t,e);
                return this.array.push(t),
                t
            }
            removeQuantity(t) {
                var e = this.container.options;
                this.removeAt(0, t),
                e.particles.move.enable || this.container.play()
            }
        }
        class _t {
            constructor(t) {
                this.container = t
            }
            init() {
                const t = this.container
                  , e = t.options;
                e.detectRetina ? this.pixelRatio = z.isSsr() ? 1 : window.devicePixelRatio : this.pixelRatio = 1;
                var i = this.pixelRatio;
                if (t.canvas.element) {
                    const e = t.canvas.element;
                    t.canvas.size.width = e.offsetWidth * i,
                    t.canvas.size.height = e.offsetHeight * i
                }
                var n = e.particles
                  , n = (this.linksDistance = n.links.distance * i,
                this.linksWidth = n.links.width * i,
                this.moveSpeed = n.move.speed * i,
                this.sizeValue = n.size.value * i,
                this.sizeAnimationSpeed = n.size.animation.speed * i,
                e.interactivity.modes);
                this.connectModeDistance = n.connect.distance * i,
                this.connectModeRadius = n.connect.radius * i,
                this.grabModeDistance = n.grab.distance * i,
                this.repulseModeDistance = n.repulse.distance * i,
                this.slowModeRadius = n.slow.radius * i,
                this.bubbleModeDistance = n.bubble.distance * i,
                n.bubble.size && (this.bubbleModeSize = n.bubble.size * i)
            }
            initParticle(t) {
                var e = t.particlesOptions
                  , i = this.pixelRatio;
                t.linksDistance = e.links.distance * i,
                t.linksWidth = e.links.width * i,
                t.moveSpeed = e.move.speed * i,
                t.sizeValue = e.size.value * i,
                "boolean" != typeof e.size.random && (t.randomMinimumSize = e.size.random.minimumValue * i),
                t.sizeAnimationSpeed = e.size.animation.speed * i
            }
        }
        class Vt {
            constructor(t) {
                this.container = t
            }
            nextFrame(t) {
                const e = this.container
                  , i = e.options
                  , n = 0 < i.fpsLimit ? i.fpsLimit : 60;
                var o;
                void 0 !== e.lastFrameTime && t < e.lastFrameTime + 1e3 / n ? e.draw() : (o = t - e.lastFrameTime,
                e.lastFrameTime = t,
                e.particles.draw(o),
                i.particles.move.enable && e.getAnimationStatus() && e.draw())
            }
        }
        (e = g = g || {}).canvas = "canvas",
        e.parent = "parent",
        e.window = "window";
        class Bt {
            constructor() {
                this.enable = !1,
                this.mode = []
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.mode && (this.mode = t.mode))
            }
        }
        class Ft {
            constructor() {
                this.ids = [],
                this.enable = !1,
                this.mode = [],
                this.type = v.circle
            }
            get elementId() {
                return this.ids
            }
            set elementId(t) {
                this.ids = t
            }
            get el() {
                return this.elementId
            }
            set el(t) {
                this.elementId = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== (e = null != (e = null != (e = t.ids) ? e : t.elementId) ? e : t.el) && (this.ids = e),
                void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.mode && (this.mode = t.mode),
                void 0 !== t.type && (this.type = t.type))
            }
        }
        class Wt {
            constructor() {
                this.enable = !1,
                this.force = 2,
                this.smooth = 10
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.force && (this.force = t.force),
                void 0 !== t.smooth && (this.smooth = t.smooth))
            }
        }
        class $t {
            constructor() {
                this.enable = !1,
                this.mode = [],
                this.parallax = new Wt
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.mode && (this.mode = t.mode),
                this.parallax.load(t.parallax))
            }
        }
        class Ut {
            constructor() {
                this.onClick = new Bt,
                this.onDiv = new Ft,
                this.onHover = new $t,
                this.resize = !0
            }
            get onclick() {
                return this.onClick
            }
            set onclick(t) {
                this.onClick = t
            }
            get ondiv() {
                return this.onDiv
            }
            set ondiv(t) {
                this.onDiv = t
            }
            get onhover() {
                return this.onHover
            }
            set onhover(t) {
                this.onHover = t
            }
            load(t) {
                var e;
                if (void 0 !== t) {
                    this.onClick.load(null != (e = t.onClick) ? e : t.onclick);
                    const i = null != (e = t.onDiv) ? e : t.ondiv;
                    void 0 !== i && (i instanceof Array ? this.onDiv = i.map(t=>{
                        const e = new Ft;
                        return e.load(t),
                        e
                    }
                    ) : (this.onDiv = new Ft,
                    this.onDiv.load(i))),
                    this.onHover.load(null != (e = t.onHover) ? e : t.onhover),
                    void 0 !== t.resize && (this.resize = t.resize)
                }
            }
        }
        class Gt {
            constructor() {
                this.distance = 200,
                this.duration = .4
            }
            load(t) {
                void 0 !== t && (void 0 !== t.distance && (this.distance = t.distance),
                void 0 !== t.duration && (this.duration = t.duration),
                void 0 !== t.opacity && (this.opacity = t.opacity),
                void 0 !== t.color && (t.color instanceof Array ? this.color = t.color.map(t=>S.create(void 0, t)) : (this.color instanceof Array && (this.color = new S),
                this.color = S.create(this.color, t.color))),
                void 0 !== t.size && (this.size = t.size))
            }
        }
        class Xt extends Gt {
            constructor() {
                super(),
                this.ids = []
            }
            load(t) {
                super.load(t),
                void 0 !== t && void 0 !== t.ids && (this.ids = t.ids)
            }
        }
        class Yt extends Gt {
            load(t) {
                super.load(t),
                void 0 !== t && void 0 !== t.divs && (t.divs instanceof Array ? this.divs = t.divs.map(t=>{
                    const e = new Xt;
                    return e.load(t),
                    e
                }
                ) : ((this.divs instanceof Array || !this.divs) && (this.divs = new Xt),
                this.divs.load(t.divs)))
            }
        }
        class Jt {
            constructor() {
                this.opacity = .5
            }
            load(t) {
                void 0 !== t && void 0 !== t.opacity && (this.opacity = t.opacity)
            }
        }
        class Qt {
            constructor() {
                this.distance = 80,
                this.links = new Jt,
                this.radius = 60
            }
            get line_linked() {
                return this.links
            }
            set line_linked(t) {
                this.links = t
            }
            get lineLinked() {
                return this.links
            }
            set lineLinked(t) {
                this.links = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== t.distance && (this.distance = t.distance),
                this.links.load(null != (e = null != (e = t.links) ? e : t.lineLinked) ? e : t.line_linked),
                void 0 !== t.radius && (this.radius = t.radius))
            }
        }
        class Kt {
            constructor() {
                this.opacity = 1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.opacity && (this.opacity = t.opacity),
                void 0 !== t.color && (this.color = S.create(this.color, t.color)))
            }
        }
        class Zt {
            constructor() {
                this.distance = 100,
                this.links = new Kt
            }
            get line_linked() {
                return this.links
            }
            set line_linked(t) {
                this.links = t
            }
            get lineLinked() {
                return this.links
            }
            set lineLinked(t) {
                this.links = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== t.distance && (this.distance = t.distance),
                this.links.load(null != (e = null != (e = t.links) ? e : t.lineLinked) ? e : t.line_linked))
            }
        }
        class te {
            constructor() {
                this.quantity = 2
            }
            get particles_nb() {
                return this.quantity
            }
            set particles_nb(t) {
                this.quantity = t
            }
            load(t) {
                var e;
                void 0 !== t && void 0 !== (e = null != (e = t.quantity) ? e : t.particles_nb) && (this.quantity = e)
            }
        }
        class ee {
            constructor() {
                this.quantity = 4
            }
            get particles_nb() {
                return this.quantity
            }
            set particles_nb(t) {
                this.quantity = t
            }
            load(t) {
                var e;
                void 0 !== t && void 0 !== (e = null != (e = t.quantity) ? e : t.particles_nb) && (this.quantity = e)
            }
        }
        class ie {
            constructor() {
                this.distance = 200,
                this.duration = .4,
                this.speed = 1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.distance && (this.distance = t.distance),
                void 0 !== t.duration && (this.duration = t.duration),
                void 0 !== t.speed && (this.speed = t.speed))
            }
        }
        class ne extends ie {
            constructor() {
                super(),
                this.ids = []
            }
            load(t) {
                super.load(t),
                void 0 !== t && void 0 !== t.ids && (this.ids = t.ids)
            }
        }
        class oe extends ie {
            load(t) {
                super.load(t),
                void 0 !== (null == t ? void 0 : t.divs) && (t.divs instanceof Array ? this.divs = t.divs.map(t=>{
                    const e = new ne;
                    return e.load(t),
                    e
                }
                ) : ((this.divs instanceof Array || !this.divs) && (this.divs = new ne),
                this.divs.load(t.divs)))
            }
        }
        class se {
            constructor() {
                this.factor = 3,
                this.radius = 200
            }
            get active() {
                return !1
            }
            set active(t) {}
            load(t) {
                void 0 !== t && (void 0 !== t.factor && (this.factor = t.factor),
                void 0 !== t.radius && (this.radius = t.radius))
            }
        }
        class re {
            constructor() {
                this.bubble = new Yt,
                this.connect = new Qt,
                this.grab = new Zt,
                this.push = new ee,
                this.remove = new te,
                this.repulse = new oe,
                this.slow = new se
            }
            load(t) {
                void 0 !== t && (this.bubble.load(t.bubble),
                this.connect.load(t.connect),
                this.grab.load(t.grab),
                this.push.load(t.push),
                this.remove.load(t.remove),
                this.repulse.load(t.repulse),
                this.slow.load(t.slow))
            }
        }
        class ae {
            constructor() {
                this.detectsOn = g.canvas,
                this.events = new Ut,
                this.modes = new re
            }
            get detect_on() {
                return this.detectsOn
            }
            set detect_on(t) {
                this.detectsOn = t
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== (e = null != (e = t.detectsOn) ? e : t.detect_on) && (this.detectsOn = e),
                this.events.load(t.events),
                this.modes.load(t.modes),
                !0 === (null == (t = null == (e = t.modes) ? void 0 : e.slow) ? void 0 : t.active) && (this.events.onHover.mode instanceof Array ? this.events.onHover.mode.indexOf(r.slow) < 0 && this.events.onHover.mode.push(r.slow) : this.events.onHover.mode !== r.slow && (this.events.onHover.mode = [this.events.onHover.mode, r.slow])))
            }
        }
        class le {
            constructor() {
                this.color = new S,
                this.opacity = 1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.color && (this.color = S.create(this.color, t.color)),
                void 0 !== t.opacity && (this.opacity = t.opacity))
            }
        }
        class ce {
            constructor() {
                this.cover = new le,
                this.enable = !1
            }
            load(t) {
                var e, i;
                void 0 !== t && (void 0 !== t.cover && (e = t.cover,
                i = "string" == typeof t.cover ? {
                    color: t.cover
                } : t.cover,
                this.cover.load(void 0 !== e.color ? e : {
                    color: i
                })),
                void 0 !== t.enable && (this.enable = t.enable))
            }
        }
        class ue {
            load(t) {
                void 0 !== t && (void 0 !== t.color && (this.color = S.create(this.color, t.color)),
                void 0 !== t.image && (this.image = t.image),
                void 0 !== t.position && (this.position = t.position),
                void 0 !== t.repeat && (this.repeat = t.repeat),
                void 0 !== t.size && (this.size = t.size),
                void 0 !== t.opacity && (this.opacity = t.opacity))
            }
        }
        class de {
            constructor() {
                this.color = new S,
                this.color.value = "#ff0000",
                this.radius = 0,
                this.rate = 1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.color && (this.color = S.create(this.color, t.color)),
                this.duration = t.duration,
                this.infectedStage = t.infectedStage,
                void 0 !== t.radius && (this.radius = t.radius),
                void 0 !== t.rate && (this.rate = t.rate))
            }
        }
        class he {
            constructor() {
                this.cure = !1,
                this.delay = 0,
                this.enable = !1,
                this.infections = 0,
                this.stages = []
            }
            load(t) {
                void 0 !== t && (void 0 !== t.cure && (this.cure = t.cure),
                void 0 !== t.delay && (this.delay = t.delay),
                void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.infections && (this.infections = t.infections),
                void 0 !== t.stages && (this.stages = t.stages.map(t=>{
                    const e = new de;
                    return e.load(t),
                    e
                }
                )))
            }
        }
        class pe {
            constructor() {
                this.background = new ue,
                this.backgroundMask = new ce,
                this.detectRetina = !0,
                this.fpsLimit = 30,
                this.infection = new he,
                this.interactivity = new ae,
                this.particles = new St,
                this.pauseOnBlur = !0
            }
            get fps_limit() {
                return this.fpsLimit
            }
            set fps_limit(t) {
                this.fpsLimit = t
            }
            get retina_detect() {
                return this.detectRetina
            }
            set retina_detect(t) {
                this.detectRetina = t
            }
            load(t) {
                if (void 0 !== t) {
                    if (void 0 !== t.preset)
                        if (t.preset instanceof Array)
                            for (const e of t.preset)
                                this.importPreset(e);
                        else
                            this.importPreset(t.preset);
                    var e = null != (e = t.detectRetina) ? e : t.retina_detect
                      , e = (void 0 !== e && (this.detectRetina = e),
                    null != (e = t.fpsLimit) ? e : t.fps_limit);
                    void 0 !== e && (this.fpsLimit = e),
                    void 0 !== t.pauseOnBlur && (this.pauseOnBlur = t.pauseOnBlur),
                    this.background.load(t.background),
                    this.particles.load(t.particles),
                    this.infection.load(t.infection),
                    this.interactivity.load(t.interactivity),
                    this.backgroundMask.load(t.backgroundMask),
                    C.loadOptions(this, t)
                }
            }
            importPreset(t) {
                this.load(C.getPreset(t))
            }
        }
        class M {
            constructor(t) {
                this.container = t,
                this.canPush = !0,
                this.mouseMoveHandler = t=>this.mouseTouchMove(t),
                this.touchStartHandler = t=>this.mouseTouchMove(t),
                this.touchMoveHandler = t=>this.mouseTouchMove(t),
                this.touchEndHandler = ()=>this.mouseTouchFinish(),
                this.mouseLeaveHandler = ()=>this.mouseTouchFinish(),
                this.touchCancelHandler = ()=>this.mouseTouchFinish(),
                this.touchEndClickHandler = t=>this.mouseTouchClick(t),
                this.mouseUpHandler = t=>this.mouseTouchClick(t),
                this.visibilityChangeHandler = ()=>this.handleVisibilityChange(),
                this.resizeHandler = ()=>this.handleWindowResize()
            }
            static manageListener(e, i, n, t, o) {
                if (t) {
                    let t = {
                        passive: !0
                    };
                    "boolean" == typeof o ? t.capture = o : void 0 !== o && (t = o),
                    e.addEventListener(i, n, t)
                } else {
                    const t = o;
                    e.removeEventListener(i, n, t)
                }
            }
            addListeners() {
                this.manageListeners(!0)
            }
            removeListeners() {
                this.manageListeners(!1)
            }
            manageListeners(t) {
                const e = this.container
                  , i = e.options
                  , n = i.interactivity.detectsOn;
                n === g.window ? e.interactivity.element = window : n === g.parent && e.canvas.element ? e.interactivity.element = e.canvas.element.parentNode : e.interactivity.element = e.canvas.element;
                var o = e.interactivity.element;
                o && (i.interactivity.events.onHover.enable || i.interactivity.events.onClick.enable) && (M.manageListener(o, x.mouseMoveEvent, this.mouseMoveHandler, t),
                M.manageListener(o, x.touchStartEvent, this.touchStartHandler, t),
                M.manageListener(o, x.touchMoveEvent, this.touchMoveHandler, t),
                i.interactivity.events.onClick.enable || M.manageListener(o, x.touchEndEvent, this.touchEndHandler, t),
                M.manageListener(o, x.mouseLeaveEvent, this.mouseLeaveHandler, t),
                M.manageListener(o, x.touchCancelEvent, this.touchCancelHandler, t)),
                i.interactivity.events.onClick.enable && o && (M.manageListener(o, x.touchEndEvent, this.touchEndClickHandler, t),
                M.manageListener(o, x.mouseUpEvent, this.mouseUpHandler, t)),
                i.interactivity.events.resize && M.manageListener(window, x.resizeEvent, this.resizeHandler, t),
                document && M.manageListener(document, x.visibilityChangeEvent, this.visibilityChangeHandler, t, !1)
            }
            handleWindowResize() {
                const t = this.container
                  , e = t.options
                  , i = t.canvas.element;
                if (i) {
                    var n = t.retina.pixelRatio;
                    t.canvas.size.width = i.offsetWidth * n,
                    t.canvas.size.height = i.offsetHeight * n,
                    i.width = t.canvas.size.width,
                    i.height = t.canvas.size.height,
                    e.particles.move.enable || t.particles.redraw(),
                    t.densityAutoParticles();
                    for (const [,e] of t.plugins)
                        void 0 !== e.resize && e.resize()
                }
            }
            handleVisibilityChange() {
                const t = this.container;
                t.options.pauseOnBlur && (null !== document && void 0 !== document && document.hidden ? (t.pageHidden = !0,
                t.pause()) : (t.pageHidden = !1,
                t.getAnimationStatus() ? t.play(!0) : t.draw()))
            }
            mouseTouchMove(t) {
                var e, i;
                const n = this.container
                  , o = n.options;
                let s;
                const r = n.canvas.element;
                if (t.type.startsWith("mouse")) {
                    this.canPush = !0;
                    const e = t;
                    if (void 0 === (null == (a = n.interactivity) ? void 0 : a.element))
                        return;
                    if (n.interactivity.element === window) {
                        if (r) {
                            const t = r.getBoundingClientRect();
                            s = {
                                x: e.clientX - t.left,
                                y: e.clientY - t.top
                            }
                        }
                    } else if (o.interactivity.detectsOn === g.parent) {
                        const t = e.target
                          , a = e.currentTarget;
                        if (t && a) {
                            const i = t.getBoundingClientRect()
                              , n = a.getBoundingClientRect();
                            s = {
                                x: e.offsetX + i.left - n.left,
                                y: e.offsetY + i.top - n.top
                            }
                        } else
                            s = {
                                x: e.offsetX || e.clientX,
                                y: e.offsetY || e.clientY
                            }
                    } else
                        e.target === n.canvas.element && (s = {
                            x: e.offsetX || e.clientX,
                            y: e.offsetY || e.clientY
                        })
                } else {
                    this.canPush = "touchmove" !== t.type;
                    const a = t
                      , n = a.touches[a.touches.length - 1]
                      , o = null == r ? void 0 : r.getBoundingClientRect();
                    s = {
                        x: n.clientX - (null != (e = null == o ? void 0 : o.left) ? e : 0),
                        y: n.clientY - (null != (i = null == o ? void 0 : o.top) ? i : 0)
                    }
                }
                var a = n.retina.pixelRatio;
                s && (s.x *= a,
                s.y *= a),
                n.interactivity.mouse.position = s,
                n.interactivity.status = x.mouseMoveEvent
            }
            mouseTouchFinish() {
                const t = this.container;
                delete t.interactivity.mouse.position,
                t.interactivity.status = x.mouseLeaveEvent
            }
            mouseTouchClick(t) {
                var e = this.container
                  , i = e.options;
                let n = !1;
                var o = e.interactivity.mouse.position;
                if (void 0 !== o && i.interactivity.events.onClick.enable) {
                    for (const [,t] of e.plugins)
                        if (void 0 !== t.clickPositionValid && (n = t.clickPositionValid(o),
                        n))
                            break;
                    n || this.doMouseTouchClick(t)
                }
            }
            doMouseTouchClick(t) {
                const e = this.container
                  , i = e.options;
                if (this.canPush) {
                    const t = e.interactivity.mouse.position;
                    if (!t)
                        return;
                    e.interactivity.mouse.clickPosition = {
                        x: t.x,
                        y: t.y
                    },
                    e.interactivity.mouse.clickTime = (new Date).getTime();
                    var n = i.interactivity.events.onClick;
                    if (n.mode instanceof Array)
                        for (const t of n.mode)
                            this.handleClickMode(t);
                    else
                        this.handleClickMode(n.mode)
                }
                "touchend" === t.type && setTimeout(()=>this.mouseTouchFinish(), 500)
            }
            handleClickMode(t) {
                const e = this.container
                  , i = e.options
                  , n = i.interactivity.modes.push.quantity
                  , o = i.interactivity.modes.remove.quantity;
                switch (t) {
                case c.push:
                    0 < n && (i.particles.move.enable || 1 === n ? e.particles.push(n, e.interactivity.mouse) : 1 < n && e.particles.push(n));
                    break;
                case c.remove:
                    e.particles.removeQuantity(o);
                    break;
                case c.bubble:
                    e.bubble.clicking = !0;
                    break;
                case c.repulse:
                    e.repulse.clicking = !0,
                    e.repulse.count = 0;
                    for (const t of e.repulse.particles)
                        t.velocity.horizontal = t.initialVelocity.horizontal,
                        t.velocity.vertical = t.initialVelocity.vertical;
                    e.repulse.particles = [],
                    e.repulse.finish = !1,
                    setTimeout(()=>{
                        e.destroyed || (e.repulse.clicking = !1)
                    }
                    , 1e3 * i.interactivity.modes.repulse.duration);
                    break;
                case c.pause:
                    e.getAnimationStatus() ? e.pause() : e.play()
                }
                for (const [,i] of e.plugins)
                    i.handleClickMode && i.handleClickMode(t)
            }
        }
        class fe {
            constructor(t, e, ...i) {
                this.id = t,
                this.sourceOptions = e,
                this.started = !1,
                this.destroyed = !1,
                this.paused = !0,
                this.lastFrameTime = 0,
                this.pageHidden = !1,
                this.retina = new _t(this),
                this.canvas = new J(this),
                this.particles = new jt(this),
                this.drawer = new Vt(this),
                this.noise = {
                    generate: ()=>({
                        angle: Math.random() * Math.PI * 2,
                        length: Math.random()
                    }),
                    init: ()=>{}
                    ,
                    update: ()=>{}
                },
                this.interactivity = {
                    mouse: {}
                },
                this.bubble = {},
                this.repulse = {
                    particles: []
                },
                this.plugins = new Map,
                this.drawers = new Map,
                this.density = 1,
                this.options = new pe;
                for (const t of i)
                    this.options.load(C.getPreset(t));
                for (const t of C.getSupportedShapes()) {
                    const e = C.getShapeDrawer(t);
                    e && this.drawers.set(t, e)
                }
                this.sourceOptions && this.options.load(this.sourceOptions),
                this.eventListeners = new M(this)
            }
            play(t) {
                t = this.paused || t;
                if (this.paused && (this.paused = !1),
                t) {
                    for (const [,t] of this.plugins)
                        t.play && t.play();
                    this.lastFrameTime = performance.now()
                }
                this.draw()
            }
            pause() {
                if (void 0 !== this.drawAnimationFrame && (z.cancelAnimation(this.drawAnimationFrame),
                delete this.drawAnimationFrame),
                !this.paused) {
                    for (var [,t] of this.plugins)
                        t.pause && t.pause();
                    this.pageHidden || (this.paused = !0)
                }
            }
            draw() {
                this.drawAnimationFrame = z.animate(t=>{
                    var e;
                    return null == (e = this.drawer) ? void 0 : e.nextFrame(t)
                }
                )
            }
            getAnimationStatus() {
                return !this.paused
            }
            setNoise(t, e, i) {
                t && ("function" == typeof t ? (this.noise.generate = t,
                e && (this.noise.init = e),
                i && (this.noise.update = i)) : (t.generate && (this.noise.generate = t.generate),
                t.init && (this.noise.init = t.init),
                t.update && (this.noise.update = t.update)))
            }
            densityAutoParticles() {
                this.initDensityFactor();
                var t = this.options.particles.number
                  , e = t.value
                  , t = 0 < t.limit ? t.limit : e
                  , e = Math.min(e, t) * this.density
                  , t = this.particles.count;
                t < e ? this.particles.push(Math.abs(e - t)) : e < t && this.particles.removeQuantity(t - e)
            }
            destroy() {
                this.stop(),
                this.canvas.destroy(),
                delete this.interactivity,
                delete this.options,
                delete this.retina,
                delete this.canvas,
                delete this.particles,
                delete this.bubble,
                delete this.repulse,
                delete this.drawer,
                delete this.eventListeners;
                for (var [,t] of this.drawers)
                    t.destroy && t.destroy(this);
                this.drawers = new Map,
                this.destroyed = !0
            }
            exportImg(t) {
                this.exportImage(t)
            }
            exportImage(t, e, i) {
                var n;
                return null == (n = this.canvas.element) ? void 0 : n.toBlob(t, null != e ? e : "image/png", i)
            }
            exportConfiguration() {
                return JSON.stringify(this.options, void 0, 2)
            }
            refresh() {
                return o(this, void 0, void 0, function*() {
                    this.stop(),
                    yield this.start()
                })
            }
            stop() {
                if (this.started) {
                    this.started = !1,
                    this.eventListeners.removeListeners(),
                    this.pause(),
                    this.particles.clear(),
                    this.canvas.clear();
                    for (var [,t] of this.plugins)
                        t.stop && t.stop();
                    this.plugins = new Map,
                    this.particles.linksColors = {},
                    delete this.particles.linksColor
                }
            }
            start() {
                return o(this, void 0, void 0, function*() {
                    if (!this.started) {
                        yield this.init(),
                        this.started = !0,
                        this.eventListeners.addListeners();
                        for (var [,t] of this.plugins)
                            void 0 !== t.startAsync ? yield t.startAsync() : void 0 !== t.start && t.start();
                        this.play()
                    }
                })
            }
            init() {
                return o(this, void 0, void 0, function*() {
                    this.retina.init(),
                    this.canvas.init();
                    const t = C.getAvailablePlugins(this);
                    for (var [e,i] of t)
                        this.plugins.set(e, i);
                    for (const [,t] of this.drawers)
                        t.init && (yield t.init(this));
                    for (const [,t] of this.plugins)
                        t.init ? t.init(this.options) : void 0 !== t.initAsync && (yield t.initAsync(this.options));
                    this.particles.init(),
                    this.densityAutoParticles()
                })
            }
            initDensityFactor() {
                var t, e, i = this.options.particles.number.density;
                this.canvas.element && i.enable && (t = this.canvas.element,
                e = this.retina.pixelRatio,
                this.density = t.width * t.height / (i.factor * e * i.area))
            }
        }
        const ve = [];
        class D {
            static dom() {
                return ve
            }
            static domItem(t) {
                const e = D.dom()
                  , i = e[t];
                if (i && !i.destroyed)
                    return i;
                e.splice(t, 1)
            }
            static loadFromArray(t, e, i) {
                return o(this, void 0, void 0, function*() {
                    return D.load(t, z.itemFromArray(e, i))
                })
            }
            static setFromArray(t, e, i, n) {
                return o(this, void 0, void 0, function*() {
                    return D.set(t, e, z.itemFromArray(i, n))
                })
            }
            static load(e, i) {
                return o(this, void 0, void 0, function*() {
                    var t = document.getElementById(e);
                    if (t)
                        return this.set(e, t, i)
                })
            }
            static set(s, r, a) {
                return o(this, void 0, void 0, function*() {
                    const t = D.dom()
                      , e = t.findIndex(t=>t.id === s);
                    if (0 <= e) {
                        const s = this.domItem(e);
                        s && !s.destroyed && (s.destroy(),
                        t.splice(e, 1))
                    }
                    let i, n;
                    if ("canvas" === r.tagName)
                        i = r,
                        n = !1;
                    else {
                        const s = r.getElementsByTagName("canvas");
                        s.length ? ((i = s[0]).className || (i.className = x.canvasClass),
                        n = !1) : (n = !0,
                        (i = document.createElement("canvas")).className = x.canvasClass,
                        i.style.width = "100%",
                        i.style.height = "100%",
                        r.appendChild(i))
                    }
                    const o = new fe(s,a);
                    return 0 <= e ? t.splice(e, 0, o) : t.push(o),
                    o.canvas.loadCanvas(i, n),
                    yield o.start(),
                    o
                })
            }
            static loadJSON(e, i) {
                return o(this, void 0, void 0, function*() {
                    const t = yield fetch(i);
                    if (t.ok) {
                        const i = yield t.json();
                        return i instanceof Array ? D.loadFromArray(e, i) : D.load(e, i)
                    }
                    this.fetchError(t.status)
                })
            }
            static setJSON(e, i, n) {
                return o(this, void 0, void 0, function*() {
                    const t = yield fetch(n);
                    if (t.ok) {
                        const n = yield t.json();
                        return n instanceof Array ? D.setFromArray(e, i, n) : D.set(e, i, n)
                    }
                    this.fetchError(t.status)
                })
            }
            static setOnClickHandler(t) {
                const e = D.dom();
                if (0 === e.length)
                    throw new Error("Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()");
                for (const i of e) {
                    const e = i.interactivity.element;
                    e && e.addEventListener("click", t)
                }
            }
            static fetchError(t) {
                console.error("Error tsParticles - fetch status: " + t),
                console.error("Error tsParticles - File config not found")
            }
        }
        class me {
            constructor(t, e, i, n) {
                this.absorbers = t,
                this.container = e,
                this.initialPosition = n;
                let o = (this.options = i).size.value * e.retina.pixelRatio;
                var t = "boolean" == typeof i.size.random ? i.size.random : i.size.random.enable
                  , n = "boolean" == typeof i.size.random ? 1 : i.size.random.minimumValue
                  , t = (t && (o = z.randomInRange(n, o)),
                this.opacity = this.options.opacity,
                this.size = o * e.retina.pixelRatio,
                this.mass = this.size * i.size.density,
                i.size.limit)
                  , n = (this.limit = void 0 !== t ? t * e.retina.pixelRatio : t,
                "string" == typeof i.color ? {
                    value: i.color
                } : i.color);
                this.color = null != (e = k.colorToRgb(n)) ? e : {
                    b: 0,
                    g: 0,
                    r: 0
                },
                this.position = null != (t = this.initialPosition) ? t : this.calcPosition()
            }
            attract(t) {
                const e = t.getPosition()
                  , {dx: i, dy: n, distance: o} = z.getDistances(this.position, e)
                  , s = Math.atan2(i, n) * (180 / Math.PI)
                  , r = this.mass / Math.pow(o, 2);
                if (o < this.size + t.size.value) {
                    const e = .033 * t.size.value;
                    this.size > t.size.value && o < this.size - t.size.value ? t.destroy() : (t.size.value -= e,
                    t.velocity.horizontal += Math.sin(s * (Math.PI / 180)) * r,
                    t.velocity.vertical += Math.cos(s * (Math.PI / 180)) * r),
                    (void 0 === this.limit || this.size < this.limit) && (this.size += e),
                    this.mass += e * this.options.size.density
                } else
                    t.velocity.horizontal += Math.sin(s * (Math.PI / 180)) * r,
                    t.velocity.vertical += Math.cos(s * (Math.PI / 180)) * r
            }
            resize() {
                var t = this.initialPosition;
                this.position = t && z.isPointInside(t, this.container.canvas.size) ? t : this.calcPosition()
            }
            draw(t) {
                t.translate(this.position.x, this.position.y),
                t.beginPath(),
                t.arc(0, 0, this.size, 0, 2 * Math.PI, !1),
                t.closePath(),
                t.fillStyle = k.getStyleFromRgb(this.color, this.opacity),
                t.fill()
            }
            calcPosition() {
                var t = this.container
                  , e = null != (e = this.options.position) ? e : {
                    x: 100 * Math.random(),
                    y: 100 * Math.random()
                };
                return {
                    x: e.x / 100 * t.canvas.size.width,
                    y: e.y / 100 * t.canvas.size.height
                }
            }
        }
        class ye {
            constructor() {
                this.enable = !1,
                this.minimumValue = 1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                void 0 !== t.minimumValue && (this.minimumValue = t.minimumValue))
            }
        }
        class ge {
            constructor() {
                this.density = 5,
                this.random = new ye,
                this.value = 50
            }
            load(t) {
                void 0 !== t && (void 0 !== t.density && (this.density = t.density),
                void 0 !== t.value && (this.value = t.value),
                void 0 !== t.random && ("boolean" == typeof t.random ? this.random.load({
                    enable: t.random
                }) : this.random.load(t.random)),
                void 0 !== t.limit && (this.limit = t.limit))
            }
        }
        class L {
            constructor() {
                this.color = new S,
                this.color.value = "#000000",
                this.opacity = 1,
                this.size = new ge
            }
            load(t) {
                void 0 !== t && (void 0 !== t.color && (this.color = S.create(this.color, t.color)),
                void 0 !== t.opacity && (this.opacity = t.opacity),
                void 0 !== t.position && (this.position = {
                    x: t.position.x,
                    y: t.position.y
                }),
                void 0 !== t.size && this.size.load(t.size))
            }
        }
        (H = H || {}).absorber = "absorber";
        class be {
            constructor(t) {
                this.container = t,
                this.array = [],
                this.absorbers = [],
                this.interactivityAbsorbers = []
            }
            init(t) {
                var e;
                if (t) {
                    t.absorbers && (t.absorbers instanceof Array ? this.absorbers = t.absorbers.map(t=>{
                        const e = new L;
                        return e.load(t),
                        e
                    }
                    ) : (this.absorbers instanceof Array && (this.absorbers = new L),
                    this.absorbers.load(t.absorbers)));
                    const i = null == (t = null == (e = t.interactivity) ? void 0 : e.modes) ? void 0 : t.absorbers;
                    if (i && (i instanceof Array ? this.interactivityAbsorbers = i.map(t=>{
                        const e = new L;
                        return e.load(t),
                        e
                    }
                    ) : (this.interactivityAbsorbers instanceof Array && (this.interactivityAbsorbers = new L),
                    this.interactivityAbsorbers.load(i))),
                    this.absorbers instanceof Array)
                        for (const t of this.absorbers) {
                            const e = new me(this,this.container,t);
                            this.addAbsorber(e)
                        }
                    else {
                        const t = this.absorbers
                          , e = new me(this,this.container,t);
                        this.addAbsorber(e)
                    }
                }
            }
            particleUpdate(t) {
                for (const e of this.array)
                    if (e.attract(t),
                    t.destroyed)
                        break
            }
            draw(t) {
                for (const e of this.array)
                    t.save(),
                    e.draw(t),
                    t.restore()
            }
            stop() {
                this.array = []
            }
            resize() {
                for (const t of this.array)
                    t.resize()
            }
            handleClickMode(e) {
                var i = this.container
                  , n = this.absorbers
                  , o = this.interactivityAbsorbers;
                if (e === H.absorber) {
                    let t;
                    o instanceof Array ? 0 < o.length && (t = z.itemFromArray(o)) : t = o;
                    e = null != t ? t : n instanceof Array ? z.itemFromArray(n) : n,
                    o = i.interactivity.mouse.clickPosition,
                    n = new me(this,this.container,e,o);
                    this.addAbsorber(n)
                }
            }
            addAbsorber(t) {
                this.array.push(t)
            }
            removeAbsorber(t) {
                t = this.array.indexOf(t);
                0 <= t && this.array.splice(t, 1)
            }
        }
        const we = new class {
            constructor() {
                this.id = "absorbers"
            }
            getPlugin(t) {
                return new be(t)
            }
            needsPlugin(t) {
                if (void 0 === t)
                    return !1;
                var e = t.absorbers;
                let i = !1;
                return e instanceof Array ? e.length && (i = !0) : (void 0 !== e || null != (e = null == (e = null == (e = t.interactivity) ? void 0 : e.events) ? void 0 : e.onClick) && e.mode && z.isInArray(H.absorber, t.interactivity.events.onClick.mode)) && (i = !0),
                i
            }
            loadOptions(t, e) {
                if (this.needsPlugin(t) || this.needsPlugin(e)) {
                    const i = t
                      , n = (null != e && e.absorbers && ((null == e ? void 0 : e.absorbers)instanceof Array ? i.absorbers = null == e ? void 0 : e.absorbers.map(t=>{
                        const e = new L;
                        return e.load(t),
                        e
                    }
                    ) : ((i.absorbers instanceof Array || void 0 === i.absorbers) && (i.absorbers = new L),
                    i.absorbers.load(null == e ? void 0 : e.absorbers))),
                    null == (e = null == (t = null == e ? void 0 : e.interactivity) ? void 0 : t.modes) ? void 0 : e.absorbers);
                    n && (n instanceof Array ? i.interactivity.modes.absorbers = n.map(t=>{
                        const e = new L;
                        return e.load(t),
                        e
                    }
                    ) : ((i.interactivity.modes.absorbers instanceof Array || void 0 === i.interactivity.modes.absorbers) && (i.interactivity.modes.absorbers = new L),
                    i.interactivity.modes.absorbers.load(n)))
                }
            }
        }
        ;
        (t = s = s || {}).precise = "precise",
        t.percent = "percent";
        class xe {
            constructor() {
                this.mode = s.percent,
                this.height = 0,
                this.width = 0
            }
            load(t) {
                void 0 !== t && (void 0 !== t.mode && (this.mode = t.mode),
                void 0 !== t.height && (this.height = t.height),
                void 0 !== t.width && (this.width = t.width))
            }
        }
        class ke {
            constructor(t, e, i, n) {
                this.emitters = t,
                this.container = e,
                this.initialPosition = n,
                this.emitterOptions = z.deepExtend({}, i),
                this.position = null != (t = this.initialPosition) ? t : this.calcPosition();
                let o = z.deepExtend({}, this.emitterOptions.particles);
                void 0 === (o = void 0 === o ? {} : o).move && (o.move = {}),
                void 0 === o.move.direction && (o.move.direction = this.emitterOptions.direction),
                this.particlesOptions = o,
                this.size = null != (e = this.emitterOptions.size) ? e : (()=>{
                    const t = new xe;
                    return t.load({
                        height: 0,
                        mode: s.percent,
                        width: 0
                    }),
                    t
                }
                )(),
                this.lifeCount = null != (n = this.emitterOptions.life.count) ? n : -1,
                this.play()
            }
            play() {
                (0 < this.lifeCount || !this.emitterOptions.life.count) && (void 0 === this.startInterval && (this.startInterval = window.setInterval(()=>{
                    this.emit()
                }
                , 1e3 * this.emitterOptions.rate.delay)),
                0 < this.lifeCount && this.prepareToDie())
            }
            pause() {
                var t = this.startInterval;
                void 0 !== t && (clearInterval(t),
                delete this.startInterval)
            }
            resize() {
                var t = this.initialPosition;
                this.position = t && z.isPointInside(t, this.container.canvas.size) ? t : this.calcPosition()
            }
            prepareToDie() {
                var t;
                0 < this.lifeCount && void 0 !== (null == (t = this.emitterOptions.life) ? void 0 : t.duration) && window.setTimeout(()=>{
                    var t;
                    this.pause(),
                    this.lifeCount--,
                    0 < this.lifeCount ? (this.position = this.calcPosition(),
                    window.setTimeout(()=>{
                        this.play()
                    }
                    , null != (t = this.emitterOptions.life.delay) ? t : 0)) : this.destroy()
                }
                , 1e3 * this.emitterOptions.life.duration)
            }
            destroy() {
                this.emitters.removeEmitter(this)
            }
            calcPosition() {
                var t = this.container
                  , e = null != (e = this.emitterOptions.position) ? e : {
                    x: 100 * Math.random(),
                    y: 100 * Math.random()
                };
                return {
                    x: e.x / 100 * t.canvas.size.width,
                    y: e.y / 100 * t.canvas.size.height
                }
            }
            emit() {
                const e = this.container
                  , i = this.position
                  , n = this.size.mode === s.percent ? e.canvas.size.width * this.size.width / 100 : this.size.width
                  , o = this.size.mode === s.percent ? e.canvas.size.height * this.size.height / 100 : this.size.height;
                for (let t = 0; t < this.emitterOptions.rate.quantity; t++)
                    e.particles.addParticle({
                        x: i.x + n * (Math.random() - .5),
                        y: i.y + o * (Math.random() - .5)
                    }, this.particlesOptions)
            }
        }
        class ze {
            constructor() {
                this.quantity = 1,
                this.delay = .1
            }
            load(t) {
                void 0 !== t && (void 0 !== t.quantity && (this.quantity = t.quantity),
                void 0 !== t.delay && (this.delay = t.delay))
            }
        }
        class Ce {
            load(t) {
                void 0 !== t && (void 0 !== t.count && (this.count = t.count),
                void 0 !== t.delay && (this.delay = t.delay),
                void 0 !== t.duration && (this.duration = t.duration))
            }
        }
        class R {
            constructor() {
                this.direction = i.none,
                this.life = new Ce,
                this.rate = new ze
            }
            load(t) {
                void 0 !== t && (void 0 !== t.size && (void 0 === this.size && (this.size = new xe),
                this.size.load(t.size)),
                void 0 !== t.direction && (this.direction = t.direction),
                this.life.load(t.life),
                void 0 !== t.particles && (this.particles = z.deepExtend({}, t.particles)),
                this.rate.load(t.rate),
                void 0 !== t.position && (this.position = {
                    x: t.position.x,
                    y: t.position.y
                }))
            }
        }
        (q = q || {}).emitter = "emitter";
        class Ae {
            constructor(t) {
                this.container = t,
                this.array = [],
                this.emitters = [],
                this.interactivityEmitters = []
            }
            init(t) {
                var e;
                if (t) {
                    t.emitters && (t.emitters instanceof Array ? this.emitters = t.emitters.map(t=>{
                        const e = new R;
                        return e.load(t),
                        e
                    }
                    ) : (this.emitters instanceof Array && (this.emitters = new R),
                    this.emitters.load(t.emitters)));
                    const i = null == (t = null == (e = t.interactivity) ? void 0 : e.modes) ? void 0 : t.emitters;
                    if (i && (i instanceof Array ? this.interactivityEmitters = i.map(t=>{
                        const e = new R;
                        return e.load(t),
                        e
                    }
                    ) : (this.interactivityEmitters instanceof Array && (this.interactivityEmitters = new R),
                    this.interactivityEmitters.load(i))),
                    this.emitters instanceof Array)
                        for (const t of this.emitters) {
                            const e = new ke(this,this.container,t);
                            this.addEmitter(e)
                        }
                    else {
                        const t = this.emitters
                          , e = new ke(this,this.container,t);
                        this.addEmitter(e)
                    }
                }
            }
            play() {
                for (const t of this.array)
                    t.play()
            }
            pause() {
                for (const t of this.array)
                    t.pause()
            }
            stop() {
                this.array = []
            }
            handleClickMode(e) {
                var i = this.container
                  , n = this.emitters
                  , o = this.interactivityEmitters;
                if (e === q.emitter) {
                    let t;
                    o instanceof Array ? 0 < o.length && (t = z.itemFromArray(o)) : t = o;
                    e = null != t ? t : n instanceof Array ? z.itemFromArray(n) : n,
                    o = i.interactivity.mouse.clickPosition,
                    n = new ke(this,this.container,z.deepExtend({}, e),o);
                    this.addEmitter(n)
                }
            }
            resize() {
                for (const t of this.array)
                    t.resize()
            }
            addEmitter(t) {
                this.array.push(t)
            }
            removeEmitter(t) {
                t = this.array.indexOf(t);
                0 <= t && this.array.splice(t, 1)
            }
        }
        const Se = new class {
            constructor() {
                this.id = "emitters"
            }
            getPlugin(t) {
                return new Ae(t)
            }
            needsPlugin(t) {
                if (void 0 === t)
                    return !1;
                var e = t.emitters;
                let i = !1;
                return e instanceof Array ? e.length && (i = !0) : (void 0 !== e || null != (e = null == (e = null == (e = t.interactivity) ? void 0 : e.events) ? void 0 : e.onClick) && e.mode && z.isInArray(q.emitter, t.interactivity.events.onClick.mode)) && (i = !0),
                i
            }
            loadOptions(t, e) {
                if (this.needsPlugin(t) || this.needsPlugin(e)) {
                    const i = t
                      , n = (null != e && e.emitters && ((null == e ? void 0 : e.emitters)instanceof Array ? i.emitters = null == e ? void 0 : e.emitters.map(t=>{
                        const e = new R;
                        return e.load(t),
                        e
                    }
                    ) : ((i.emitters instanceof Array || void 0 === i.emitters) && (i.emitters = new R),
                    i.emitters.load(null == e ? void 0 : e.emitters))),
                    null == (e = null == (t = null == e ? void 0 : e.interactivity) ? void 0 : t.modes) ? void 0 : e.emitters);
                    n && (n instanceof Array ? i.interactivity.modes.emitters = n.map(t=>{
                        const e = new R;
                        return e.load(t),
                        e
                    }
                    ) : ((i.interactivity.modes.emitters instanceof Array || void 0 === i.interactivity.modes.emitters) && (i.interactivity.modes.emitters = new R),
                    i.interactivity.modes.emitters.load(n)))
                }
            }
        }
        ;
        (e = b = b || {}).inline = "inline",
        e.inside = "inside",
        e.outside = "outside",
        e.none = "none",
        (t = w = w || {}).equidistant = "equidistant",
        t.onePerPoint = "one-per-point",
        t.perPoint = "per-point",
        t.randomLength = "random-length",
        t.randomPoint = "random-point";
        class Te {
            constructor() {
                this.color = new S,
                this.width = .5,
                this.opacity = 1
            }
            load(t) {
                var e;
                void 0 !== t && (this.color = S.create(this.color, t.color),
                "string" == typeof this.color.value && (this.opacity = null != (e = k.stringToAlpha(this.color.value)) ? e : this.opacity),
                void 0 !== t.opacity && (this.opacity = t.opacity),
                void 0 !== t.width && (this.width = t.width))
            }
        }
        class Ee {
            constructor() {
                this.enable = !1,
                this.stroke = new Te
            }
            get lineWidth() {
                return this.stroke.width
            }
            set lineWidth(t) {
                this.stroke.width = t
            }
            get lineColor() {
                return this.stroke.color
            }
            set lineColor(t) {
                this.stroke.color = S.create(this.stroke.color, t)
            }
            load(t) {
                var e;
                void 0 !== t && (void 0 !== t.enable && (this.enable = t.enable),
                e = null != (e = t.stroke) ? e : {
                    color: t.lineColor,
                    width: t.lineWidth
                },
                this.stroke.load(e))
            }
        }
        (e = j = j || {}).path = "path",
        e.radius = "radius";
        class Pe {
            constructor() {
                this.radius = 10,
                this.type = j.path
            }
            load(t) {
                void 0 !== t && (void 0 !== t.radius && (this.radius = t.radius),
                void 0 !== t.type && (this.type = t.type))
            }
        }
        class Oe {
            constructor() {
                this.arrangement = w.onePerPoint
            }
            load(t) {
                void 0 !== t && void 0 !== t.arrangement && (this.arrangement = t.arrangement)
            }
        }
        class Me {
            constructor() {
                this.path = [],
                this.size = {
                    height: 0,
                    width: 0
                }
            }
            load(t) {
                void 0 !== t && (void 0 !== t.path && (this.path = t.path),
                void 0 !== t.size && (void 0 !== t.size.width && (this.size.width = t.size.width),
                void 0 !== t.size.height && (this.size.height = t.size.height)))
            }
        }
        class De {
            constructor() {
                this.draw = new Ee,
                this.enable = !1,
                this.inline = new Oe,
                this.move = new Pe,
                this.scale = 1,
                this.type = b.none
            }
            get inlineArrangement() {
                return this.inline.arrangement
            }
            set inlineArrangement(t) {
                this.inline.arrangement = t
            }
            load(t) {
                var e;
                void 0 !== t && (this.draw.load(t.draw),
                void 0 !== (e = null != (e = t.inline) ? e : {
                    arrangement: t.inlineArrangement
                }) && this.inline.load(e),
                this.move.load(t.move),
                void 0 !== t.scale && (this.scale = t.scale),
                void 0 !== t.type && (this.type = t.type),
                void 0 !== t.enable ? this.enable = t.enable : this.enable = this.type !== b.none,
                void 0 !== t.url && (this.url = t.url),
                void 0 !== t.data && ("string" == typeof t.data ? this.data = t.data : (this.data = new Me,
                this.data.load(t.data))),
                void 0 !== t.position && (this.position = {
                    x: t.position.x,
                    y: t.position.y
                }))
            }
        }
        class I {
            constructor(t) {
                this.container = t,
                this.dimension = {
                    height: 0,
                    width: 0
                },
                this.path2DSupported = !!window.Path2D,
                this.options = new De,
                this.polygonMaskMoveRadius = this.options.move.radius * t.retina.pixelRatio
            }
            static polygonBounce(t) {
                t.velocity.horizontal = t.velocity.vertical / 2 - t.velocity.horizontal,
                t.velocity.vertical = t.velocity.horizontal / 2 - t.velocity.vertical
            }
            static drawPolygonMask(t, e, i) {
                var n = k.colorToRgb(i.color);
                if (n) {
                    t.beginPath(),
                    t.moveTo(e[0].x, e[0].y);
                    for (const i of e)
                        t.lineTo(i.x, i.y);
                    t.closePath(),
                    t.strokeStyle = k.getStyleFromRgb(n),
                    t.lineWidth = i.width,
                    t.stroke()
                }
            }
            static drawPolygonMaskPath(t, e, i, n) {
                t.translate(n.x, n.y);
                n = k.colorToRgb(i.color);
                n && (t.strokeStyle = k.getStyleFromRgb(n, i.opacity),
                t.lineWidth = i.width,
                t.stroke(e))
            }
            static parsePaths(e, i, n) {
                const o = [];
                for (const t of e) {
                    const e = t.element.pathSegList
                      , a = e.numberOfItems
                      , l = {
                        x: 0,
                        y: 0
                    };
                    for (let t = 0; t < a; t++) {
                        var s = e.getItem(t)
                          , r = window.SVGPathSeg;
                        switch (s.pathSegType) {
                        case r.PATHSEG_MOVETO_ABS:
                        case r.PATHSEG_LINETO_ABS:
                        case r.PATHSEG_CURVETO_CUBIC_ABS:
                        case r.PATHSEG_CURVETO_QUADRATIC_ABS:
                        case r.PATHSEG_ARC_ABS:
                        case r.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:
                        case r.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:
                            {
                                const e = s;
                                l.x = e.x,
                                l.y = e.y;
                                break
                            }
                        case r.PATHSEG_LINETO_HORIZONTAL_ABS:
                            l.x = s.x;
                            break;
                        case r.PATHSEG_LINETO_VERTICAL_ABS:
                            l.y = s.y;
                            break;
                        case r.PATHSEG_LINETO_REL:
                        case r.PATHSEG_MOVETO_REL:
                        case r.PATHSEG_CURVETO_CUBIC_REL:
                        case r.PATHSEG_CURVETO_QUADRATIC_REL:
                        case r.PATHSEG_ARC_REL:
                        case r.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:
                        case r.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:
                            {
                                const e = s;
                                l.x += e.x,
                                l.y += e.y;
                                break
                            }
                        case r.PATHSEG_LINETO_HORIZONTAL_REL:
                            l.x += s.x;
                            break;
                        case r.PATHSEG_LINETO_VERTICAL_REL:
                            l.y += s.y;
                            break;
                        case r.PATHSEG_UNKNOWN:
                        case r.PATHSEG_CLOSEPATH:
                            continue
                        }
                        o.push({
                            x: l.x * i + n.x,
                            y: l.y * i + n.y
                        })
                    }
                }
                return o
            }
            initAsync(e) {
                return o(this, void 0, void 0, function*() {
                    this.options.load(null == e ? void 0 : e.polygon);
                    var t = this.options;
                    this.polygonMaskMoveRadius = t.move.radius * this.container.retina.pixelRatio,
                    t.enable && (yield this.initRawData())
                })
            }
            resize() {
                const t = this.container
                  , e = this.options;
                e.enable && e.type !== b.none && (this.redrawTimeout && clearTimeout(this.redrawTimeout),
                this.redrawTimeout = window.setTimeout(()=>o(this, void 0, void 0, function*() {
                    yield this.initRawData(!0),
                    t.particles.redraw()
                }), 250))
            }
            stop() {
                delete this.raw,
                delete this.paths
            }
            particlesInitialization() {
                var t = this.options;
                return !(!t.enable || t.type !== b.inline || t.inline.arrangement !== w.onePerPoint && t.inline.arrangement !== w.perPoint || (this.drawPoints(),
                0))
            }
            particlePosition(t, e) {
                var i, n = this.options;
                if (n.enable && 0 < (null != (i = null == (i = this.raw) ? void 0 : i.length) ? i : 0))
                    return i = z.deepExtend({}, t || this.randomPoint()),
                    n.type === b.inline && e && (e.initialPosition = i),
                    i
            }
            particleBounce(t) {
                var e = this.options;
                if (e.enable && e.type !== b.none && e.type !== b.inline) {
                    if (!this.checkInsidePolygon(t.getPosition()))
                        return I.polygonBounce(t),
                        !0
                } else if (e.enable && e.type === b.inline && t.initialPosition && z.getDistance(t.initialPosition, t.getPosition()) > this.polygonMaskMoveRadius)
                    return I.polygonBounce(t),
                    !0;
                return !1
            }
            clickPositionValid(t) {
                var e = this.options;
                return e.enable && e.type !== b.none && e.type !== b.inline && this.checkInsidePolygon(t)
            }
            draw(t) {
                var e;
                if (null != (e = this.paths) && e.length) {
                    const n = this.options
                      , o = n.draw;
                    if (n.enable && o.enable) {
                        var i = this.raw;
                        for (const e of this.paths) {
                            const n = e.path2d
                              , s = this.path2DSupported;
                            t && (s && n && this.offset ? I.drawPolygonMaskPath(t, n, o.stroke, this.offset) : i && I.drawPolygonMask(t, i, o.stroke))
                        }
                    }
                }
            }
            checkInsidePolygon(t) {
                var e, i;
                const n = this.container
                  , o = this.options;
                if (!o.enable || o.type === b.none || o.type === b.inline)
                    return !0;
                if (!this.raw)
                    throw new Error(x.noPolygonFound);
                var s = n.canvas.size
                  , r = null != (e = null == t ? void 0 : t.x) ? e : Math.random() * s.width
                  , a = null != (i = null == t ? void 0 : t.y) ? i : Math.random() * s.height;
                let l = !1;
                for (let t = 0, e = this.raw.length - 1; t < this.raw.length; e = t++) {
                    const i = this.raw[t]
                      , n = this.raw[e];
                    i.y > a != n.y > a && r < (n.x - i.x) * (a - i.y) / (n.y - i.y) + i.x && (l = !l)
                }
                return o.type === b.inside ? l : o.type === b.outside && !l
            }
            parseSvgPath(t, e) {
                if (void 0 !== this.paths && !(null != e && e))
                    return this.raw;
                const i = this.container
                  , n = this.options
                  , o = (new DOMParser).parseFromString(t, "image/svg+xml")
                  , s = o.getElementsByTagName("svg")[0];
                let r = s.getElementsByTagName("path");
                r.length || (r = o.getElementsByTagName("path")),
                this.paths = [];
                for (let t = 0; t < r.length; t++) {
                    const e = r.item(t);
                    e && this.paths.push({
                        element: e,
                        length: e.getTotalLength()
                    })
                }
                var e = i.retina.pixelRatio
                  , t = n.scale / e
                  , a = (this.dimension.width = parseFloat(null != (a = s.getAttribute("width")) ? a : "0") * t,
                this.dimension.height = parseFloat(null != (a = s.getAttribute("height")) ? a : "0") * t,
                null != (a = n.position) ? a : {
                    x: 50,
                    y: 50
                });
                return this.offset = {
                    x: i.canvas.size.width * a.x / (100 * e) - this.dimension.width / 2,
                    y: i.canvas.size.height * a.y / (100 * e) - this.dimension.height / 2
                },
                I.parsePaths(this.paths, t, this.offset)
            }
            downloadSvgPath(i, n) {
                return o(this, void 0, void 0, function*() {
                    var t = this.options
                      , t = i || t.url;
                    if (!t || void 0 !== this.paths && !(null != n && n))
                        return this.raw;
                    const e = yield fetch(t);
                    if (e.ok)
                        return this.parseSvgPath(yield e.text(), n);
                    throw new Error("tsParticles Error - Error occurred during polygon mask download")
                })
            }
            drawPoints() {
                if (this.raw)
                    for (const t of this.raw)
                        this.container.particles.addParticle({
                            x: t.x,
                            y: t.y
                        })
            }
            randomPoint() {
                var t = this.container
                  , e = this.options;
                let i;
                if (e.type === b.inline)
                    switch (e.inline.arrangement) {
                    case w.randomPoint:
                        i = this.getRandomPoint();
                        break;
                    case w.randomLength:
                        i = this.getRandomPointByLength();
                        break;
                    case w.equidistant:
                        i = this.getEquidistantPointByIndex(t.particles.count);
                        break;
                    case w.onePerPoint:
                    case w.perPoint:
                    default:
                        i = this.getPointByIndex(t.particles.count)
                    }
                else
                    i = {
                        x: Math.random() * t.canvas.size.width,
                        y: Math.random() * t.canvas.size.height
                    };
                return this.checkInsidePolygon(i) ? i : this.randomPoint()
            }
            getRandomPoint() {
                if (!this.raw || !this.raw.length)
                    throw new Error(x.noPolygonDataLoaded);
                var t = z.itemFromArray(this.raw);
                return {
                    x: t.x,
                    y: t.y
                }
            }
            getRandomPointByLength() {
                var t, e = this.options;
                if (!this.raw || !this.raw.length || null == (t = this.paths) || !t.length)
                    throw new Error(x.noPolygonDataLoaded);
                const i = z.itemFromArray(this.paths)
                  , n = Math.floor(Math.random() * i.length) + 1
                  , o = i.element.getPointAtLength(n);
                return {
                    x: o.x * e.scale + ((null == (t = this.offset) ? void 0 : t.x) || 0),
                    y: o.y * e.scale + ((null == (t = this.offset) ? void 0 : t.y) || 0)
                }
            }
            getEquidistantPointByIndex(t) {
                var e, i, n = this.container.options, o = this.options;
                if (!this.raw || !this.raw.length || null == (i = this.paths) || !i.length)
                    throw new Error(x.noPolygonDataLoaded);
                let s, r = 0;
                var a = this.paths.reduce((t,e)=>t + e.length, 0) / n.particles.number.value;
                for (const i of this.paths) {
                    const e = a * t - r;
                    if (e <= i.length) {
                        s = i.element.getPointAtLength(e);
                        break
                    }
                    r += i.length
                }
                return {
                    x: (null != (e = null == s ? void 0 : s.x) ? e : 0) * o.scale + (null != (n = null == (i = this.offset) ? void 0 : i.x) ? n : 0),
                    y: (null != (e = null == s ? void 0 : s.y) ? e : 0) * o.scale + (null != (n = null == (i = this.offset) ? void 0 : i.y) ? n : 0)
                }
            }
            getPointByIndex(t) {
                if (!this.raw || !this.raw.length)
                    throw new Error(x.noPolygonDataLoaded);
                t = this.raw[t % this.raw.length];
                return {
                    x: t.x,
                    y: t.y
                }
            }
            createPath2D() {
                var i, t, e = this.options;
                if (this.path2DSupported && null != (i = this.paths) && i.length)
                    for (const i of this.paths) {
                        var n = null == (t = i.element) ? void 0 : t.getAttribute("d");
                        if (n) {
                            const t = new Path2D(n)
                              , o = document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGMatrix()
                              , s = new Path2D
                              , r = o.scale(e.scale);
                            s.addPath ? (s.addPath(t, r),
                            i.path2d = s) : delete i.path2d
                        } else
                            delete i.path2d;
                        !i.path2d && this.raw && (i.path2d = new Path2D,
                        i.path2d.moveTo(this.raw[0].x, this.raw[0].y),
                        this.raw.forEach((t,e)=>{
                            0 < e && null != (e = i.path2d) && e.lineTo(t.x, t.y)
                        }
                        ),
                        i.path2d.closePath())
                    }
            }
            initRawData(n) {
                return o(this, void 0, void 0, function*() {
                    var e = this.options;
                    if (e.url)
                        this.raw = yield this.downloadSvgPath(e.url, n);
                    else if (e.data) {
                        const i = e.data;
                        let t;
                        if ("string" != typeof i) {
                            const n = i.path instanceof Array ? i.path.map(t=>`<path d="${t}" />`).join("") : `<path d="${i.path}" />`;
                            t = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="${i.size.width}" height="${i.size.height}">${n}</svg>`
                        } else
                            t = i;
                        this.raw = this.parseSvgPath(t, n)
                    }
                    this.createPath2D()
                })
            }
        }
        const Le = new class {
            constructor() {
                this.id = "polygonMask"
            }
            getPlugin(t) {
                return new I(t)
            }
            needsPlugin(t) {
                var e;
                return null != (e = null == (e = null == t ? void 0 : t.polygon) ? void 0 : e.enable) ? e : void 0 !== (null == (e = null == t ? void 0 : t.polygon) ? void 0 : e.type) && t.polygon.type !== b.none
            }
            loadOptions(t, e) {
                if (this.needsPlugin(e)) {
                    const i = t;
                    void 0 === i.polygon && (i.polygon = new De),
                    i.polygon.load(null == e ? void 0 : e.polygon)
                }
            }
        }
          , Re = new class extends class {
            constructor() {
                this.initialized = !1;
                var t = new V
                  , e = new B
                  , i = new F;
                C.addShapeDrawer(u.line, new W),
                C.addShapeDrawer(u.circle, new $),
                C.addShapeDrawer(u.edge, t),
                C.addShapeDrawer(u.square, t),
                C.addShapeDrawer(u.triangle, new G),
                C.addShapeDrawer(u.star, new X),
                C.addShapeDrawer(u.polygon, new Y),
                C.addShapeDrawer(u.char, e),
                C.addShapeDrawer(u.character, e),
                C.addShapeDrawer(u.image, i),
                C.addShapeDrawer(u.images, i)
            }
            init() {
                this.initialized || (this.initialized = !0)
            }
            loadFromArray(t, e, i) {
                return o(this, void 0, void 0, function*() {
                    return D.loadFromArray(t, e, i)
                })
            }
            load(t, e) {
                return o(this, void 0, void 0, function*() {
                    return D.load(t, e)
                })
            }
            loadJSON(t, e) {
                return D.loadJSON(t, e)
            }
            setOnClickHandler(t) {
                D.setOnClickHandler(t)
            }
            dom() {
                return D.dom()
            }
            domItem(t) {
                return D.domItem(t)
            }
            addShape(t, e, i, n, o) {
                n = "function" == typeof e ? {
                    afterEffect: n,
                    destroy: o,
                    draw: e,
                    init: i
                } : e;
                C.addShapeDrawer(t, n)
            }
            addPreset(t, e) {
                C.addPreset(t, e)
            }
            addPlugin(t) {
                C.addPlugin(t)
            }
        }
        {
            constructor() {
                super(),
                this.addPlugin(we),
                this.addPlugin(Se),
                this.addPlugin(Le)
            }
        }
          , {particlesJS: Ie, pJSDom: Ne} = (Re.init(),
        _ = Re,
        (t = (t,e)=>_.load(t, e)).load = (t,e,i)=>{
            _.loadJSON(t, e).then(t=>{
                t && i(t)
            }
            )
        }
        ,
        t.setOnClickHandler = t=>{
            _.setOnClickHandler(t)
        }
        ,
        {
            particlesJS: t,
            pJSDom: _.dom()
        })
    }
}));
